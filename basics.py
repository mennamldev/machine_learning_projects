{"cells":[{"cell_type":"markdown","metadata":{"id":"V5If5iVo8bPE"},"source":["System Speciications"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":216,"status":"ok","timestamp":1734612369197,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"dAyOhGh68Xks","outputId":"1e66262d-2147-438d-d241-b597992bb178"},"outputs":[{"name":"stdout","output_type":"stream","text":["MemTotal:       13290460 kB\n","MemFree:         9137004 kB\n","MemAvailable:   12150028 kB\n","Buffers:          113100 kB\n","Cached:          3063488 kB\n","SwapCached:            0 kB\n","Active:           678152 kB\n","Inactive:        3196512 kB\n","Active(anon):       1480 kB\n","Inactive(anon):   698692 kB\n","Active(file):     676672 kB\n","Inactive(file):  2497820 kB\n","Unevictable:           8 kB\n","Mlocked:               8 kB\n","SwapTotal:             0 kB\n","SwapFree:              0 kB\n","Dirty:               356 kB\n","Writeback:             0 kB\n","AnonPages:        698096 kB\n","Mapped:           331776 kB\n","Shmem:              2088 kB\n","KReclaimable:     158944 kB\n","Slab:             200600 kB\n","SReclaimable:     158944 kB\n","SUnreclaim:        41656 kB\n","KernelStack:        5824 kB\n","PageTables:        12052 kB\n","SecPageTables:         0 kB\n","NFS_Unstable:          0 kB\n","Bounce:                0 kB\n","WritebackTmp:          0 kB\n","CommitLimit:     6645228 kB\n","Committed_AS:    3029056 kB\n","VmallocTotal:   34359738367 kB\n","VmallocUsed:       12168 kB\n","VmallocChunk:          0 kB\n","Percpu:             1120 kB\n","HardwareCorrupted:     0 kB\n","AnonHugePages:         0 kB\n","ShmemHugePages:        0 kB\n","ShmemPmdMapped:        0 kB\n","FileHugePages:         0 kB\n","FilePmdMapped:         0 kB\n","CmaTotal:              0 kB\n","CmaFree:               0 kB\n","Unaccepted:            0 kB\n","HugePages_Total:       0\n","HugePages_Free:        0\n","HugePages_Rsvd:        0\n","HugePages_Surp:        0\n","Hugepagesize:       2048 kB\n","Hugetlb:               0 kB\n","DirectMap4k:       68408 kB\n","DirectMap2M:     5171200 kB\n","DirectMap1G:    10485760 kB\n"]}],"source":["!cat /proc/meminfo"]},{"cell_type":"markdown","metadata":{"id":"BIRNEg3g7Qzk"},"source":["Installing Libraries"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5047,"status":"ok","timestamp":1734612606763,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"CzTWaxqA9tPx","outputId":"572738ea-4a6d-452c-dd54-75296dd052f6"},"outputs":[{"name":"stdout","output_type":"stream","text":["Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (2.2.2)\n","Requirement already satisfied: numpy>=1.22.4 in /usr/local/lib/python3.10/dist-packages (from pandas) (1.26.4)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2024.2)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.10/dist-packages (from pandas) (2024.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas) (1.17.0)\n"]}],"source":["!pip install pandas"]},{"cell_type":"markdown","metadata":{"id":"MOt3xnF87vKP"},"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zh7wIGD3-DZ3"},"outputs":[],"source":["import pandas as pd"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ppwr_0j--HU6"},"outputs":[],"source":["df = pd.read_csv(\"/content/Students.csv\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"executionInfo":{"elapsed":271,"status":"ok","timestamp":1734612844976,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"UXxvAc8J-nPz","outputId":"57ae6661-969a-4a98-a432-a754e76ce0a2"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"df\",\n  \"rows\": 82,\n  \"fields\": [\n    {\n      \"column\": \"ID;Sex;Sex_coded;Blood_group;Blood_group_coded;Rhesus_factor;Rhesus_factor_coded;Smoking;Smoking_coded;Size_cm;Weight_kg;Points_exam;Grade\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 82,\n        \"samples\": [\n          \"7;M;0;A;1;+;1;no;0;179;73;8;3\",\n          \"24;M;0;0;0;+;1;no;0;190;98;1;5\",\n          \"25;M;0;A;1;+;1;no;0;193;83;7;4\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe","variable_name":"df"},"text/html":["\n","  <div id=\"df-8e6fc784-6845-43ed-9e70-aff8024a6b3b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID;Sex;Sex_coded;Blood_group;Blood_group_coded;Rhesus_factor;Rhesus_factor_coded;Smoking;Smoking_coded;Size_cm;Weight_kg;Points_exam;Grade</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>24;M;0;0;0;+;1;no;0;190;98;1;5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5;M;0;0;0;+;1;no;0;187;81;2;5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>54;F;1;A;1;+;1;no;0;171;54;2;5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>9;M;0;0;0;+;1;no;0;185;70;3;5</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>34;F;1;A;1;+;1;no;0;166;53;3;5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8e6fc784-6845-43ed-9e70-aff8024a6b3b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8e6fc784-6845-43ed-9e70-aff8024a6b3b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8e6fc784-6845-43ed-9e70-aff8024a6b3b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9fb98b81-9fa5-44f5-8369-94a0c25244c2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9fb98b81-9fa5-44f5-8369-94a0c25244c2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9fb98b81-9fa5-44f5-8369-94a0c25244c2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["  ID;Sex;Sex_coded;Blood_group;Blood_group_coded;Rhesus_factor;Rhesus_factor_coded;Smoking;Smoking_coded;Size_cm;Weight_kg;Points_exam;Grade\n","0                     24;M;0;0;0;+;1;no;0;190;98;1;5                                                                                        \n","1                      5;M;0;0;0;+;1;no;0;187;81;2;5                                                                                        \n","2                     54;F;1;A;1;+;1;no;0;171;54;2;5                                                                                        \n","3                      9;M;0;0;0;+;1;no;0;185;70;3;5                                                                                        \n","4                     34;F;1;A;1;+;1;no;0;166;53;3;5                                                                                        "]},"execution_count":14,"metadata":{},"output_type":"execute_result"}],"source":["df.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":194,"status":"ok","timestamp":1734612892942,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"XxhBhT9y-39P","outputId":"b280c96a-2cd8-4ec3-b423-17d18a065315"},"outputs":[{"name":"stdout","output_type":"stream","text":["Machine Learning\n"]}],"source":["print(\"Machine Learning\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":305,"status":"ok","timestamp":1734612912848,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"BFnKHo8b_DpX","outputId":"46c42415-5b73-482c-c0ee-775d06fbaeba"},"outputs":[{"name":"stdout","output_type":"stream","text":["sample_data  Students.csv\n"]}],"source":["!ls"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"O5dB9BZO_IhD"},"outputs":[],"source":["df = pd.read_table(\"/content/diet_paired.txt\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":193,"status":"ok","timestamp":1734613071838,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"yW_EuiqF_UU7","outputId":"0aa5d68b-0f6d-48ee-fd16-677cb60837f1"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"df\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"Patient\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 1,\n        \"max\": 10,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          9,\n          2,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"before_diet\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.823610987829652,\n        \"min\": 85.9,\n        \"max\": 110.2,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          110.2,\n          92.7,\n          90.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"after_diet\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.807969186508153,\n        \"min\": 83.4,\n        \"max\": 102.9,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          102.9,\n          85.8,\n          92.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe","variable_name":"df"},"text/html":["\n","  <div id=\"df-74f13b07-699c-4046-8f30-26919d6a07f0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Patient</th>\n","      <th>before_diet</th>\n","      <th>after_diet</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>86.2</td>\n","      <td>83.4</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>92.7</td>\n","      <td>85.8</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>102.1</td>\n","      <td>98.3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>85.9</td>\n","      <td>83.6</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>96.3</td>\n","      <td>91.1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-74f13b07-699c-4046-8f30-26919d6a07f0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-74f13b07-699c-4046-8f30-26919d6a07f0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-74f13b07-699c-4046-8f30-26919d6a07f0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-61433a17-021d-401f-9483-138341f3e80d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-61433a17-021d-401f-9483-138341f3e80d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-61433a17-021d-401f-9483-138341f3e80d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["   Patient  before_diet  after_diet\n","0        1         86.2        83.4\n","1        2         92.7        85.8\n","2        3        102.1        98.3\n","3        4         85.9        83.6\n","4        5         96.3        91.1"]},"execution_count":19,"metadata":{},"output_type":"execute_result"}],"source":["df.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ttnCr-Gl_vXB"},"outputs":[],"source":["df = pd.read_csv(\"/content/diet_paired.txt\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":208,"status":"ok","timestamp":1734613113217,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"rLUMUkU7_3Ny","outputId":"cece48b7-569d-451c-e032-82b9b8ab079f"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"df\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"Patient\\tbefore_diet\\tafter_diet\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"9\\t110.2\\t102.9\",\n          \"2\\t92.7\\t85.8\",\n          \"6\\t90.2\\t92.7\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe","variable_name":"df"},"text/html":["\n","  <div id=\"df-9e2a85cc-2b4f-4e4d-b985-80bbbb75d140\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Patient\\tbefore_diet\\tafter_diet</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1\\t86.2\\t83.4</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2\\t92.7\\t85.8</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3\\t102.1\\t98.3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4\\t85.9\\t83.6</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5\\t96.3\\t91.1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9e2a85cc-2b4f-4e4d-b985-80bbbb75d140')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9e2a85cc-2b4f-4e4d-b985-80bbbb75d140 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9e2a85cc-2b4f-4e4d-b985-80bbbb75d140');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d29ddc54-9797-4de7-9620-441bb55b4c51\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d29ddc54-9797-4de7-9620-441bb55b4c51')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d29ddc54-9797-4de7-9620-441bb55b4c51 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["  Patient\\tbefore_diet\\tafter_diet\n","0                    1\\t86.2\\t83.4\n","1                    2\\t92.7\\t85.8\n","2                   3\\t102.1\\t98.3\n","3                    4\\t85.9\\t83.6\n","4                    5\\t96.3\\t91.1"]},"execution_count":21,"metadata":{},"output_type":"execute_result"}],"source":["df.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-KMyeT21_5bm"},"outputs":[],"source":["df = pd.read_table(\"/content/Students.csv\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"executionInfo":{"elapsed":222,"status":"ok","timestamp":1734613158700,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"oDYbZj2iACqO","outputId":"87080f35-40db-4173-f0c5-bd844ba40c48"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"df\",\n  \"rows\": 82,\n  \"fields\": [\n    {\n      \"column\": \"ID;Sex;Sex_coded;Blood_group;Blood_group_coded;Rhesus_factor;Rhesus_factor_coded;Smoking;Smoking_coded;Size_cm;Weight_kg;Points_exam;Grade\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 82,\n        \"samples\": [\n          \"7;M;0;A;1;+;1;no;0;179;73;8;3\",\n          \"24;M;0;0;0;+;1;no;0;190;98;1;5\",\n          \"25;M;0;A;1;+;1;no;0;193;83;7;4\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe","variable_name":"df"},"text/html":["\n","  <div id=\"df-3f4a4b87-bc81-4974-867c-6b3f3a7c5c4b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID;Sex;Sex_coded;Blood_group;Blood_group_coded;Rhesus_factor;Rhesus_factor_coded;Smoking;Smoking_coded;Size_cm;Weight_kg;Points_exam;Grade</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>24;M;0;0;0;+;1;no;0;190;98;1;5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5;M;0;0;0;+;1;no;0;187;81;2;5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>54;F;1;A;1;+;1;no;0;171;54;2;5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>9;M;0;0;0;+;1;no;0;185;70;3;5</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>34;F;1;A;1;+;1;no;0;166;53;3;5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3f4a4b87-bc81-4974-867c-6b3f3a7c5c4b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3f4a4b87-bc81-4974-867c-6b3f3a7c5c4b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3f4a4b87-bc81-4974-867c-6b3f3a7c5c4b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-abadba27-4941-4a16-a93c-4ce8b9a28c71\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-abadba27-4941-4a16-a93c-4ce8b9a28c71')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-abadba27-4941-4a16-a93c-4ce8b9a28c71 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["  ID;Sex;Sex_coded;Blood_group;Blood_group_coded;Rhesus_factor;Rhesus_factor_coded;Smoking;Smoking_coded;Size_cm;Weight_kg;Points_exam;Grade\n","0                     24;M;0;0;0;+;1;no;0;190;98;1;5                                                                                        \n","1                      5;M;0;0;0;+;1;no;0;187;81;2;5                                                                                        \n","2                     54;F;1;A;1;+;1;no;0;171;54;2;5                                                                                        \n","3                      9;M;0;0;0;+;1;no;0;185;70;3;5                                                                                        \n","4                     34;F;1;A;1;+;1;no;0;166;53;3;5                                                                                        "]},"execution_count":23,"metadata":{},"output_type":"execute_result"}],"source":["df.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":200,"status":"ok","timestamp":1734613173741,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"LfqDn6C6AEjy","outputId":"fccff2e1-7de2-43e3-8656-f6d1a306667f"},"outputs":[{"name":"stdout","output_type":"stream","text":["diet_paired.txt  sample_data  Students.csv\n"]}],"source":["!ls"]},{"cell_type":"markdown","metadata":{"id":"Un30jydNJt2a"},"source":["#print function"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":215,"status":"ok","timestamp":1734615783739,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"X6a_wpqGJwbr","outputId":"d334afc0-5b9a-426a-c7d7-39f100f5ba1f"},"outputs":[{"name":"stdout","output_type":"stream","text":["Machine Learning\n"]}],"source":["print(\"Machine Learning\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":244,"status":"ok","timestamp":1734615917865,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"RFd2m8hgKFb3","outputId":"272a23d4-99a9-469a-9256-cf78dabe953a"},"outputs":[{"name":"stdout","output_type":"stream","text":["Machin learning is fun\n"]}],"source":["print(\"Machin learning\" + \" is fun\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":215,"status":"ok","timestamp":1734615929844,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"vDcB6o4PKgUS","outputId":"a0366c37-7b78-4ca7-ae8c-4b9a345226be"},"outputs":[{"name":"stdout","output_type":"stream","text":["8\n"]}],"source":["print(8)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":201,"status":"ok","timestamp":1734615940654,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"TQAXyCIGKpCU","outputId":"c8042c21-2399-4255-e3dc-d2763a69e84e"},"outputs":[{"name":"stdout","output_type":"stream","text":["11\n"]}],"source":["print(6+5)"]},{"cell_type":"markdown","metadata":{"id":"J2Qs-ubULESL"},"source":["#Basic data typs:\n","1. int\n","2. float\n","3. *str*"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":216,"status":"ok","timestamp":1734616119078,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"KWS1L1SsLOcF","outputId":"dd988497-a48b-42e5-f6f0-271c37792f70"},"outputs":[{"data":{"text/plain":["int"]},"execution_count":31,"metadata":{},"output_type":"execute_result"}],"source":["type(0)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":252,"status":"ok","timestamp":1734616141514,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"7SN9k5cNLXRA","outputId":"e7c6a345-e1ce-40f4-a033-08da1804ce01"},"outputs":[{"data":{"text/plain":["float"]},"execution_count":32,"metadata":{},"output_type":"execute_result"}],"source":["type(0.7)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":289,"status":"ok","timestamp":1734616156425,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"lhSoyLxRLcxo","outputId":"76d847a1-0343-4166-a8d4-e992561b974c"},"outputs":[{"data":{"text/plain":["str"]},"execution_count":33,"metadata":{},"output_type":"execute_result"}],"source":["type(\"jan\")"]},{"cell_type":"markdown","metadata":{"id":"Ht7SMOjELnhj"},"source":["#Contants and variables"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":192,"status":"ok","timestamp":1734616367494,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"l35dCpX1LrT_","outputId":"e92cae8d-e707-41a5-bb36-5b68e3eed75a"},"outputs":[{"name":"stdout","output_type":"stream","text":["Iron Man\n"]}],"source":["super_hero = \"Iron Man\"\n","print(super_hero)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":185,"status":"ok","timestamp":1734616414261,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"r2AeE8TTMEBM","outputId":"316e7bb3-4c9f-4c9f-98e9-169206202115"},"outputs":[{"name":"stdout","output_type":"stream","text":["Captin america\n"]}],"source":["super_hero = \"Captin america\"\n","print(super_hero)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1734616512802,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"l4q0B1J_Mdmt","outputId":"1c7e1cea-ed5e-4c0a-e091-e2747e7e7aff"},"outputs":[{"name":"stdout","output_type":"stream","text":["a\n","v\n","y\n"]}],"source":["hero1,hero2,hero3 = \"a\",\"v\",\"y\"\n","print(hero1)\n","print(hero2)\n","print(hero3)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":212,"status":"ok","timestamp":1734616582537,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"678mm2XsMx0w","outputId":"6615210a-1d4f-42e7-a0d6-38ec4b98bfea"},"outputs":[{"name":"stdout","output_type":"stream","text":["45\n","45\n","45\n"]}],"source":["x = y = z = 45\n","print(x)\n","print(y)\n","print(z)"]},{"cell_type":"markdown","metadata":{"id":"Oq3aUq7SNSZ9"},"source":["#input Function"]},{"cell_type":"markdown","metadata":{"id":"Fwn3KV_ONuu8"},"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3606,"status":"ok","timestamp":1734616877812,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"0emVBc3-NVgs","outputId":"b3dc94d9-fb09-429e-911b-47f5aff8180f"},"outputs":[{"name":"stdout","output_type":"stream","text":["enter the first number: 7\n","enter the second number: 7\n","14\n"]}],"source":["number1 = int(input(\"enter the first number: \"))\n","number2 = int(input(\"enter the second number: \"))\n","sum = number1 + number2\n","print(sum)"]},{"cell_type":"markdown","metadata":{"id":"7mvL1glUUuWh"},"source":["#. changing data type in py"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":196,"status":"ok","timestamp":1734618670079,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"MW3xmuIUUyE0","outputId":"982045d7-69fa-4f6c-e4ef-bab61c45a79a"},"outputs":[{"name":"stdout","output_type":"stream","text":["5.0\n"]},{"data":{"text/plain":["float"]},"execution_count":53,"metadata":{},"output_type":"execute_result"}],"source":["num = 5\n","type(num)\n","float(num)\n","print(float(num))\n","type(float(num))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":288,"status":"ok","timestamp":1734630753426,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"LxSOkLfGU20w","outputId":"7d8a860b-b936-45a7-8bc0-8c586287c896"},"outputs":[{"name":"stdout","output_type":"stream","text":["6\n"]}],"source":["# integers\n","a = 6\n","print(a)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":246,"status":"ok","timestamp":1734630776843,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"-ylUYvE3DMHx","outputId":"113845dd-842b-44d7-9a3a-6deb0f229392"},"outputs":[{"data":{"text/plain":["int"]},"execution_count":55,"metadata":{},"output_type":"execute_result"}],"source":["type(a)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1734630826538,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"t7sjrGHbDR0X","outputId":"cdd8be93-d6ae-4421-d0c1-98e3faea9d46"},"outputs":[{"name":"stdout","output_type":"stream","text":["7.6\n"]},{"data":{"text/plain":["float"]},"execution_count":56,"metadata":{},"output_type":"execute_result"}],"source":["#float\n","b = 7.6\n","print(b)\n","type(b)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":235,"status":"ok","timestamp":1734630867382,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"Lmi5t-91Dd-R","outputId":"3b435c14-a222-4bde-a06b-fb08ed7a35de"},"outputs":[{"name":"stdout","output_type":"stream","text":["(4+6j)\n"]},{"data":{"text/plain":["complex"]},"execution_count":57,"metadata":{},"output_type":"execute_result"}],"source":["#complex numbers\n","c= 4 + 6j\n","print(c)\n","type(c)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"N2rOO0lmDn9v"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"-H9eRDBrDxEK"},"source":["convertion one type to another"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1734630953472,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"EC8GkRI1D0Sv","outputId":"aa65a920-0f31-4cf2-dc18-8b86dd43e5c5"},"outputs":[{"name":"stdout","output_type":"stream","text":["10\n"]},{"data":{"text/plain":["int"]},"execution_count":58,"metadata":{},"output_type":"execute_result"}],"source":["x = 10\n","print(x)\n","type(x)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":234,"status":"ok","timestamp":1734630978227,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"Mwrhvz4BD87J","outputId":"99ac041b-548a-4da0-9cd2-b880ba600de9"},"outputs":[{"name":"stdout","output_type":"stream","text":["10.0\n"]},{"data":{"text/plain":["float"]},"execution_count":60,"metadata":{},"output_type":"execute_result"}],"source":["y = float(x)\n","print(y)\n","type(y)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1734631135672,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"s3YMVkaUD_9b","outputId":"808e9a32-b9b3-4c7f-b7f9-2b6e6bb39a34"},"outputs":[{"name":"stdout","output_type":"stream","text":["0.3\n"]},{"data":{"text/plain":["float"]},"execution_count":61,"metadata":{},"output_type":"execute_result"}],"source":["# float to int\n","x = 0.3\n","print(x)\n","type(x)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":188,"status":"ok","timestamp":1734631153764,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"hysoUtIAEpeo","outputId":"482c80d9-afc5-457b-a752-8675f8beb7d0"},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'int'>\n"]}],"source":["y = int(x)\n","print(type(y))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1734631251180,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"ANQXOjYBEt4C","outputId":"f8cdf0f7-839d-4f0f-abef-cb8e48d893c5"},"outputs":[{"name":"stdout","output_type":"stream","text":["True\n"]},{"data":{"text/plain":["bool"]},"execution_count":63,"metadata":{},"output_type":"execute_result"}],"source":["#boolean\n","a = True\n","print(a)\n","type(a)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"TzuAJSG4FFrA"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"4WmwmngTFWAS"},"source":["#Types of data in python\n","\n","mutable objects\n","1. lists\n","2. sets\n","3. dectionary\n","\n","unmutable objects\n","1. int\n","2. float\n","3. tuple\n","4. boolean\n","5. str"]},{"cell_type":"markdown","metadata":{"id":"5lAtT3p-F_py"},"source":["List"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":187,"status":"ok","timestamp":1734631728843,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"6BBsT-9NGA7D","outputId":"9aa37e81-398f-4e9d-ebe6-f03d1b9f9381"},"outputs":[{"name":"stdout","output_type":"stream","text":["[1, 3, 4, 5]\n"]},{"data":{"text/plain":["list"]},"execution_count":64,"metadata":{},"output_type":"execute_result"}],"source":["# list should be included in square brackets []\n","my_list = [1,3,4,5]\n","print(my_list)\n","type(my_list)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":181,"status":"ok","timestamp":1734631841464,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"bKBlqq0SG6Sf","outputId":"bac1abab-e318-4b50-c9e7-75636601f2f9"},"outputs":[{"name":"stdout","output_type":"stream","text":["[3, 6, 9.7, 'ff', True]\n"]}],"source":["# list can have multi data types\n","my_list = [3,6,9.7,\"ff\", True]\n","print(my_list)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":215,"status":"ok","timestamp":1734631921918,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"ujmjH_1XHShn","outputId":"866d7406-b2c8-4347-e9a6-bf916472ea17"},"outputs":[{"name":"stdout","output_type":"stream","text":["[3, 6, 9.7, 'ff', True, 6]\n"]}],"source":["# add element to a list\n","my_list = [3,6,9.7,\"ff\", True]\n","my_list.append(6)\n","print(my_list)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":246,"status":"ok","timestamp":1734631980740,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"ghL83wvuHpbW","outputId":"b2c814ed-d1be-4bf2-dd47-dbfd551ae66b"},"outputs":[{"name":"stdout","output_type":"stream","text":["3\n"]}],"source":["# print elements of a list using index\n","print(my_list[0])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":212,"status":"ok","timestamp":1734631999761,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"ao-EY-4RH3rk","outputId":"10be2907-7e6f-4b49-8629-ef581aaca44c"},"outputs":[{"name":"stdout","output_type":"stream","text":["9.7\n"]}],"source":["print(my_list[2])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":192,"status":"ok","timestamp":1734632058136,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"qRTxowMpH8bm","outputId":"b62de229-2ef2-4eaf-d0a6-130880c4ca03"},"outputs":[{"name":"stdout","output_type":"stream","text":["[1, 2, 3, 4, 1, 2, 3]\n"]}],"source":["# list allow duplicate val\n","list1 = [1,2,3,4,1,2,3]\n","print(list1)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":337,"status":"ok","timestamp":1734632124984,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"GTbN9gpyIKsP","outputId":"702deb1a-b490-495e-b223-59bafab99470"},"outputs":[{"data":{"text/plain":["7"]},"execution_count":72,"metadata":{},"output_type":"execute_result"}],"source":["len(list1)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":243,"status":"ok","timestamp":1734633673221,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"e4kQmForIPQm","outputId":"cd36b2a4-f8b1-429d-d525-bb9c6e5c6508"},"outputs":[{"name":"stdout","output_type":"stream","text":["[]\n"]}],"source":["#installing empty list\n","list2 = []\n","print(list2)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1734633708122,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"ZhEziitJOU9g","outputId":"17cee338-ec3e-45ec-f5d8-df80adb14667"},"outputs":[{"name":"stdout","output_type":"stream","text":["[5, 5]\n"]}],"source":["list2.append(5)\n","print(list2)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":231,"status":"ok","timestamp":1734633876511,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"indgiZahOair","outputId":"ee60a5db-b6fb-4fd5-f026-634e263e3c8d"},"outputs":[{"name":"stdout","output_type":"stream","text":["[3, 6, 9.7, 'ff', True, 5]\n","[6, 9.7, 'ff', True, 5]\n"]}],"source":["#delete item in a list\n","list2 = [3,6,9.7,\"ff\", True,5]\n","print(list2)\n","del list2[0]\n","print(list2)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":232,"status":"ok","timestamp":1734633953868,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"xE6r8EsHO7ZS","outputId":"617afe97-88e9-4bde-92f1-2980edb2d599"},"outputs":[{"name":"stdout","output_type":"stream","text":["[5, 9, 8, 4, 5, 4, 8, 7, 7]\n"]}],"source":["# join two lists\n","list3 = [5,9,8,4,5]\n","list4 = [4,8,7,7]\n","list5 = list3 + list4\n","print(list5)"]},{"cell_type":"markdown","metadata":{"id":"IHPswMQFPdGd"},"source":["Tuple"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":229,"status":"ok","timestamp":1734634060807,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"Cj1CjSoRPfgG","outputId":"4e5ee9c3-3ee5-46a1-964e-6048b10025ab"},"outputs":[{"name":"stdout","output_type":"stream","text":["(1, 5, 8, 4)\n"]},{"data":{"text/plain":["tuple"]},"execution_count":80,"metadata":{},"output_type":"execute_result"}],"source":["tuple1 = (1,5,8,4)\n","print(tuple1)\n","type(tuple1)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":519,"status":"ok","timestamp":1734638539914,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"y9_b5EoYPzm2","outputId":"c602c8af-b691-479d-9af6-f4d4b87004b8"},"outputs":[{"name":"stdout","output_type":"stream","text":["(1, 5, 8, 4, 'ff', True)\n"]}],"source":["#tuple allow multi data type in a single tuble\n","tuple2 = (1,5,8,4,\"ff\",True)\n","print(tuple2)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":217,"status":"ok","timestamp":1734638674917,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"Flo5tp7mhFCU","outputId":"9dfe332c-b698-4c63-cdcd-90339e25d7da"},"outputs":[{"name":"stdout","output_type":"stream","text":["[4, 6, 7]\n","(4, 6, 7)\n"]}],"source":["# converting list to tuple\n","my_list = [4,6,7]\n","print(my_list)\n","my_tuple = tuple(my_list)\n","print(my_tuple)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":212,"status":"ok","timestamp":1734646726541,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"3qX4ilKThaGx","outputId":"525a369b-20ee-4509-b62e-6b81d603d0d6"},"outputs":[{"name":"stdout","output_type":"stream","text":["4\n","6\n"]}],"source":["print(my_tuple[0])\n","print(my_tuple[1])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":180},"executionInfo":{"elapsed":480,"status":"error","timestamp":1734646767633,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"qqAslT5fAF9e","outputId":"07c0017e-26ee-42ab-913b-5befc0b43a1d"},"outputs":[{"ename":"AttributeError","evalue":"'tuple' object has no attribute 'append'","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-5-6b16393320f6>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mmy_tuple\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mAttributeError\u001b[0m: 'tuple' object has no attribute 'append'"]}],"source":["my_tuple.append(5)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":185,"status":"ok","timestamp":1734646811819,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"sBRRfz4BARzx","outputId":"20beea3d-330c-41a9-cddf-cee92db8cfbb"},"outputs":[{"name":"stdout","output_type":"stream","text":["3\n"]}],"source":["print(len(my_tuple))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":211,"status":"ok","timestamp":1734646823140,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"k-sp0J1cAcqX","outputId":"7d6d770a-bbee-463c-9947-6ff9c2fe601f"},"outputs":[{"data":{"text/plain":["set"]},"execution_count":7,"metadata":{},"output_type":"execute_result"}],"source":["set"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1734646878768,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"KrUMu4n-AfUW","outputId":"3a44381c-33b5-4fed-94b1-1a772edd358a"},"outputs":[{"name":"stdout","output_type":"stream","text":["{1, 2, 3, 4, 8}\n"]},{"data":{"text/plain":["set"]},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":["# set --> {}\n","\n","my_set = {1,2,3,4,8}\n","print(my_set)\n","type(my_set)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":180},"executionInfo":{"elapsed":202,"status":"error","timestamp":1734646903625,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"Sb3fNbelAsxI","outputId":"02d58b62-df2a-4e74-8601-d17931ea0d68"},"outputs":[{"ename":"TypeError","evalue":"'set' object is not subscriptable","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-9-502d757570ee>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmy_set\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: 'set' object is not subscriptable"]}],"source":["print(my_set[0])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1734646983074,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"PHjREc8EAzE-","outputId":"6abb11d2-1e63-4da0-e0c5-50c5d1a9ea0c"},"outputs":[{"name":"stdout","output_type":"stream","text":["{1, 2, 3}\n"]}],"source":["# convert list to set\n","list5 = [2,3,1,3]\n","set2 = set(list5)\n","print(set2)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":224,"status":"ok","timestamp":1734647047556,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"Zf3L3-6HBGax","outputId":"d7ed768e-2616-44c7-e7e5-24c6d32a688e"},"outputs":[{"name":"stdout","output_type":"stream","text":["{1, 2, 3}\n"]}],"source":["# set doesn't allow duplicate values\n","\n","set3 = {1,1,1,1,2,3}\n","print(set3)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QS0RguUVBWKu"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"CKMpB0gkBYPt"},"source":["dictionary"]},{"cell_type":"markdown","metadata":{"id":"r9kAPBCkBd5R"},"source":["key-value pair"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1734647174907,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"rsC5CNqUBaGo","outputId":"15d215f9-a3ce-4dc4-d3ec-b1b67889b215"},"outputs":[{"name":"stdout","output_type":"stream","text":["{'name': 'David', 'age': 34, 'country': 'USA'}\n"]},{"data":{"text/plain":["dict"]},"execution_count":12,"metadata":{},"output_type":"execute_result"}],"source":["my_dec = {\"name\": \"David\",\"age\": 34, \"country\": \"USA\"}\n","print(my_dec)\n","type(my_dec)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":228,"status":"ok","timestamp":1734647286808,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"IoaFVHFkB1Qe","outputId":"82f6e866-5508-487a-e252-e52114f7de25"},"outputs":[{"name":"stdout","output_type":"stream","text":["David\n","34\n"]}],"source":["print(my_dec[\"name\"])\n","print(my_dec[\"age\"])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":457,"status":"ok","timestamp":1734647402311,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"r5dN4W_4CCY2","outputId":"0b9a515e-b274-444a-fb9f-8acd772f8742"},"outputs":[{"name":"stdout","output_type":"stream","text":["{'name': 'David', 'age': 34, 'country': 'USA'}\n"]}],"source":["my_dec1 = {\"name\": \"David\",\"age\": 34, \"country\": \"USA\",\"name\": \"David\",\"age\": 34, \"country\": \"USA\"}\n","print(my_dec1)"]},{"cell_type":"markdown","metadata":{"id":"M4xmYvhOE7Bg"},"source":["#Operators"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":368,"status":"ok","timestamp":1734665335269,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"SBMOwZYDE9EZ","outputId":"6bf2c368-8130-42ca-a8ce-c4fe6fc20471"},"outputs":[{"name":"stdout","output_type":"stream","text":["sum =  30\n","difference =  10\n","product =  200\n","division =  2.0\n","exponent =  10240000000000\n","modulus =  0\n"]}],"source":["#Arithmetic Operators\n","num_1 = 20\n","num_2 = 10\n","\n","#addition\n","sum = num_1 + num_2\n","print(\"sum = \",sum)\n","\n","#Subtraction\n","diff = num_1 - num_2\n","print(\"difference = \", diff )\n","\n","#multiplication\n","pro = num_1 * num_2\n","print(\"product = \", pro)\n","\n","#Division\n","div = num_1 / num_2\n","print(\"division = \", div)\n","\n","#exponent\n","exp = num_1 ** num_2\n","print(\"exponent = \", exp)\n","\n","#modulus\n","mod = num_1 % num_2\n","print(\"modulus = \", mod)\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":386,"status":"ok","timestamp":1734665392511,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"l4if3L0bFpUZ","outputId":"8fcad360-9bab-4685-c811-a23843032e47"},"outputs":[{"name":"stdout","output_type":"stream","text":["5\n"]}],"source":["#Assignment Operators\n","a = 5\n","print(a)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1734665423880,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"JyMG-4HwHU4S","outputId":"4498e0d1-ed36-4eba-a254-fb9f3d31178c"},"outputs":[{"name":"stdout","output_type":"stream","text":["8\n"]}],"source":["a = 4\n","a += 4\n","print(a)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1734665462135,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"Qg1dE5nHHcfi","outputId":"9e9ad8ff-2e4a-446e-c421-c5bd449a501b"},"outputs":[{"name":"stdout","output_type":"stream","text":["0\n"]}],"source":["b = 3\n","b -= 3\n","print(b)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":409,"status":"ok","timestamp":1734665685442,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"Kx9JF5_DHl7p","outputId":"f1d4db15-0319-47eb-f78e-adb111b92735"},"outputs":[{"name":"stdout","output_type":"stream","text":["False\n","True\n","True\n","False\n","True\n","False\n"]}],"source":["#Comparision Operators\n","a = 3\n","b = 2\n","print(a == b)\n","print(a != b)\n","print(a > b)\n","print(a < b)\n","print(a >= b)\n","print(a <= b)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":414,"status":"ok","timestamp":1734665901100,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"O54PEiGTIcWV","outputId":"065546ba-620c-45f3-91e8-04d9d38cf936"},"outputs":[{"name":"stdout","output_type":"stream","text":["False\n","True\n","False\n"]}],"source":["#Logical Operators\n","# and, or, not\n","\n","a = 10\n","print(a > 20 and a > 5)\n","print(a > 20 or a > 5)\n","print(not(a > 8 and a > 5))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":384,"status":"ok","timestamp":1734665984117,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"KH3qMajBJRAV","outputId":"4c2a3145-636b-4b6f-8baa-8403e0800833"},"outputs":[{"name":"stdout","output_type":"stream","text":["True\n"]}],"source":["# Identity Operators\n","# is, is not\n","\n","x = 5\n","y = 5\n","print(x is y)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1734666013634,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"ClAATga2JlTe","outputId":"0ae1ab0d-35ae-4761-f14d-32699dd3d4f7"},"outputs":[{"name":"stdout","output_type":"stream","text":["True\n"]}],"source":["x = 5\n","y = 10\n","print(x is not y)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1734666130169,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"JB0bk2J3JplG","outputId":"a9e7848b-868b-452d-d835-38d9dc8bf029"},"outputs":[{"name":"stdout","output_type":"stream","text":["True\n","True\n"]}],"source":["#membership Operator\n","# in, not in\n","a = 3\n","b = 8\n","c = [1,2,3,4]\n","print(a in c)\n","print(b not in c)\n"]},{"cell_type":"markdown","metadata":{"id":"U2q0qn-UKpSQ"},"source":["simple if else statement"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":534,"status":"ok","timestamp":1734666358815,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"kLG9A15CKtWK","outputId":"7957de45-2cae-4310-c9d4-a5f8ac9c5e32"},"outputs":[{"name":"stdout","output_type":"stream","text":["a is greater than b\n"]}],"source":["a = 49\n","b = 33\n","\n","if a > b:\n","  print(\"a is greater than b\")\n","else:\n","  print(\"b is greater than a\")\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5562,"status":"ok","timestamp":1734666436428,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"Bar7G-CbLAv6","outputId":"a17219fa-9c9b-415b-fa39-b8cd7d0a0d0c"},"outputs":[{"name":"stdout","output_type":"stream","text":["enter teh first number: 3\n","enter the second number: 6\n","b is greater than a\n"]}],"source":["a = int(input(\"enter teh first number: \"))\n","b = int(input(\"enter the second number: \"))\n","\n","if a > b:\n","  print(\"a is greater than b\")\n","else:\n","  print(\"b is greater than a\")"]},{"cell_type":"markdown","metadata":{"id":"XZV-AJmjLjY4"},"source":["if elif else"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":820,"status":"ok","timestamp":1734666750186,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"EuWkRr6nLoI3","outputId":"5148f401-2687-484c-963d-82ba0ba3acde"},"outputs":[{"name":"stdout","output_type":"stream","text":["c is the greatest number\n"]}],"source":["a = 12\n","b = 45\n","c = 88\n","\n","if b < a > c:\n","  print(\" a is the greatest\")\n","elif a < b > c:\n","  print(\"b is the greatest number\")\n","else:\n","  print(\"c is the greatest number\")"]},{"cell_type":"markdown","metadata":{"id":"zWxnii76MkNA"},"source":["nested if"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":371,"status":"ok","timestamp":1734667009029,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"6U2sotbsMluC","outputId":"18e4b991-0bc0-4a73-d34b-9c3671eaf0ba"},"outputs":[{"name":"stdout","output_type":"stream","text":["c is the greatest number\n"]}],"source":["a = 39\n","b = 62\n","c = 90\n","\n","if a > b:\n","  if a > c:\n","    print(\" a is the greatest number\")\n","  else:\n","    print(\"c is the greatest number\")\n","else:\n","  if b > c:\n","    print(\"b is the greatest number\")\n","  else:\n","    print(\"c is the greatest number\")"]},{"cell_type":"markdown","metadata":{"id":"5G_HOEbkOFRh"},"source":["For Loops"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":13315,"status":"ok","timestamp":1734667445382,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"_pKLrlYfOGSt","outputId":"bac275cf-a6ef-4dee-c025-86a7572083ac"},"outputs":[{"name":"stdout","output_type":"stream","text":["enter the price of the laptop : 20\n","enter the price of the laptop : 3\n","enter the price of the laptop : 40\n","enter the price of the laptop : 50\n","enter the price of the laptop : 60\n"]}],"source":["laptop1 = int(input(\"enter the price of the laptop : \"))\n","laptop2 = int(input(\"enter the price of the laptop : \"))\n","laptop3 = int(input(\"enter the price of the laptop : \"))\n","laptop4 = int(input(\"enter the price of the laptop : \"))\n","laptop5 = int(input(\"enter the price of the laptop : \"))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":12399,"status":"ok","timestamp":1734667592639,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"3fW6kheaO2Yd","outputId":"6966885d-0568-4e2c-f2b9-557661f3ced7"},"outputs":[{"name":"stdout","output_type":"stream","text":["enter the laptop price : 45\n","enter the laptop price : 80\n","enter the laptop price : 99\n","enter the laptop price : 44\n","enter the laptop price : 33\n"]}],"source":["for i in range(5):\n","  laptop_price = int(input(\"enter the laptop price : \"))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":630,"status":"ok","timestamp":1734668602762,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"Zllr3PlHPrET","outputId":"4a9b0bc7-a1b6-4754-9822-ddb9083efe06"},"outputs":[{"name":"stdout","output_type":"stream","text":["30\n","39\n","40\n","50\n"]}],"source":["numbers = [30, 39, 40, 50]\n","\n","print(numbers[0])\n","print(numbers[1])\n","print(numbers[2])\n","print(numbers[3])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":427,"status":"ok","timestamp":1734668674957,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"QEsTg8U6TuAS","outputId":"537d1d08-0e4e-4aa4-974d-0089d1f4e544"},"outputs":[{"name":"stdout","output_type":"stream","text":["30\n","39\n","40\n","50\n"]}],"source":["numbers = [30, 39, 40, 50]\n","\n","for i in numbers:\n","  print(i)"]},{"cell_type":"markdown","metadata":{"id":"Utc7a6H3UBHu"},"source":["While loop"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1734668922584,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"w9knXfHGUCgd","outputId":"7abbdd6d-a798-4c12-acc7-9e18c07b4706"},"outputs":[{"name":"stdout","output_type":"stream","text":["0\n","1\n","2\n","3\n","4\n","5\n","6\n","7\n","8\n","9\n"]}],"source":["i = 0\n","\n","while i < 10:\n","  print(i)\n","  i += 1\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"XcN_ykAVUyrt"},"outputs":[],"source":["i = 3\n","\n","while i < 1:\n","  print(i)\n","  i -= 1"]},{"cell_type":"markdown","metadata":{"id":"xiTsp6YpVeps"},"source":["Function in python: is a block of code that can be resued in python"]},{"cell_type":"markdown","metadata":{"id":"DOS97j1DVtcT"},"source":["Factorial of a number: is the product of all the positive int <= the given number"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4197,"status":"ok","timestamp":1734669954216,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"fUvJY1itVwq0","outputId":"68c9166e-8269-413c-af04-cbfa3a81f64d"},"outputs":[{"name":"stdout","output_type":"stream","text":["Enter a number to find the factorial: 8\n"," The factorial of  8  is 40320\n"]}],"source":["#factorial of 5 = 5*4*3*2*1\n","\n","number = int(input(\"Enter a number to find the factorial: \"))\n","\n","factorial = 1\n","\n","if number == 0:\n","  print(\"The factorial of 0 is 1\")\n","else:\n","  for i in range(1, number +1):\n","    factorial = factorial * i\n","  print(\" The factorial of \", number,\" is\", factorial)\n","\n"]},{"cell_type":"markdown","metadata":{"id":"g9522iAheIkd"},"source":["Factorial fun"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"aqAmvmHJeKSJ"},"outputs":[],"source":["def factorial_value(num):\n","  factorial = 1\n","\n","  if num == 0:\n","    return(\"The factorial of 0 is 1\")\n","  else:\n","    for i in range(1, num +1):\n","      factorial = factorial * i\n","    return factorial"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":520,"status":"ok","timestamp":1734671781735,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"Wx2KNz-ue2eI","outputId":"63b8f70b-1e16-4468-92ec-0eddada871ad"},"outputs":[{"name":"stdout","output_type":"stream","text":["362880\n"]}],"source":["print(factorial_value(9))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ayQt1Acve9kc"},"outputs":[],"source":["def factorial_fun(num):\n","\n","  factorial = 1\n","  if num == 0:\n","    return factorial\n","  else:\n","    for i in range(1, num +1):\n","      factorial = factorial * i\n","    return factorial\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1734671994542,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"kyLzbt1FgcmP","outputId":"c262cbe3-a0df-4fac-91f1-9b4ecc6e0c81"},"outputs":[{"name":"stdout","output_type":"stream","text":["5040\n"]}],"source":["print(factorial_fun(7))"]},{"cell_type":"markdown","metadata":{"id":"3bglc3L3Vaxd"},"source":["#Numpy"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1c3ERrVVVc7p"},"outputs":[],"source":["import numpy as np"]},{"cell_type":"markdown","metadata":{"id":"ihrf8qiGWEc6"},"source":["list vs numpy time taken"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7GRqtUcMWIti"},"outputs":[],"source":["from time import process_time"]},{"cell_type":"markdown","metadata":{"id":"4pWV629qWSfq"},"source":["time taken by list"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":360,"status":"ok","timestamp":1734688478233,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"o_crlPj7WUi7","outputId":"fd9c35ee-7a0b-466a-dd7c-7cda77ac7ab9"},"outputs":[{"name":"stdout","output_type":"stream","text":["0.0014047020000020893\n"]}],"source":["py_list = [i for i in range(10000)]\n","\n","start_time = process_time()\n","\n","py_list = [i + 5 for i in py_list]\n","\n","end_time = process_time()\n","\n","print(end_time - start_time)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":392,"status":"ok","timestamp":1734688490439,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"iynvANlKW7fl","outputId":"d8677df8-4352-4332-de4a-c6c23a6779e9"},"outputs":[{"name":"stdout","output_type":"stream","text":["0.00016818599999623984\n"]}],"source":["np_array = np.array([i for i in range(10000)])\n","\n","start_time = process_time()\n","\n","np_array += 5\n","\n","end_time = process_time()\n","\n","print(end_time - start_time)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":392,"status":"ok","timestamp":1734688502882,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"Tk_AHFSAe7XQ","outputId":"83453962-fbb9-4f5b-dcd7-aa78402991d8"},"outputs":[{"data":{"text/plain":["False"]},"execution_count":52,"metadata":{},"output_type":"execute_result"}],"source":["0.00016818599999623984 > 0.0014047020000020893"]},{"cell_type":"markdown","metadata":{"id":"NzxJHSW-frif"},"source":["Numpy Arrays"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":425,"status":"ok","timestamp":1734688612166,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"7HYASMhVfuzc","outputId":"7f965955-071c-4343-f8ae-bbd82e688a25"},"outputs":[{"name":"stdout","output_type":"stream","text":["[1, 2, 3, 4, 5]\n"]},{"data":{"text/plain":["list"]},"execution_count":54,"metadata":{},"output_type":"execute_result"}],"source":["# list\n","\n","list1 = [1,2,3,4,5]\n","\n","print(list1)\n","type(list1)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":394,"status":"ok","timestamp":1734688683482,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"oaB3TX-8f3Mt","outputId":"2d8c9258-eda9-40fa-8316-10a5e105548d"},"outputs":[{"name":"stdout","output_type":"stream","text":["[1 2 3 4 5]\n"]},{"data":{"text/plain":["numpy.ndarray"]},"execution_count":55,"metadata":{},"output_type":"execute_result"}],"source":["np_array = np.array([1,2,3,4,5])\n","\n","print(np_array)\n","type(np_array)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":359,"status":"ok","timestamp":1734688781948,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"CV-N5gHegLII","outputId":"6cd0c7b8-59ec-4296-a2d9-b01d069663f8"},"outputs":[{"name":"stdout","output_type":"stream","text":["[1 2 3 4]\n"]}],"source":["# creating one dimentional array\n","\n","a = np.array([1,2,3,4])\n","print(a)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":386,"status":"ok","timestamp":1734688787634,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"ZlNUnWkhgeQ7","outputId":"23759d3b-3ab6-495a-c86b-e899ffc9afc3"},"outputs":[{"data":{"text/plain":["(4,)"]},"execution_count":58,"metadata":{},"output_type":"execute_result"}],"source":["a.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":350,"status":"ok","timestamp":1734688857847,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"-PAdZu_Zgkle","outputId":"7a5eecbd-5e1d-44c6-ec81-30ac89443a72"},"outputs":[{"name":"stdout","output_type":"stream","text":["[[1 2 3 4]\n"," [5 6 7 8]]\n"]}],"source":["b = np.array([(1,2,3,4), (5,6,7,8)])\n","print(b)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":358,"status":"ok","timestamp":1734688871146,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"VeBnMyt1g1i6","outputId":"4a41d1f3-a27c-49d8-be3b-0d18899a8854"},"outputs":[{"data":{"text/plain":["(2, 4)"]},"execution_count":60,"metadata":{},"output_type":"execute_result"}],"source":["b.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":356,"status":"ok","timestamp":1734688943415,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"RO43K_f3g46d","outputId":"d98c3fa4-ee03-4592-832e-212f36f31fc1"},"outputs":[{"name":"stdout","output_type":"stream","text":["[[1. 2. 3. 4.]\n"," [5. 6. 7. 8.]]\n"]}],"source":["c = np.array([(1,2,3,4), (5,6,7,8)], dtype = float)\n","print(c)"]},{"cell_type":"markdown","metadata":{"id":"pYDYQ_ymhO2C"},"source":["Initial placeholders in numpy array\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1734689058707,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"PnNpv97ahT11","outputId":"1189c452-3889-4583-9b14-5efe01552a7c"},"outputs":[{"name":"stdout","output_type":"stream","text":["[[0. 0. 0. 0. 0.]\n"," [0. 0. 0. 0. 0.]\n"," [0. 0. 0. 0. 0.]\n"," [0. 0. 0. 0. 0.]]\n"]}],"source":["# creat a numpy array of zeros\n","x = np.array(np.zeros((4,5)))\n","print(x)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1734689110790,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"gv4PP7zOhml3","outputId":"e0873913-b84a-4bf9-d570-d15635269fbd"},"outputs":[{"name":"stdout","output_type":"stream","text":["[[1. 1. 1.]\n"," [1. 1. 1.]\n"," [1. 1. 1.]]\n"]}],"source":["# creating numpy array of ones\n","y = np.array(np.ones((3,3)))\n","print(y)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":400,"status":"ok","timestamp":1734689247757,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"ZpHpjNI9hzfw","outputId":"080334ef-3176-4126-f7ea-d93b4e6d43e8"},"outputs":[{"name":"stdout","output_type":"stream","text":["[[5 5 5 5]\n"," [5 5 5 5]\n"," [5 5 5 5]\n"," [5 5 5 5]\n"," [5 5 5 5]]\n"]}],"source":["# creating numpy array of particular value\n","z = np.array(np.full((5,4),5))\n","print(z)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":453,"status":"ok","timestamp":1734689417571,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"cobJworgiU0f","outputId":"65aad8c4-cb5a-4c19-a955-5ec1246f559e"},"outputs":[{"name":"stdout","output_type":"stream","text":["[[1. 0. 0. 0. 0.]\n"," [0. 1. 0. 0. 0.]\n"," [0. 0. 1. 0. 0.]\n"," [0. 0. 0. 1. 0.]\n"," [0. 0. 0. 0. 1.]]\n"]}],"source":["# creating an identity matrix\n","s = np.array(np.eye(5))\n","print(s)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":501,"status":"ok","timestamp":1734689504407,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"wcaFM7kiimC5","outputId":"d9f4e1a4-ddee-4f6a-81c3-f671b09862b1"},"outputs":[{"name":"stdout","output_type":"stream","text":["[[0.82032727 0.73379062 0.89507381 0.53213848]\n"," [0.23647995 0.99551234 0.84762637 0.49998   ]\n"," [0.05253534 0.17125167 0.25496004 0.98092529]]\n"]}],"source":["# creating numpy array with random values\n","b = np.array(np.random.random((3,4)))\n","print(b)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":357,"status":"ok","timestamp":1734689645458,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"BlOLspN4jRZP","outputId":"1330e939-5ce0-408e-9b01-09f267d2bc81"},"outputs":[{"name":"stdout","output_type":"stream","text":["[[25 76 71 70 72]\n"," [40 61 63 86 58]\n"," [67 46 92 43 51]]\n"]}],"source":["# random int values array between a specific range\n","c = np.array(np.random.randint(10,100,(3,5)))\n","print(c)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":387,"status":"ok","timestamp":1734689702352,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"He6yXhMXjfP0","outputId":"46d4ad48-ad94-44a0-f2be-573bc84e7ca3"},"outputs":[{"name":"stdout","output_type":"stream","text":["[10. 15. 20. 25. 30.]\n"]}],"source":["# array of evenly spaced values\n","d = np.array(np.linspace(10,30,5))\n","print(d)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1734689803899,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"LfZxpk9Lje_m","outputId":"353710e3-51ad-4a2d-a536-792ebc73e8da"},"outputs":[{"name":"stdout","output_type":"stream","text":["[10 15 20 25]\n"]}],"source":["# array of evenly spaced values --> specifying the step\n","c = np.array(np.arange(10,30,5))\n","print(c)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1734689954019,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"yH2KsCYqkcpu","outputId":"1fc9f0cf-0612-4acb-b900-3b85d77b102c"},"outputs":[{"name":"stdout","output_type":"stream","text":["[10 20 30 40 50]\n"]},{"data":{"text/plain":["numpy.ndarray"]},"execution_count":75,"metadata":{},"output_type":"execute_result"}],"source":["# convert a list to nparray\n","list2 = [10,20,30,40,50]\n","\n","np_array = np.asarray(list2)\n","print(np_array)\n","type(np_array)"]},{"cell_type":"markdown","metadata":{"id":"LvHHYzL2lYVg"},"source":["Analysing nparray"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":455,"status":"ok","timestamp":1734690532547,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"s4qCHigolcXc","outputId":"42b114c9-c4a4-4464-d296-5107c2491353"},"outputs":[{"name":"stdout","output_type":"stream","text":["[[23 22 16 21 29]\n"," [16 18 23 11 29]\n"," [21 16 14 21 16]\n"," [19 16 28 15 14]\n"," [26 15 17 22 14]]\n"]}],"source":["c = np.random.randint(10,30,(5,5))\n","print(c)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1734690138029,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"htkkAwq8ljMP","outputId":"4e8f7776-bcc9-4c60-a289-d0ccaca35037"},"outputs":[{"name":"stdout","output_type":"stream","text":["(5, 5)\n"]}],"source":["# find array dimension\n","print(c.shape)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":366,"status":"ok","timestamp":1734690176850,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"4ElMIFCLluBY","outputId":"c2e26524-86b6-4bcf-c03f-9d54395d43e6"},"outputs":[{"name":"stdout","output_type":"stream","text":["2\n"]}],"source":["# number of dimension\n","print(c.ndim)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":912,"status":"ok","timestamp":1734690418432,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"bc-3bZ5_l3vy","outputId":"da8b90fe-49c7-40b0-b0ca-276e98b0cc5b"},"outputs":[{"name":"stdout","output_type":"stream","text":["25\n"]}],"source":["# number of elements in nparray\n","print(c.size)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":378,"status":"ok","timestamp":1734690536879,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"AgoOndFHmvcC","outputId":"2eed7a24-8616-4b42-c3c9-ba84e6a1ff1e"},"outputs":[{"name":"stdout","output_type":"stream","text":["int64\n"]}],"source":["# data type of values in array\n","print(c.dtype)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":378,"status":"ok","timestamp":1734690661498,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"tOGIEsCFm-11","outputId":"7dca083c-34e0-4a5f-c01a-973e811bb57e"},"outputs":[{"name":"stdout","output_type":"stream","text":["[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n"]}],"source":["# mathematical operations in nparray\n","\n","list1 = [1,2,3,4,5]\n","list2 = [6,7,8,9,10]\n","print(list1 + list2) # join the two lists\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1734690776418,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"5dRm0Fg9nkFi","outputId":"3ebfd593-a676-4f17-9d19-03e22c10c394"},"outputs":[{"name":"stdout","output_type":"stream","text":["[[5 3 1]\n"," [4 4 2]\n"," [1 8 4]]\n","[[19 12 10]\n"," [19 10 17]\n"," [10 19 16]]\n"]}],"source":["a = np.array(np.random.randint(0,10,(3,3)))\n","b = np.array(np.random.randint(10,20,(3,3)))\n","print(a)\n","print(b)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":375,"status":"ok","timestamp":1734690817830,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"6I_yN2PeoJ30","outputId":"eedee541-4aea-4abf-db2e-57cc667100fc"},"outputs":[{"name":"stdout","output_type":"stream","text":["[[24 15 11]\n"," [23 14 19]\n"," [11 27 20]]\n"]}],"source":["print(a + b)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":344,"status":"ok","timestamp":1734690855013,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"rxnLsuTWoS2k","outputId":"60ac7a0a-31c9-4531-8aa6-e9b136934f4f"},"outputs":[{"name":"stdout","output_type":"stream","text":["[[-14  -9  -9]\n"," [-15  -6 -15]\n"," [ -9 -11 -12]]\n","[[ 95  36  10]\n"," [ 76  40  34]\n"," [ 10 152  64]]\n","[[0.26315789 0.25       0.1       ]\n"," [0.21052632 0.4        0.11764706]\n"," [0.1        0.42105263 0.25      ]]\n"]}],"source":["print(a-b)\n","print(a*b)\n","print(a/b)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":382,"status":"ok","timestamp":1734690891699,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"GaWmvwaBodQ5","outputId":"06608111-3568-4b40-dbcd-991c44749318"},"outputs":[{"name":"stdout","output_type":"stream","text":["[[24 15 11]\n"," [23 14 19]\n"," [11 27 20]]\n"]}],"source":["print(np.add(a,b))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":398,"status":"ok","timestamp":1734690947192,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"bpPcrXygomRR","outputId":"07de71c9-df36-4efa-ddb3-5d37b7a6e85a"},"outputs":[{"name":"stdout","output_type":"stream","text":["[[-14  -9  -9]\n"," [-15  -6 -15]\n"," [ -9 -11 -12]]\n"]}],"source":["print(np.subtract(a,b))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":348,"status":"ok","timestamp":1734690979523,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"mu-ussXeozqL","outputId":"1ecd7fe8-e0b3-443e-c870-00fcf1e6b1b7"},"outputs":[{"name":"stdout","output_type":"stream","text":["[[ 95  36  10]\n"," [ 76  40  34]\n"," [ 10 152  64]]\n","[[0.26315789 0.25       0.1       ]\n"," [0.21052632 0.4        0.11764706]\n"," [0.1        0.42105263 0.25      ]]\n"]}],"source":["print(np.multiply(a,b))\n","print(np.divide(a,b))"]},{"cell_type":"markdown","metadata":{"id":"udzRWYX0o-nu"},"source":["Array manipulation"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":396,"status":"ok","timestamp":1734691095138,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"mv1UWDiXpBKS","outputId":"3d7af7b8-23b5-4b6a-9837-0ce422547e07"},"outputs":[{"name":"stdout","output_type":"stream","text":["[[5 8 3]\n"," [2 6 0]]\n","(2, 3)\n"]}],"source":["array = np.random.randint(0,10,(2,3))\n","print(array)\n","print(array.shape)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1734691151417,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"VFbdl4-FpRa5","outputId":"619d70b9-2320-4b8a-c8b6-71500d4d9c14"},"outputs":[{"name":"stdout","output_type":"stream","text":["[[5 2]\n"," [8 6]\n"," [3 0]]\n","(3, 2)\n"]}],"source":["# transpose\n","trans = np.transpose(array)\n","print(trans)\n","print(trans.shape)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1734691230262,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"90y3cm6fpln0","outputId":"68b840aa-ad86-4554-ceca-bf33a5d2d015"},"outputs":[{"name":"stdout","output_type":"stream","text":["[[5 2]\n"," [8 6]\n"," [3 0]]\n","(3, 2)\n"]}],"source":["trans2 = array.T\n","print(trans2)\n","print(trans2.shape)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":364,"status":"ok","timestamp":1734691286486,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"yIVuvhwIp4tx","outputId":"56974336-4ce2-4835-fe91-b5a35c1d1526"},"outputs":[{"name":"stdout","output_type":"stream","text":["[[7 8 7]\n"," [9 3 4]]\n","(2, 3)\n"]}],"source":["# reshaping an array\n","a = np.random.randint(0,10,(2,3))\n","print(a)\n","print(a.shape)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":370,"status":"ok","timestamp":1734691325884,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"rQz-rjvFqGlf","outputId":"528ac75f-890a-4314-9062-92503a00e096"},"outputs":[{"name":"stdout","output_type":"stream","text":["[[7 8]\n"," [7 9]\n"," [3 4]]\n","(3, 2)\n"]}],"source":["b = a.reshape(3,2)\n","print(b)\n","print(b.shape)"]},{"cell_type":"markdown","metadata":{"id":"9F4h6gDmy9J4"},"source":["#Pandas"]},{"cell_type":"markdown","metadata":{"id":"yRHkoQD7zpgI"},"source":["Pandas data frame\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kPw8ArLNzrsX"},"outputs":[],"source":["# Importing pandas library\n","import pandas as pd"]},{"cell_type":"markdown","metadata":{"id":"OISBKuXU6VeS"},"source":["creating pandas data frame"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3069,"status":"ok","timestamp":1734712791050,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"sIpY7KAq6Zos","outputId":"c5272697-ff04-48e8-e978-bf0e0f16e322"},"outputs":[{"name":"stdout","output_type":"stream","text":["Downloading from https://www.kaggle.com/api/v1/datasets/download/altavish/boston-housing-dataset?dataset_version_number=1...\n"]},{"name":"stderr","output_type":"stream","text":["100%|██████████| 11.7k/11.7k [00:00<00:00, 18.4MB/s]"]},{"name":"stdout","output_type":"stream","text":["Extracting files...\n"]},{"name":"stderr","output_type":"stream","text":["\n"]}],"source":["import kagglehub\n","\n","# Download latest version\n","path = kagglehub.dataset_download(\"altavish/boston-housing-dataset\")\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4397,"status":"ok","timestamp":1734873336965,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"QWsPTpqw6z1M","outputId":"126c2707-c40d-4411-b10b-807ddd64277f"},"outputs":[{"name":"stdout","output_type":"stream","text":["Requirement already satisfied: kaggle in /usr/local/lib/python3.10/dist-packages (1.6.17)\n","Requirement already satisfied: six>=1.10 in /usr/local/lib/python3.10/dist-packages (from kaggle) (1.17.0)\n","Requirement already satisfied: certifi>=2023.7.22 in /usr/local/lib/python3.10/dist-packages (from kaggle) (2024.12.14)\n","Requirement already satisfied: python-dateutil in /usr/local/lib/python3.10/dist-packages (from kaggle) (2.8.2)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from kaggle) (2.32.3)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from kaggle) (4.67.1)\n","Requirement already satisfied: python-slugify in /usr/local/lib/python3.10/dist-packages (from kaggle) (8.0.4)\n","Requirement already satisfied: urllib3 in /usr/local/lib/python3.10/dist-packages (from kaggle) (2.2.3)\n","Requirement already satisfied: bleach in /usr/local/lib/python3.10/dist-packages (from kaggle) (6.2.0)\n","Requirement already satisfied: webencodings in /usr/local/lib/python3.10/dist-packages (from bleach->kaggle) (0.5.1)\n","Requirement already satisfied: text-unidecode>=1.3 in /usr/local/lib/python3.10/dist-packages (from python-slugify->kaggle) (1.3)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->kaggle) (3.4.0)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->kaggle) (3.10)\n"]}],"source":["# installing kaggle library\n","!pip install kaggle"]},{"cell_type":"markdown","metadata":{"id":"MoLaHoYhgwCt"},"source":["Upload ur kaggle.json file"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BihWlVCY8Tdt"},"outputs":[],"source":["#configuring the bath of kaggle.json file\n","!mkdir -p ~/.kaggle\n","!cp kaggle.json ~/.kaggle/\n","!chmod 600 ~/.kaggle/kaggle.json"]},{"cell_type":"markdown","metadata":{"id":"zhdMYSIIiWTI"},"source":["Importing the earthquake data set"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":93698,"status":"ok","timestamp":1734874499467,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"b8PowmgdiboZ","outputId":"9d58be6b-483a-42bb-92bf-878344bb98f5"},"outputs":[{"name":"stdout","output_type":"stream","text":["Downloading LANL-Earthquake-Prediction.zip to /content\n","100% 2.27G/2.27G [01:29<00:00, 31.1MB/s]\n","100% 2.27G/2.27G [01:29<00:00, 27.2MB/s]\n"]}],"source":["#API to fetch the dataset from kaggle\n","!kaggle competitions download -c LANL-Earthquake-Prediction"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":109401,"status":"ok","timestamp":1734874992006,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"q_ca34EKiy-E","outputId":"7ee3623a-3856-43ef-e3de-af4f5d67457f"},"outputs":[{"name":"stdout","output_type":"stream","text":["The dataset is extracted\n"]}],"source":["#extracting the compressed dataset\n","from zipfile import ZipFile\n","dataset = \"/content/LANL-Earthquake-Prediction.zip\"\n","\n","with ZipFile(dataset, \"r\") as zip:\n","  zip.extractall()\n","  print(\"The dataset is extracted\")"]},{"cell_type":"markdown","metadata":{"id":"soD2_n4TQZ8d"},"source":["Creating pandas data fram"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9erKBhkQmeBQ"},"outputs":[],"source":["import pandas as pd\n","import numpy as np"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"V0-cUho7RvOp"},"outputs":[],"source":["dataset = pd.read_csv(\"/content/Placement_Dataset.csv\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":377,"status":"ok","timestamp":1734887525402,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"h3NfWYwdR15O","outputId":"213ab383-d222-4bfc-f864-8a8689bc6dde"},"outputs":[{"name":"stdout","output_type":"stream","text":["     sl_no gender  ssc_p    ssc_b  hsc_p    hsc_b     hsc_s  degree_p  \\\n","0        1      M  67.00   Others  91.00   Others  Commerce     58.00   \n","1        2      M  79.33  Central  78.33   Others   Science     77.48   \n","2        3      M  65.00  Central  68.00  Central      Arts     64.00   \n","3        4      M  56.00  Central  52.00  Central   Science     52.00   \n","4        5      M  85.80  Central  73.60  Central  Commerce     73.30   \n","..     ...    ...    ...      ...    ...      ...       ...       ...   \n","210    211      M  80.60   Others  82.00   Others  Commerce     77.60   \n","211    212      M  58.00   Others  60.00   Others   Science     72.00   \n","212    213      M  67.00   Others  67.00   Others  Commerce     73.00   \n","213    214      F  74.00   Others  66.00   Others  Commerce     58.00   \n","214    215      M  62.00  Central  58.00   Others   Science     53.00   \n","\n","      degree_t workex  etest_p specialisation  mba_p      status    salary  \n","0     Sci&Tech     No     55.0         Mkt&HR  58.80      Placed  270000.0  \n","1     Sci&Tech    Yes     86.5        Mkt&Fin  66.28      Placed  200000.0  \n","2    Comm&Mgmt     No     75.0        Mkt&Fin  57.80      Placed  250000.0  \n","3     Sci&Tech     No     66.0         Mkt&HR  59.43  Not Placed       NaN  \n","4    Comm&Mgmt     No     96.8        Mkt&Fin  55.50      Placed  425000.0  \n","..         ...    ...      ...            ...    ...         ...       ...  \n","210  Comm&Mgmt     No     91.0        Mkt&Fin  74.49      Placed  400000.0  \n","211   Sci&Tech     No     74.0        Mkt&Fin  53.62      Placed  275000.0  \n","212  Comm&Mgmt    Yes     59.0        Mkt&Fin  69.72      Placed  295000.0  \n","213  Comm&Mgmt     No     70.0         Mkt&HR  60.23      Placed  204000.0  \n","214  Comm&Mgmt     No     89.0         Mkt&HR  60.22  Not Placed       NaN  \n","\n","[215 rows x 15 columns]\n"]}],"source":["print(dataset)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"elapsed":451,"status":"ok","timestamp":1734887495229,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"zp7GeI3gWbZO","outputId":"6bf534fa-7035-42a9-dad6-de839a0ce8a0"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"dataset\",\n  \"rows\": 215,\n  \"fields\": [\n    {\n      \"column\": \"sl_no\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62,\n        \"min\": 1,\n        \"max\": 215,\n        \"num_unique_values\": 215,\n        \"samples\": [\n          201,\n          213,\n          139\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"F\",\n          \"M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ssc_p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.827205398231452,\n        \"min\": 40.89,\n        \"max\": 89.4,\n        \"num_unique_values\": 103,\n        \"samples\": [\n          74.0,\n          73.96\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ssc_b\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Central\",\n          \"Others\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hsc_p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.89750915750298,\n        \"min\": 37.0,\n        \"max\": 97.7,\n        \"num_unique_values\": 97,\n        \"samples\": [\n          82.0,\n          73.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hsc_b\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Central\",\n          \"Others\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hsc_s\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Commerce\",\n          \"Science\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"degree_p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.358743287339439,\n        \"min\": 50.0,\n        \"max\": 91.0,\n        \"num_unique_values\": 89,\n        \"samples\": [\n          71.72,\n          76.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"degree_t\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Sci&Tech\",\n          \"Comm&Mgmt\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"workex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yes\",\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"etest_p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.275956401653835,\n        \"min\": 50.0,\n        \"max\": 98.0,\n        \"num_unique_values\": 100,\n        \"samples\": [\n          93.4,\n          69.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"specialisation\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Mkt&Fin\",\n          \"Mkt&HR\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mba_p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.8333845806838,\n        \"min\": 51.21,\n        \"max\": 77.89,\n        \"num_unique_values\": 205,\n        \"samples\": [\n          64.66,\n          52.21\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Not Placed\",\n          \"Placed\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"salary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 93457.45241958875,\n        \"min\": 200000.0,\n        \"max\": 940000.0,\n        \"num_unique_values\": 45,\n        \"samples\": [\n          255000.0,\n          336000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe","variable_name":"dataset"},"text/html":["\n","  <div id=\"df-cf626a58-58d0-4b32-a655-7179c63fa74c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sl_no</th>\n","      <th>gender</th>\n","      <th>ssc_p</th>\n","      <th>ssc_b</th>\n","      <th>hsc_p</th>\n","      <th>hsc_b</th>\n","      <th>hsc_s</th>\n","      <th>degree_p</th>\n","      <th>degree_t</th>\n","      <th>workex</th>\n","      <th>etest_p</th>\n","      <th>specialisation</th>\n","      <th>mba_p</th>\n","      <th>status</th>\n","      <th>salary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>M</td>\n","      <td>67.00</td>\n","      <td>Others</td>\n","      <td>91.00</td>\n","      <td>Others</td>\n","      <td>Commerce</td>\n","      <td>58.00</td>\n","      <td>Sci&amp;Tech</td>\n","      <td>No</td>\n","      <td>55.0</td>\n","      <td>Mkt&amp;HR</td>\n","      <td>58.80</td>\n","      <td>Placed</td>\n","      <td>270000.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>M</td>\n","      <td>79.33</td>\n","      <td>Central</td>\n","      <td>78.33</td>\n","      <td>Others</td>\n","      <td>Science</td>\n","      <td>77.48</td>\n","      <td>Sci&amp;Tech</td>\n","      <td>Yes</td>\n","      <td>86.5</td>\n","      <td>Mkt&amp;Fin</td>\n","      <td>66.28</td>\n","      <td>Placed</td>\n","      <td>200000.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>M</td>\n","      <td>65.00</td>\n","      <td>Central</td>\n","      <td>68.00</td>\n","      <td>Central</td>\n","      <td>Arts</td>\n","      <td>64.00</td>\n","      <td>Comm&amp;Mgmt</td>\n","      <td>No</td>\n","      <td>75.0</td>\n","      <td>Mkt&amp;Fin</td>\n","      <td>57.80</td>\n","      <td>Placed</td>\n","      <td>250000.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>M</td>\n","      <td>56.00</td>\n","      <td>Central</td>\n","      <td>52.00</td>\n","      <td>Central</td>\n","      <td>Science</td>\n","      <td>52.00</td>\n","      <td>Sci&amp;Tech</td>\n","      <td>No</td>\n","      <td>66.0</td>\n","      <td>Mkt&amp;HR</td>\n","      <td>59.43</td>\n","      <td>Not Placed</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>M</td>\n","      <td>85.80</td>\n","      <td>Central</td>\n","      <td>73.60</td>\n","      <td>Central</td>\n","      <td>Commerce</td>\n","      <td>73.30</td>\n","      <td>Comm&amp;Mgmt</td>\n","      <td>No</td>\n","      <td>96.8</td>\n","      <td>Mkt&amp;Fin</td>\n","      <td>55.50</td>\n","      <td>Placed</td>\n","      <td>425000.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cf626a58-58d0-4b32-a655-7179c63fa74c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cf626a58-58d0-4b32-a655-7179c63fa74c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cf626a58-58d0-4b32-a655-7179c63fa74c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e57cee82-63df-4a13-b213-a78354944713\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e57cee82-63df-4a13-b213-a78354944713')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e57cee82-63df-4a13-b213-a78354944713 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["   sl_no gender  ssc_p    ssc_b  hsc_p    hsc_b     hsc_s  degree_p  \\\n","0      1      M  67.00   Others  91.00   Others  Commerce     58.00   \n","1      2      M  79.33  Central  78.33   Others   Science     77.48   \n","2      3      M  65.00  Central  68.00  Central      Arts     64.00   \n","3      4      M  56.00  Central  52.00  Central   Science     52.00   \n","4      5      M  85.80  Central  73.60  Central  Commerce     73.30   \n","\n","    degree_t workex  etest_p specialisation  mba_p      status    salary  \n","0   Sci&Tech     No     55.0         Mkt&HR  58.80      Placed  270000.0  \n","1   Sci&Tech    Yes     86.5        Mkt&Fin  66.28      Placed  200000.0  \n","2  Comm&Mgmt     No     75.0        Mkt&Fin  57.80      Placed  250000.0  \n","3   Sci&Tech     No     66.0         Mkt&HR  59.43  Not Placed       NaN  \n","4  Comm&Mgmt     No     96.8        Mkt&Fin  55.50      Placed  425000.0  "]},"execution_count":5,"metadata":{},"output_type":"execute_result"}],"source":["dataset.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":504,"status":"ok","timestamp":1734887903084,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"vISSI29TWlDD","outputId":"d99ad156-4faa-41a4-9972-5e9818da21cd"},"outputs":[{"data":{"text/plain":["(215, 15)"]},"execution_count":11,"metadata":{},"output_type":"execute_result"}],"source":["dataset.shape"]},{"cell_type":"markdown","metadata":{"id":"dlvNo3iIYi2O"},"source":["Importing a data from csv file to data fram"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pXTXLrrnXaYH"},"outputs":[],"source":["# csv file to pd.df\n","diabetes_df = pd.read_csv(\"/content/diabetes.csv\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"elapsed":879,"status":"ok","timestamp":1734888161431,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"Wjey_S2yZBgE","outputId":"eff53a86-ed28-4ada-a102-89834c66001f"},"outputs":[{"data":{"text/html":["<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    </style>\n","    <pre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"><b>pandas.core.frame.DataFrame</b><br/>def __init__(data=None, index: Axes | None=None, columns: Axes | None=None, dtype: Dtype | None=None, copy: bool | None=None) -&gt; None</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py</a>Two-dimensional, size-mutable, potentially heterogeneous tabular data.\n","\n","Data structure also contains labeled axes (rows and columns).\n","Arithmetic operations align on both row and column labels. Can be\n","thought of as a dict-like container for Series objects. The primary\n","pandas data structure.\n","\n","Parameters\n","----------\n","data : ndarray (structured or homogeneous), Iterable, dict, or DataFrame\n","    Dict can contain Series, arrays, constants, dataclass or list-like objects. If\n","    data is a dict, column order follows insertion-order. If a dict contains Series\n","    which have an index defined, it is aligned by its index. This alignment also\n","    occurs if data is a Series or a DataFrame itself. Alignment is done on\n","    Series/DataFrame inputs.\n","\n","    If data is a list of dicts, column order follows insertion-order.\n","\n","index : Index or array-like\n","    Index to use for resulting frame. Will default to RangeIndex if\n","    no indexing information part of input data and no index provided.\n","columns : Index or array-like\n","    Column labels to use for resulting frame when data does not have them,\n","    defaulting to RangeIndex(0, 1, 2, ..., n). If data contains column labels,\n","    will perform column selection instead.\n","dtype : dtype, default None\n","    Data type to force. Only a single dtype is allowed. If None, infer.\n","copy : bool or None, default None\n","    Copy data from inputs.\n","    For dict data, the default of None behaves like ``copy=True``.  For DataFrame\n","    or 2d ndarray input, the default of None behaves like ``copy=False``.\n","    If data is a dict containing one or more Series (possibly of different dtypes),\n","    ``copy=False`` will ensure that these inputs are not copied.\n","\n","    .. versionchanged:: 1.3.0\n","\n","See Also\n","--------\n","DataFrame.from_records : Constructor from tuples, also record arrays.\n","DataFrame.from_dict : From dicts of Series, arrays, or dicts.\n","read_csv : Read a comma-separated values (csv) file into DataFrame.\n","read_table : Read general delimited file into DataFrame.\n","read_clipboard : Read text from clipboard into DataFrame.\n","\n","Notes\n","-----\n","Please reference the :ref:`User Guide &lt;basics.dataframe&gt;` for more information.\n","\n","Examples\n","--------\n","Constructing DataFrame from a dictionary.\n","\n","&gt;&gt;&gt; d = {&#x27;col1&#x27;: [1, 2], &#x27;col2&#x27;: [3, 4]}\n","&gt;&gt;&gt; df = pd.DataFrame(data=d)\n","&gt;&gt;&gt; df\n","   col1  col2\n","0     1     3\n","1     2     4\n","\n","Notice that the inferred dtype is int64.\n","\n","&gt;&gt;&gt; df.dtypes\n","col1    int64\n","col2    int64\n","dtype: object\n","\n","To enforce a single dtype:\n","\n","&gt;&gt;&gt; df = pd.DataFrame(data=d, dtype=np.int8)\n","&gt;&gt;&gt; df.dtypes\n","col1    int8\n","col2    int8\n","dtype: object\n","\n","Constructing DataFrame from a dictionary including Series:\n","\n","&gt;&gt;&gt; d = {&#x27;col1&#x27;: [0, 1, 2, 3], &#x27;col2&#x27;: pd.Series([2, 3], index=[2, 3])}\n","&gt;&gt;&gt; pd.DataFrame(data=d, index=[0, 1, 2, 3])\n","   col1  col2\n","0     0   NaN\n","1     1   NaN\n","2     2   2.0\n","3     3   3.0\n","\n","Constructing DataFrame from numpy ndarray:\n","\n","&gt;&gt;&gt; df2 = pd.DataFrame(np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]]),\n","...                    columns=[&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;])\n","&gt;&gt;&gt; df2\n","   a  b  c\n","0  1  2  3\n","1  4  5  6\n","2  7  8  9\n","\n","Constructing DataFrame from a numpy ndarray that has labeled columns:\n","\n","&gt;&gt;&gt; data = np.array([(1, 2, 3), (4, 5, 6), (7, 8, 9)],\n","...                 dtype=[(&quot;a&quot;, &quot;i4&quot;), (&quot;b&quot;, &quot;i4&quot;), (&quot;c&quot;, &quot;i4&quot;)])\n","&gt;&gt;&gt; df3 = pd.DataFrame(data, columns=[&#x27;c&#x27;, &#x27;a&#x27;])\n","...\n","&gt;&gt;&gt; df3\n","   c  a\n","0  3  1\n","1  6  4\n","2  9  7\n","\n","Constructing DataFrame from dataclass:\n","\n","&gt;&gt;&gt; from dataclasses import make_dataclass\n","&gt;&gt;&gt; Point = make_dataclass(&quot;Point&quot;, [(&quot;x&quot;, int), (&quot;y&quot;, int)])\n","&gt;&gt;&gt; pd.DataFrame([Point(0, 0), Point(0, 3), Point(2, 3)])\n","   x  y\n","0  0  0\n","1  0  3\n","2  2  3\n","\n","Constructing DataFrame from Series/DataFrame:\n","\n","&gt;&gt;&gt; ser = pd.Series([1, 2, 3], index=[&quot;a&quot;, &quot;b&quot;, &quot;c&quot;])\n","&gt;&gt;&gt; df = pd.DataFrame(data=ser, index=[&quot;a&quot;, &quot;c&quot;])\n","&gt;&gt;&gt; df\n","   0\n","a  1\n","c  3\n","\n","&gt;&gt;&gt; df1 = pd.DataFrame([1, 2, 3], index=[&quot;a&quot;, &quot;b&quot;, &quot;c&quot;], columns=[&quot;x&quot;])\n","&gt;&gt;&gt; df2 = pd.DataFrame(data=df1, index=[&quot;a&quot;, &quot;c&quot;])\n","&gt;&gt;&gt; df2\n","   x\n","a  1\n","c  3</pre>\n","      <script>\n","      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) => {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 509);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) => {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      </script>\n","      </div>"],"text/plain":["pandas.core.frame.DataFrame"]},"execution_count":13,"metadata":{},"output_type":"execute_result"}],"source":["type(diabetes_df)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"executionInfo":{"elapsed":391,"status":"ok","timestamp":1734888217827,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"orN-IK4dZHtS","outputId":"cf676aa3-2436-4bbe-80f7-727fdf1c9687"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"diabetes_df\",\n  \"rows\": 768,\n  \"fields\": [\n    {\n      \"column\": \"Pregnancies\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 0,\n        \"max\": 17,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          6,\n          1,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Glucose\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 31,\n        \"min\": 0,\n        \"max\": 199,\n        \"num_unique_values\": 136,\n        \"samples\": [\n          151,\n          101,\n          112\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BloodPressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19,\n        \"min\": 0,\n        \"max\": 122,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          86,\n          46,\n          85\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SkinThickness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 0,\n        \"max\": 99,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          7,\n          12,\n          48\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Insulin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 115,\n        \"min\": 0,\n        \"max\": 846,\n        \"num_unique_values\": 186,\n        \"samples\": [\n          52,\n          41,\n          183\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BMI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.8841603203754405,\n        \"min\": 0.0,\n        \"max\": 67.1,\n        \"num_unique_values\": 248,\n        \"samples\": [\n          19.9,\n          31.0,\n          38.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DiabetesPedigreeFunction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.33132859501277484,\n        \"min\": 0.078,\n        \"max\": 2.42,\n        \"num_unique_values\": 517,\n        \"samples\": [\n          1.731,\n          0.426,\n          0.138\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11,\n        \"min\": 21,\n        \"max\": 81,\n        \"num_unique_values\": 52,\n        \"samples\": [\n          60,\n          47,\n          72\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Outcome\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe","variable_name":"diabetes_df"},"text/html":["\n","  <div id=\"df-bf3aec0f-1490-4cdd-823d-e8d54f3c33e9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pregnancies</th>\n","      <th>Glucose</th>\n","      <th>BloodPressure</th>\n","      <th>SkinThickness</th>\n","      <th>Insulin</th>\n","      <th>BMI</th>\n","      <th>DiabetesPedigreeFunction</th>\n","      <th>Age</th>\n","      <th>Outcome</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6</td>\n","      <td>148</td>\n","      <td>72</td>\n","      <td>35</td>\n","      <td>0</td>\n","      <td>33.6</td>\n","      <td>0.627</td>\n","      <td>50</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>85</td>\n","      <td>66</td>\n","      <td>29</td>\n","      <td>0</td>\n","      <td>26.6</td>\n","      <td>0.351</td>\n","      <td>31</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>8</td>\n","      <td>183</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>23.3</td>\n","      <td>0.672</td>\n","      <td>32</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>89</td>\n","      <td>66</td>\n","      <td>23</td>\n","      <td>94</td>\n","      <td>28.1</td>\n","      <td>0.167</td>\n","      <td>21</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>137</td>\n","      <td>40</td>\n","      <td>35</td>\n","      <td>168</td>\n","      <td>43.1</td>\n","      <td>2.288</td>\n","      <td>33</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bf3aec0f-1490-4cdd-823d-e8d54f3c33e9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bf3aec0f-1490-4cdd-823d-e8d54f3c33e9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bf3aec0f-1490-4cdd-823d-e8d54f3c33e9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-dbfc37f0-2058-4bac-a7ef-7bb3d5d551f1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dbfc37f0-2058-4bac-a7ef-7bb3d5d551f1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-dbfc37f0-2058-4bac-a7ef-7bb3d5d551f1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["   Pregnancies  Glucose  BloodPressure  SkinThickness  Insulin   BMI  \\\n","0            6      148             72             35        0  33.6   \n","1            1       85             66             29        0  26.6   \n","2            8      183             64              0        0  23.3   \n","3            1       89             66             23       94  28.1   \n","4            0      137             40             35      168  43.1   \n","\n","   DiabetesPedigreeFunction  Age  Outcome  \n","0                     0.627   50        1  \n","1                     0.351   31        0  \n","2                     0.672   32        1  \n","3                     0.167   21        0  \n","4                     2.288   33        1  "]},"execution_count":14,"metadata":{},"output_type":"execute_result"}],"source":["diabetes_df.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":369,"status":"ok","timestamp":1734888256424,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"PuYSFEqaZVdR","outputId":"efa1f160-ecdc-441e-a924-01ffe00627a9"},"outputs":[{"data":{"text/plain":["(768, 9)"]},"execution_count":15,"metadata":{},"output_type":"execute_result"}],"source":["diabetes_df.shape"]},{"cell_type":"markdown","metadata":{"id":"s5HEssNjZhPx"},"source":["Loading the data from exile file to pd data frame\n","\n","pd.read_excel(\"\")"]},{"cell_type":"markdown","metadata":{"id":"cCQAAVyFZyy9"},"source":["exporing data fram t csv file"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WEc33LtCaGoQ"},"outputs":[],"source":["diabetes_df.to_csv(\"diabetes.csv\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"O-UCNuo7aRRZ"},"outputs":[],"source":["# from pandas df to excel file\n","diabetes_df.to_excel(\"diabetes.xlsx\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"MJ2gvbp1bDIw"},"outputs":[],"source":["# creating data frame from random values\n","random_df = pd.DataFrame(np.random.rand(20,10))\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"executionInfo":{"elapsed":387,"status":"ok","timestamp":1734888884346,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"oKEFWKhNbiXX","outputId":"090635d6-89f6-47e1-8d2a-d8bacd8f9e68"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"random_df\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": 0,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3215942852211449,\n        \"min\": 0.040483744898413776,\n        \"max\": 0.9909209634946974,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.16962401127442928,\n          0.29532400388596647,\n          0.3428161705268862\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.28363217044072364,\n        \"min\": 0.07356490504339896,\n        \"max\": 0.8795361373541385,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.5179349494874705,\n          0.7767475991675862,\n          0.8132290738215416\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.30735571802276485,\n        \"min\": 0.045368348667194636,\n        \"max\": 0.9814200604641873,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.23688605216929315,\n          0.9814200604641873,\n          0.7157625192314879\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.281772959029413,\n        \"min\": 0.04652802209120244,\n        \"max\": 0.9976311442212932,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.19279977995718012,\n          0.18863358662737106,\n          0.33366546158917343\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 4,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.28670509441225184,\n        \"min\": 0.0039656915889010325,\n        \"max\": 0.9391327243720027,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.8251387822415406,\n          0.7391437163343622,\n          0.6487001113841162\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 5,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.31222267250999225,\n        \"min\": 0.0035950177036264686,\n        \"max\": 0.91942081138781,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.602526491040867,\n          0.9088094731720082,\n          0.43501194491499573\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 6,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2960905369207282,\n        \"min\": 0.034117020494989214,\n        \"max\": 0.999071469191793,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.6242654231923352,\n          0.5688491217604041,\n          0.8160384832503471\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 7,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.31639234608696193,\n        \"min\": 0.02218826501522997,\n        \"max\": 0.9725841974099314,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.2057901933585602,\n          0.28314315450110106,\n          0.9496481278696688\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 8,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.254089291433339,\n        \"min\": 0.08084228484415334,\n        \"max\": 0.9279208784961235,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.3375400981368031,\n          0.3594606867681541,\n          0.405683961827043\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 9,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2964072196084801,\n        \"min\": 0.025039322185548607,\n        \"max\": 0.9677393474852494,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.09508095357517965,\n          0.06450495588838523,\n          0.5246919202456185\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe","variable_name":"random_df"},"text/html":["\n","  <div id=\"df-36ea5e1c-c993-4909-ae18-2748f78e21f8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.169624</td>\n","      <td>0.517935</td>\n","      <td>0.236886</td>\n","      <td>0.192800</td>\n","      <td>0.825139</td>\n","      <td>0.602526</td>\n","      <td>0.624265</td>\n","      <td>0.205790</td>\n","      <td>0.337540</td>\n","      <td>0.095081</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.301391</td>\n","      <td>0.169318</td>\n","      <td>0.259714</td>\n","      <td>0.545856</td>\n","      <td>0.003966</td>\n","      <td>0.557261</td>\n","      <td>0.751737</td>\n","      <td>0.105068</td>\n","      <td>0.361539</td>\n","      <td>0.851371</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.624267</td>\n","      <td>0.093621</td>\n","      <td>0.416238</td>\n","      <td>0.282943</td>\n","      <td>0.430616</td>\n","      <td>0.919421</td>\n","      <td>0.912517</td>\n","      <td>0.596065</td>\n","      <td>0.678055</td>\n","      <td>0.932528</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.040484</td>\n","      <td>0.798514</td>\n","      <td>0.760480</td>\n","      <td>0.573389</td>\n","      <td>0.270170</td>\n","      <td>0.519331</td>\n","      <td>0.622460</td>\n","      <td>0.756706</td>\n","      <td>0.371855</td>\n","      <td>0.851394</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.705956</td>\n","      <td>0.879536</td>\n","      <td>0.725416</td>\n","      <td>0.215301</td>\n","      <td>0.327181</td>\n","      <td>0.616478</td>\n","      <td>0.919112</td>\n","      <td>0.109498</td>\n","      <td>0.927921</td>\n","      <td>0.490111</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-36ea5e1c-c993-4909-ae18-2748f78e21f8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-36ea5e1c-c993-4909-ae18-2748f78e21f8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-36ea5e1c-c993-4909-ae18-2748f78e21f8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c46f36ae-bbc5-4451-a3bd-789a1d47723b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c46f36ae-bbc5-4451-a3bd-789a1d47723b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c46f36ae-bbc5-4451-a3bd-789a1d47723b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["          0         1         2         3         4         5         6  \\\n","0  0.169624  0.517935  0.236886  0.192800  0.825139  0.602526  0.624265   \n","1  0.301391  0.169318  0.259714  0.545856  0.003966  0.557261  0.751737   \n","2  0.624267  0.093621  0.416238  0.282943  0.430616  0.919421  0.912517   \n","3  0.040484  0.798514  0.760480  0.573389  0.270170  0.519331  0.622460   \n","4  0.705956  0.879536  0.725416  0.215301  0.327181  0.616478  0.919112   \n","\n","          7         8         9  \n","0  0.205790  0.337540  0.095081  \n","1  0.105068  0.361539  0.851371  \n","2  0.596065  0.678055  0.932528  \n","3  0.756706  0.371855  0.851394  \n","4  0.109498  0.927921  0.490111  "]},"execution_count":29,"metadata":{},"output_type":"execute_result"}],"source":["random_df.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":444,"status":"ok","timestamp":1734888939132,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"Rde4_bydb1JP","outputId":"b84a4d82-e2f5-45fe-b2ed-9e7c6a2f95f9"},"outputs":[{"data":{"text/plain":["(20, 10)"]},"execution_count":30,"metadata":{},"output_type":"execute_result"}],"source":["random_df.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":801,"status":"ok","timestamp":1734889025347,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"cfQ_obBUcFrU","outputId":"4664646c-faa9-42e5-b8f9-b988a3a72164"},"outputs":[{"data":{"text/plain":["(20, 10)"]},"execution_count":31,"metadata":{},"output_type":"execute_result"}],"source":["#inspicting Data fram\n","# finding number of rows and colomns\n","random_df.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"executionInfo":{"elapsed":1228,"status":"ok","timestamp":1734889079317,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"g9X8tg42caow","outputId":"b869cd1c-a438-42af-d9d6-7b60b17b286f"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"random_df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": 0,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2837149926076259,\n        \"min\": 0.1516489463429822,\n        \"max\": 0.8504702381201441,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.1516489463429822,\n          0.8504702381201441,\n          0.29532400388596647\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.36000024568291916,\n        \"min\": 0.07356490504339896,\n        \"max\": 0.838864456393509,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.838864456393509,\n          0.07356490504339896,\n          0.7767475991675862\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.35736144853020646,\n        \"min\": 0.0559824123142163,\n        \"max\": 0.9814200604641873,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.392459104902106,\n          0.345700058250367,\n          0.9814200604641873\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.31835378350631344,\n        \"min\": 0.18863358662737106,\n        \"max\": 0.9305624173579293,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.2504461528252033,\n          0.6883287576656012,\n          0.18863358662737106\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 4,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.14106313375535057,\n        \"min\": 0.5032638243924777,\n        \"max\": 0.8884101547383,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.5032638243924777,\n          0.8884101547383,\n          0.7391437163343622\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 5,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3587699128620582,\n        \"min\": 0.19620946147582596,\n        \"max\": 0.9178385133149414,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.19620946147582596,\n          0.9178385133149414,\n          0.9088094731720082\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 6,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.15953685618422872,\n        \"min\": 0.5688491217604041,\n        \"max\": 0.9734052317074876,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.6619937136399857,\n          0.9734052317074876,\n          0.5688491217604041\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 7,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3482678037228112,\n        \"min\": 0.26446519887007813,\n        \"max\": 0.9725841974099314,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.7415902513666588,\n          0.9725841974099314,\n          0.28314315450110106\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 8,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2727998674325285,\n        \"min\": 0.08084228484415334,\n        \"max\": 0.8035443341751399,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.8035443341751399,\n          0.6120919403024315,\n          0.3594606867681541\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 9,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.32809331183031126,\n        \"min\": 0.06450495588838523,\n        \"max\": 0.9677393474852494,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.9677393474852494,\n          0.3662429624589111,\n          0.06450495588838523\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe"},"text/html":["\n","  <div id=\"df-78975723-0979-4e1f-bfbb-2cb80ff6e8cf\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>15</th>\n","      <td>0.342816</td>\n","      <td>0.813229</td>\n","      <td>0.715763</td>\n","      <td>0.333665</td>\n","      <td>0.648700</td>\n","      <td>0.435012</td>\n","      <td>0.816038</td>\n","      <td>0.949648</td>\n","      <td>0.405684</td>\n","      <td>0.524692</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>0.151649</td>\n","      <td>0.838864</td>\n","      <td>0.392459</td>\n","      <td>0.250446</td>\n","      <td>0.503264</td>\n","      <td>0.196209</td>\n","      <td>0.661994</td>\n","      <td>0.741590</td>\n","      <td>0.803544</td>\n","      <td>0.967739</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>0.295324</td>\n","      <td>0.776748</td>\n","      <td>0.981420</td>\n","      <td>0.188634</td>\n","      <td>0.739144</td>\n","      <td>0.908809</td>\n","      <td>0.568849</td>\n","      <td>0.283143</td>\n","      <td>0.359461</td>\n","      <td>0.064505</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>0.643392</td>\n","      <td>0.254579</td>\n","      <td>0.055982</td>\n","      <td>0.930562</td>\n","      <td>0.735694</td>\n","      <td>0.212833</td>\n","      <td>0.849141</td>\n","      <td>0.264465</td>\n","      <td>0.080842</td>\n","      <td>0.400798</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>0.850470</td>\n","      <td>0.073565</td>\n","      <td>0.345700</td>\n","      <td>0.688329</td>\n","      <td>0.888410</td>\n","      <td>0.917839</td>\n","      <td>0.973405</td>\n","      <td>0.972584</td>\n","      <td>0.612092</td>\n","      <td>0.366243</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-78975723-0979-4e1f-bfbb-2cb80ff6e8cf')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-78975723-0979-4e1f-bfbb-2cb80ff6e8cf button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-78975723-0979-4e1f-bfbb-2cb80ff6e8cf');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a53bf979-cc1b-485a-bd51-ba50db5c5640\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a53bf979-cc1b-485a-bd51-ba50db5c5640')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a53bf979-cc1b-485a-bd51-ba50db5c5640 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["           0         1         2         3         4         5         6  \\\n","15  0.342816  0.813229  0.715763  0.333665  0.648700  0.435012  0.816038   \n","16  0.151649  0.838864  0.392459  0.250446  0.503264  0.196209  0.661994   \n","17  0.295324  0.776748  0.981420  0.188634  0.739144  0.908809  0.568849   \n","18  0.643392  0.254579  0.055982  0.930562  0.735694  0.212833  0.849141   \n","19  0.850470  0.073565  0.345700  0.688329  0.888410  0.917839  0.973405   \n","\n","           7         8         9  \n","15  0.949648  0.405684  0.524692  \n","16  0.741590  0.803544  0.967739  \n","17  0.283143  0.359461  0.064505  \n","18  0.264465  0.080842  0.400798  \n","19  0.972584  0.612092  0.366243  "]},"execution_count":32,"metadata":{},"output_type":"execute_result"}],"source":["# last 5 rows of DF\n","random_df.tail()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":371,"status":"ok","timestamp":1734889100538,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"ETDBHCswcnhQ","outputId":"b50e3a32-e35c-4b9d-929e-fce951541ec6"},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 20 entries, 0 to 19\n","Data columns (total 10 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   0       20 non-null     float64\n"," 1   1       20 non-null     float64\n"," 2   2       20 non-null     float64\n"," 3   3       20 non-null     float64\n"," 4   4       20 non-null     float64\n"," 5   5       20 non-null     float64\n"," 6   6       20 non-null     float64\n"," 7   7       20 non-null     float64\n"," 8   8       20 non-null     float64\n"," 9   9       20 non-null     float64\n","dtypes: float64(10)\n","memory usage: 1.7 KB\n"]}],"source":["# info about the DF\n","random_df.info()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":398},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1734889256609,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"LIsHXXBOctGM","outputId":"43f7ed71-cadd-4315-80ac-a54218f6ca4f"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"],"text/plain":["0    0\n","1    0\n","2    0\n","3    0\n","4    0\n","5    0\n","6    0\n","7    0\n","8    0\n","9    0\n","dtype: int64"]},"execution_count":35,"metadata":{},"output_type":"execute_result"}],"source":["#number of missing values\n","random_df.isnull().sum()\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"executionInfo":{"elapsed":457,"status":"ok","timestamp":1734889348116,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"Q2eFEh-bdQvx","outputId":"d9f4fc25-c19a-4513-ab5f-62578a63fd61"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"diabetes_df\",\n  \"rows\": 768,\n  \"fields\": [\n    {\n      \"column\": \"Pregnancies\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 0,\n        \"max\": 17,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          6,\n          1,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Glucose\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 31,\n        \"min\": 0,\n        \"max\": 199,\n        \"num_unique_values\": 136,\n        \"samples\": [\n          151,\n          101,\n          112\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BloodPressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19,\n        \"min\": 0,\n        \"max\": 122,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          86,\n          46,\n          85\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SkinThickness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 0,\n        \"max\": 99,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          7,\n          12,\n          48\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Insulin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 115,\n        \"min\": 0,\n        \"max\": 846,\n        \"num_unique_values\": 186,\n        \"samples\": [\n          52,\n          41,\n          183\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BMI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.8841603203754405,\n        \"min\": 0.0,\n        \"max\": 67.1,\n        \"num_unique_values\": 248,\n        \"samples\": [\n          19.9,\n          31.0,\n          38.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DiabetesPedigreeFunction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.33132859501277484,\n        \"min\": 0.078,\n        \"max\": 2.42,\n        \"num_unique_values\": 517,\n        \"samples\": [\n          1.731,\n          0.426,\n          0.138\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11,\n        \"min\": 21,\n        \"max\": 81,\n        \"num_unique_values\": 52,\n        \"samples\": [\n          60,\n          47,\n          72\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Outcome\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe","variable_name":"diabetes_df"},"text/html":["\n","  <div id=\"df-a9e06f2b-2209-4088-b71d-3242f002c053\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pregnancies</th>\n","      <th>Glucose</th>\n","      <th>BloodPressure</th>\n","      <th>SkinThickness</th>\n","      <th>Insulin</th>\n","      <th>BMI</th>\n","      <th>DiabetesPedigreeFunction</th>\n","      <th>Age</th>\n","      <th>Outcome</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6</td>\n","      <td>148</td>\n","      <td>72</td>\n","      <td>35</td>\n","      <td>0</td>\n","      <td>33.6</td>\n","      <td>0.627</td>\n","      <td>50</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>85</td>\n","      <td>66</td>\n","      <td>29</td>\n","      <td>0</td>\n","      <td>26.6</td>\n","      <td>0.351</td>\n","      <td>31</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>8</td>\n","      <td>183</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>23.3</td>\n","      <td>0.672</td>\n","      <td>32</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>89</td>\n","      <td>66</td>\n","      <td>23</td>\n","      <td>94</td>\n","      <td>28.1</td>\n","      <td>0.167</td>\n","      <td>21</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>137</td>\n","      <td>40</td>\n","      <td>35</td>\n","      <td>168</td>\n","      <td>43.1</td>\n","      <td>2.288</td>\n","      <td>33</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a9e06f2b-2209-4088-b71d-3242f002c053')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a9e06f2b-2209-4088-b71d-3242f002c053 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a9e06f2b-2209-4088-b71d-3242f002c053');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-599d39ec-73b5-4557-8e80-ad65e348dc63\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-599d39ec-73b5-4557-8e80-ad65e348dc63')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-599d39ec-73b5-4557-8e80-ad65e348dc63 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["   Pregnancies  Glucose  BloodPressure  SkinThickness  Insulin   BMI  \\\n","0            6      148             72             35        0  33.6   \n","1            1       85             66             29        0  26.6   \n","2            8      183             64              0        0  23.3   \n","3            1       89             66             23       94  28.1   \n","4            0      137             40             35      168  43.1   \n","\n","   DiabetesPedigreeFunction  Age  Outcome  \n","0                     0.627   50        1  \n","1                     0.351   31        0  \n","2                     0.672   32        1  \n","3                     0.167   21        0  \n","4                     2.288   33        1  "]},"execution_count":36,"metadata":{},"output_type":"execute_result"}],"source":["diabetes_df.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"executionInfo":{"elapsed":513,"status":"ok","timestamp":1734889510998,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"57xjnMTsdpc2","outputId":"74d46dbe-0f8b-4f33-fa4e-85d6736a3caf"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Outcome</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>500</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>268</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"],"text/plain":["Outcome\n","0    500\n","1    268\n","Name: count, dtype: int64"]},"execution_count":40,"metadata":{},"output_type":"execute_result"}],"source":["#counting values based on labeles\n","diabetes_df.value_counts(\"Outcome\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":163},"executionInfo":{"elapsed":436,"status":"ok","timestamp":1734889557448,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"ce1Y33IPd97o","outputId":"53557145-1c07-488d-fab9-a0974d549b3c"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"diabetes_df\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"Outcome\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pregnancies\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.108511248584296,\n        \"min\": 3.298,\n        \"max\": 4.865671641791045,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          4.865671641791045,\n          3.298\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Glucose\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 22.116505963980842,\n        \"min\": 109.98,\n        \"max\": 141.25746268656715,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          141.25746268656715,\n          109.98\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BloodPressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.8672051632998017,\n        \"min\": 68.184,\n        \"max\": 70.82462686567165,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          70.82462686567165,\n          68.184\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SkinThickness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7678935989570275,\n        \"min\": 19.664,\n        \"max\": 22.16417910447761,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          22.16417910447761,\n          19.664\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Insulin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 22.304849659757796,\n        \"min\": 68.792,\n        \"max\": 100.33582089552239,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          100.33582089552239,\n          68.792\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BMI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.4212211239962618,\n        \"min\": 30.3042,\n        \"max\": 35.14253731343284,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          35.14253731343284,\n          30.3042\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DiabetesPedigreeFunction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.08539445753677459,\n        \"min\": 0.429734,\n        \"max\": 0.5505,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.5505,\n          0.429734\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.155782645191446,\n        \"min\": 31.19,\n        \"max\": 37.06716417910448,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          37.06716417910448,\n          31.19\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe"},"text/html":["\n","  <div id=\"df-9dba6eaf-e21a-46ec-a155-299f24cfaa5f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pregnancies</th>\n","      <th>Glucose</th>\n","      <th>BloodPressure</th>\n","      <th>SkinThickness</th>\n","      <th>Insulin</th>\n","      <th>BMI</th>\n","      <th>DiabetesPedigreeFunction</th>\n","      <th>Age</th>\n","    </tr>\n","    <tr>\n","      <th>Outcome</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3.298000</td>\n","      <td>109.980000</td>\n","      <td>68.184000</td>\n","      <td>19.664000</td>\n","      <td>68.792000</td>\n","      <td>30.304200</td>\n","      <td>0.429734</td>\n","      <td>31.190000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.865672</td>\n","      <td>141.257463</td>\n","      <td>70.824627</td>\n","      <td>22.164179</td>\n","      <td>100.335821</td>\n","      <td>35.142537</td>\n","      <td>0.550500</td>\n","      <td>37.067164</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9dba6eaf-e21a-46ec-a155-299f24cfaa5f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9dba6eaf-e21a-46ec-a155-299f24cfaa5f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9dba6eaf-e21a-46ec-a155-299f24cfaa5f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-30194687-bb17-4bbc-9068-7082368ff055\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-30194687-bb17-4bbc-9068-7082368ff055')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-30194687-bb17-4bbc-9068-7082368ff055 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["         Pregnancies     Glucose  BloodPressure  SkinThickness     Insulin  \\\n","Outcome                                                                      \n","0           3.298000  109.980000      68.184000      19.664000   68.792000   \n","1           4.865672  141.257463      70.824627      22.164179  100.335821   \n","\n","               BMI  DiabetesPedigreeFunction        Age  \n","Outcome                                                  \n","0        30.304200                  0.429734  31.190000  \n","1        35.142537                  0.550500  37.067164  "]},"execution_count":41,"metadata":{},"output_type":"execute_result"}],"source":["#group the values based on the mean\n","diabetes_df.groupby(\"Outcome\").mean()"]},{"cell_type":"markdown","metadata":{"id":"Gv1JaB5cer2K"},"source":["Statistical measurs"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":366},"executionInfo":{"elapsed":553,"status":"ok","timestamp":1734889660559,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"UNMkijI0eclo","outputId":"799f4a10-3fdc-4491-93ea-f67021fe3c39"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Pregnancies</th>\n","      <td>768</td>\n","    </tr>\n","    <tr>\n","      <th>Glucose</th>\n","      <td>768</td>\n","    </tr>\n","    <tr>\n","      <th>BloodPressure</th>\n","      <td>768</td>\n","    </tr>\n","    <tr>\n","      <th>SkinThickness</th>\n","      <td>768</td>\n","    </tr>\n","    <tr>\n","      <th>Insulin</th>\n","      <td>768</td>\n","    </tr>\n","    <tr>\n","      <th>BMI</th>\n","      <td>768</td>\n","    </tr>\n","    <tr>\n","      <th>DiabetesPedigreeFunction</th>\n","      <td>768</td>\n","    </tr>\n","    <tr>\n","      <th>Age</th>\n","      <td>768</td>\n","    </tr>\n","    <tr>\n","      <th>Outcome</th>\n","      <td>768</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"],"text/plain":["Pregnancies                 768\n","Glucose                     768\n","BloodPressure               768\n","SkinThickness               768\n","Insulin                     768\n","BMI                         768\n","DiabetesPedigreeFunction    768\n","Age                         768\n","Outcome                     768\n","dtype: int64"]},"execution_count":42,"metadata":{},"output_type":"execute_result"}],"source":["# count the number of values in each colomns\n","diabetes_df.count()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":366},"executionInfo":{"elapsed":445,"status":"ok","timestamp":1734889686350,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"Qnw5Zprqe1x2","outputId":"0261bce4-dd33-4d3e-b6e7-9d003ed6e1de"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Pregnancies</th>\n","      <td>3.845052</td>\n","    </tr>\n","    <tr>\n","      <th>Glucose</th>\n","      <td>120.894531</td>\n","    </tr>\n","    <tr>\n","      <th>BloodPressure</th>\n","      <td>69.105469</td>\n","    </tr>\n","    <tr>\n","      <th>SkinThickness</th>\n","      <td>20.536458</td>\n","    </tr>\n","    <tr>\n","      <th>Insulin</th>\n","      <td>79.799479</td>\n","    </tr>\n","    <tr>\n","      <th>BMI</th>\n","      <td>31.992578</td>\n","    </tr>\n","    <tr>\n","      <th>DiabetesPedigreeFunction</th>\n","      <td>0.471876</td>\n","    </tr>\n","    <tr>\n","      <th>Age</th>\n","      <td>33.240885</td>\n","    </tr>\n","    <tr>\n","      <th>Outcome</th>\n","      <td>0.348958</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"],"text/plain":["Pregnancies                   3.845052\n","Glucose                     120.894531\n","BloodPressure                69.105469\n","SkinThickness                20.536458\n","Insulin                      79.799479\n","BMI                          31.992578\n","DiabetesPedigreeFunction      0.471876\n","Age                          33.240885\n","Outcome                       0.348958\n","dtype: float64"]},"execution_count":43,"metadata":{},"output_type":"execute_result"}],"source":["# mean values - column wise\n","diabetes_df.mean()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":366},"executionInfo":{"elapsed":1086,"status":"ok","timestamp":1734889719678,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"a99whMQNe8Gx","outputId":"b4222793-2a10-46da-df75-b8342d290920"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Pregnancies</th>\n","      <td>3.369578</td>\n","    </tr>\n","    <tr>\n","      <th>Glucose</th>\n","      <td>31.972618</td>\n","    </tr>\n","    <tr>\n","      <th>BloodPressure</th>\n","      <td>19.355807</td>\n","    </tr>\n","    <tr>\n","      <th>SkinThickness</th>\n","      <td>15.952218</td>\n","    </tr>\n","    <tr>\n","      <th>Insulin</th>\n","      <td>115.244002</td>\n","    </tr>\n","    <tr>\n","      <th>BMI</th>\n","      <td>7.884160</td>\n","    </tr>\n","    <tr>\n","      <th>DiabetesPedigreeFunction</th>\n","      <td>0.331329</td>\n","    </tr>\n","    <tr>\n","      <th>Age</th>\n","      <td>11.760232</td>\n","    </tr>\n","    <tr>\n","      <th>Outcome</th>\n","      <td>0.476951</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"],"text/plain":["Pregnancies                   3.369578\n","Glucose                      31.972618\n","BloodPressure                19.355807\n","SkinThickness                15.952218\n","Insulin                     115.244002\n","BMI                           7.884160\n","DiabetesPedigreeFunction      0.331329\n","Age                          11.760232\n","Outcome                       0.476951\n","dtype: float64"]},"execution_count":44,"metadata":{},"output_type":"execute_result"}],"source":["# Standard deviation\n","diabetes_df.std()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":366},"executionInfo":{"elapsed":418,"status":"ok","timestamp":1734889740210,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"sAUkbLukfEA_","outputId":"b5dff739-808d-488b-cbbb-3b0931190ab6"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Pregnancies</th>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>Glucose</th>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>BloodPressure</th>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>SkinThickness</th>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>Insulin</th>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>BMI</th>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>DiabetesPedigreeFunction</th>\n","      <td>0.078</td>\n","    </tr>\n","    <tr>\n","      <th>Age</th>\n","      <td>21.000</td>\n","    </tr>\n","    <tr>\n","      <th>Outcome</th>\n","      <td>0.000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"],"text/plain":["Pregnancies                  0.000\n","Glucose                      0.000\n","BloodPressure                0.000\n","SkinThickness                0.000\n","Insulin                      0.000\n","BMI                          0.000\n","DiabetesPedigreeFunction     0.078\n","Age                         21.000\n","Outcome                      0.000\n","dtype: float64"]},"execution_count":45,"metadata":{},"output_type":"execute_result"}],"source":["# minimum value\n","diabetes_df.min()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":366},"executionInfo":{"elapsed":400,"status":"ok","timestamp":1734889758528,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"yDV-GFU6fJQ2","outputId":"0827f12d-55fa-4985-f515-89f07f00f477"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Pregnancies</th>\n","      <td>17.00</td>\n","    </tr>\n","    <tr>\n","      <th>Glucose</th>\n","      <td>199.00</td>\n","    </tr>\n","    <tr>\n","      <th>BloodPressure</th>\n","      <td>122.00</td>\n","    </tr>\n","    <tr>\n","      <th>SkinThickness</th>\n","      <td>99.00</td>\n","    </tr>\n","    <tr>\n","      <th>Insulin</th>\n","      <td>846.00</td>\n","    </tr>\n","    <tr>\n","      <th>BMI</th>\n","      <td>67.10</td>\n","    </tr>\n","    <tr>\n","      <th>DiabetesPedigreeFunction</th>\n","      <td>2.42</td>\n","    </tr>\n","    <tr>\n","      <th>Age</th>\n","      <td>81.00</td>\n","    </tr>\n","    <tr>\n","      <th>Outcome</th>\n","      <td>1.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"],"text/plain":["Pregnancies                  17.00\n","Glucose                     199.00\n","BloodPressure               122.00\n","SkinThickness                99.00\n","Insulin                     846.00\n","BMI                          67.10\n","DiabetesPedigreeFunction      2.42\n","Age                          81.00\n","Outcome                       1.00\n","dtype: float64"]},"execution_count":47,"metadata":{},"output_type":"execute_result"}],"source":["# max value\n","diabetes_df.max()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"executionInfo":{"elapsed":383,"status":"ok","timestamp":1734889796826,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"Kg9yu-LbfL72","outputId":"a367c2f7-4804-450b-f5c1-c7dfce25a312"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"diabetes_df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Pregnancies\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 269.85223453356366,\n        \"min\": 0.0,\n        \"max\": 768.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.8450520833333335,\n          3.0,\n          768.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Glucose\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 243.73802348295857,\n        \"min\": 0.0,\n        \"max\": 768.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          120.89453125,\n          117.0,\n          768.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BloodPressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 252.85250535810619,\n        \"min\": 0.0,\n        \"max\": 768.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          69.10546875,\n          72.0,\n          768.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SkinThickness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 263.7684730531098,\n        \"min\": 0.0,\n        \"max\": 768.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          768.0,\n          20.536458333333332,\n          32.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Insulin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 350.26059167945886,\n        \"min\": 0.0,\n        \"max\": 846.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          768.0,\n          79.79947916666667,\n          127.25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BMI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 262.05117817552093,\n        \"min\": 0.0,\n        \"max\": 768.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          31.992578124999998,\n          32.0,\n          768.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DiabetesPedigreeFunction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 271.3005221658502,\n        \"min\": 0.078,\n        \"max\": 768.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.47187630208333325,\n          0.3725,\n          768.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 260.1941178528413,\n        \"min\": 11.76023154067868,\n        \"max\": 768.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          33.240885416666664,\n          29.0,\n          768.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Outcome\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 271.3865920388932,\n        \"min\": 0.0,\n        \"max\": 768.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.3489583333333333,\n          1.0,\n          0.4769513772427971\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe"},"text/html":["\n","  <div id=\"df-50f2e50a-e6c5-4a22-a83b-12511456b0f0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pregnancies</th>\n","      <th>Glucose</th>\n","      <th>BloodPressure</th>\n","      <th>SkinThickness</th>\n","      <th>Insulin</th>\n","      <th>BMI</th>\n","      <th>DiabetesPedigreeFunction</th>\n","      <th>Age</th>\n","      <th>Outcome</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>3.845052</td>\n","      <td>120.894531</td>\n","      <td>69.105469</td>\n","      <td>20.536458</td>\n","      <td>79.799479</td>\n","      <td>31.992578</td>\n","      <td>0.471876</td>\n","      <td>33.240885</td>\n","      <td>0.348958</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>3.369578</td>\n","      <td>31.972618</td>\n","      <td>19.355807</td>\n","      <td>15.952218</td>\n","      <td>115.244002</td>\n","      <td>7.884160</td>\n","      <td>0.331329</td>\n","      <td>11.760232</td>\n","      <td>0.476951</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.078000</td>\n","      <td>21.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1.000000</td>\n","      <td>99.000000</td>\n","      <td>62.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>27.300000</td>\n","      <td>0.243750</td>\n","      <td>24.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>3.000000</td>\n","      <td>117.000000</td>\n","      <td>72.000000</td>\n","      <td>23.000000</td>\n","      <td>30.500000</td>\n","      <td>32.000000</td>\n","      <td>0.372500</td>\n","      <td>29.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>6.000000</td>\n","      <td>140.250000</td>\n","      <td>80.000000</td>\n","      <td>32.000000</td>\n","      <td>127.250000</td>\n","      <td>36.600000</td>\n","      <td>0.626250</td>\n","      <td>41.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>17.000000</td>\n","      <td>199.000000</td>\n","      <td>122.000000</td>\n","      <td>99.000000</td>\n","      <td>846.000000</td>\n","      <td>67.100000</td>\n","      <td>2.420000</td>\n","      <td>81.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-50f2e50a-e6c5-4a22-a83b-12511456b0f0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-50f2e50a-e6c5-4a22-a83b-12511456b0f0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-50f2e50a-e6c5-4a22-a83b-12511456b0f0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-304f38fb-c6cf-4f2d-817f-a0e4c391e6c4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-304f38fb-c6cf-4f2d-817f-a0e4c391e6c4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-304f38fb-c6cf-4f2d-817f-a0e4c391e6c4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["       Pregnancies     Glucose  BloodPressure  SkinThickness     Insulin  \\\n","count   768.000000  768.000000     768.000000     768.000000  768.000000   \n","mean      3.845052  120.894531      69.105469      20.536458   79.799479   \n","std       3.369578   31.972618      19.355807      15.952218  115.244002   \n","min       0.000000    0.000000       0.000000       0.000000    0.000000   \n","25%       1.000000   99.000000      62.000000       0.000000    0.000000   \n","50%       3.000000  117.000000      72.000000      23.000000   30.500000   \n","75%       6.000000  140.250000      80.000000      32.000000  127.250000   \n","max      17.000000  199.000000     122.000000      99.000000  846.000000   \n","\n","              BMI  DiabetesPedigreeFunction         Age     Outcome  \n","count  768.000000                768.000000  768.000000  768.000000  \n","mean    31.992578                  0.471876   33.240885    0.348958  \n","std      7.884160                  0.331329   11.760232    0.476951  \n","min      0.000000                  0.078000   21.000000    0.000000  \n","25%     27.300000                  0.243750   24.000000    0.000000  \n","50%     32.000000                  0.372500   29.000000    0.000000  \n","75%     36.600000                  0.626250   41.000000    1.000000  \n","max     67.100000                  2.420000   81.000000    1.000000  "]},"execution_count":48,"metadata":{},"output_type":"execute_result"}],"source":["# all statistics measures in one go\n","diabetes_df.describe()"]},{"cell_type":"markdown","metadata":{"id":"mdW0FqChflvT"},"source":["Manipulating data fram"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"T_ItZ08kfXF8"},"outputs":[],"source":["# addind column to df\n","import random as rnd\n","# Select only numeric columns for calculating the mean\n","numeric_df = random_df.select_dtypes(include=np.number)\n","mean = numeric_df.mean()\n","random_df[\"mean\"] = mean"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"executionInfo":{"elapsed":372,"status":"ok","timestamp":1734890872771,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"7MN5DAgahA-L","outputId":"3e06fcb2-5ca6-4428-e0ac-fd46526d4205"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"random_df\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": 0,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3215942852211449,\n        \"min\": 0.040483744898413776,\n        \"max\": 0.9909209634946974,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.16962401127442928,\n          0.29532400388596647,\n          0.3428161705268862\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.28363217044072364,\n        \"min\": 0.07356490504339896,\n        \"max\": 0.8795361373541385,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.5179349494874705,\n          0.7767475991675862,\n          0.8132290738215416\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.30735571802276485,\n        \"min\": 0.045368348667194636,\n        \"max\": 0.9814200604641873,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.23688605216929315,\n          0.9814200604641873,\n          0.7157625192314879\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.281772959029413,\n        \"min\": 0.04652802209120244,\n        \"max\": 0.9976311442212932,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.19279977995718012,\n          0.18863358662737106,\n          0.33366546158917343\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 4,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.28670509441225184,\n        \"min\": 0.0039656915889010325,\n        \"max\": 0.9391327243720027,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.8251387822415406,\n          0.7391437163343622,\n          0.6487001113841162\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 5,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.31222267250999225,\n        \"min\": 0.0035950177036264686,\n        \"max\": 0.91942081138781,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.602526491040867,\n          0.9088094731720082,\n          0.43501194491499573\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 6,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2960905369207282,\n        \"min\": 0.034117020494989214,\n        \"max\": 0.999071469191793,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.6242654231923352,\n          0.5688491217604041,\n          0.8160384832503471\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 7,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.31639234608696193,\n        \"min\": 0.02218826501522997,\n        \"max\": 0.9725841974099314,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.2057901933585602,\n          0.28314315450110106,\n          0.9496481278696688\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 8,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.254089291433339,\n        \"min\": 0.08084228484415334,\n        \"max\": 0.9279208784961235,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.3375400981368031,\n          0.3594606867681541,\n          0.405683961827043\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 9,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2964072196084801,\n        \"min\": 0.025039322185548607,\n        \"max\": 0.9677393474852494,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.09508095357517965,\n          0.06450495588838523,\n          0.5246919202456185\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07283908834444566,\n        \"min\": 0.42166286906934847,\n        \"max\": 0.6581091974526908,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.47592806354210515,\n          0.4709219311290408,\n          0.4461994370204607\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe","variable_name":"random_df"},"text/html":["\n","  <div id=\"df-f64b9409-9aca-4794-b7a4-8eadef0cde66\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>mean</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.169624</td>\n","      <td>0.517935</td>\n","      <td>0.236886</td>\n","      <td>0.192800</td>\n","      <td>0.825139</td>\n","      <td>0.602526</td>\n","      <td>0.624265</td>\n","      <td>0.205790</td>\n","      <td>0.337540</td>\n","      <td>0.095081</td>\n","      <td>0.592966</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.301391</td>\n","      <td>0.169318</td>\n","      <td>0.259714</td>\n","      <td>0.545856</td>\n","      <td>0.003966</td>\n","      <td>0.557261</td>\n","      <td>0.751737</td>\n","      <td>0.105068</td>\n","      <td>0.361539</td>\n","      <td>0.851371</td>\n","      <td>0.470922</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.624267</td>\n","      <td>0.093621</td>\n","      <td>0.416238</td>\n","      <td>0.282943</td>\n","      <td>0.430616</td>\n","      <td>0.919421</td>\n","      <td>0.912517</td>\n","      <td>0.596065</td>\n","      <td>0.678055</td>\n","      <td>0.932528</td>\n","      <td>0.525115</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.040484</td>\n","      <td>0.798514</td>\n","      <td>0.760480</td>\n","      <td>0.573389</td>\n","      <td>0.270170</td>\n","      <td>0.519331</td>\n","      <td>0.622460</td>\n","      <td>0.756706</td>\n","      <td>0.371855</td>\n","      <td>0.851394</td>\n","      <td>0.475569</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.705956</td>\n","      <td>0.879536</td>\n","      <td>0.725416</td>\n","      <td>0.215301</td>\n","      <td>0.327181</td>\n","      <td>0.616478</td>\n","      <td>0.919112</td>\n","      <td>0.109498</td>\n","      <td>0.927921</td>\n","      <td>0.490111</td>\n","      <td>0.557048</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f64b9409-9aca-4794-b7a4-8eadef0cde66')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f64b9409-9aca-4794-b7a4-8eadef0cde66 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f64b9409-9aca-4794-b7a4-8eadef0cde66');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e2c92b30-1e77-4a20-b5f1-5fe4a9f59c16\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e2c92b30-1e77-4a20-b5f1-5fe4a9f59c16')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e2c92b30-1e77-4a20-b5f1-5fe4a9f59c16 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["          0         1         2         3         4         5         6  \\\n","0  0.169624  0.517935  0.236886  0.192800  0.825139  0.602526  0.624265   \n","1  0.301391  0.169318  0.259714  0.545856  0.003966  0.557261  0.751737   \n","2  0.624267  0.093621  0.416238  0.282943  0.430616  0.919421  0.912517   \n","3  0.040484  0.798514  0.760480  0.573389  0.270170  0.519331  0.622460   \n","4  0.705956  0.879536  0.725416  0.215301  0.327181  0.616478  0.919112   \n","\n","          7         8         9      mean  \n","0  0.205790  0.337540  0.095081  0.592966  \n","1  0.105068  0.361539  0.851371  0.470922  \n","2  0.596065  0.678055  0.932528  0.525115  \n","3  0.756706  0.371855  0.851394  0.475569  \n","4  0.109498  0.927921  0.490111  0.557048  "]},"execution_count":63,"metadata":{},"output_type":"execute_result"}],"source":["random_df.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":665},"executionInfo":{"elapsed":419,"status":"ok","timestamp":1734899234402,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"HjNCnl6liqfY","outputId":"79bbfb3d-50fa-481e-c436-c43b9ca41e9f"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"random_df\",\n  \"rows\": 19,\n  \"fields\": [\n    {\n      \"column\": 0,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.31414643284166865,\n        \"min\": 0.040483744898413776,\n        \"max\": 0.9909209634946974,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          0.30139122840352384,\n          0.4327194405356535,\n          0.9628143980649503\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2911824936168609,\n        \"min\": 0.07356490504339896,\n        \"max\": 0.8795361373541385,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          0.16931793067623735,\n          0.3873396922362311,\n          0.4785829834983907\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3079894466487182,\n        \"min\": 0.045368348667194636,\n        \"max\": 0.9814200604641873,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          0.2597142149117433,\n          0.7264437627913088,\n          0.41505658492790076\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.281302229073476,\n        \"min\": 0.04652802209120244,\n        \"max\": 0.9976311442212932,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          0.5458561696934775,\n          0.7981893000421285,\n          0.7876307709566407\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 4,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.28733843735209835,\n        \"min\": 0.0039656915889010325,\n        \"max\": 0.9391327243720027,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          0.0039656915889010325,\n          0.5924555242040538,\n          0.24744957151136437\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 5,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.31854291366500276,\n        \"min\": 0.0035950177036264686,\n        \"max\": 0.91942081138781,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          0.5572606121206839,\n          0.0035950177036264686,\n          0.11591977368387252\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 6,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3040939940310667,\n        \"min\": 0.034117020494989214,\n        \"max\": 0.999071469191793,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          0.7517369749052546,\n          0.6384074176844614,\n          0.034117020494989214\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 7,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.32084303185505136,\n        \"min\": 0.02218826501522997,\n        \"max\": 0.9725841974099314,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          0.10506772234506379,\n          0.07441513401820765,\n          0.2229713227724579\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 8,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.25889796402920207,\n        \"min\": 0.08084228484415334,\n        \"max\": 0.9279208784961235,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          0.3615387390670247,\n          0.7964132906997806,\n          0.17828328710145558\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 9,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.28974326641710335,\n        \"min\": 0.025039322185548607,\n        \"max\": 0.9677393474852494,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          0.8513711589102533,\n          0.40556604508635574,\n          0.4599958678267646\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07090139366268895,\n        \"min\": 0.42166286906934847,\n        \"max\": 0.6581091974526908,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.47592806354210515,\n          0.5251148032852299,\n          0.6581091974526908\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe"},"text/html":["\n","  <div id=\"df-a304ade7-cc1a-479e-8185-ccb54caf9576\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>mean</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>0.301391</td>\n","      <td>0.169318</td>\n","      <td>0.259714</td>\n","      <td>0.545856</td>\n","      <td>0.003966</td>\n","      <td>0.557261</td>\n","      <td>0.751737</td>\n","      <td>0.105068</td>\n","      <td>0.361539</td>\n","      <td>0.851371</td>\n","      <td>0.470922</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.624267</td>\n","      <td>0.093621</td>\n","      <td>0.416238</td>\n","      <td>0.282943</td>\n","      <td>0.430616</td>\n","      <td>0.919421</td>\n","      <td>0.912517</td>\n","      <td>0.596065</td>\n","      <td>0.678055</td>\n","      <td>0.932528</td>\n","      <td>0.525115</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.040484</td>\n","      <td>0.798514</td>\n","      <td>0.760480</td>\n","      <td>0.573389</td>\n","      <td>0.270170</td>\n","      <td>0.519331</td>\n","      <td>0.622460</td>\n","      <td>0.756706</td>\n","      <td>0.371855</td>\n","      <td>0.851394</td>\n","      <td>0.475569</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.705956</td>\n","      <td>0.879536</td>\n","      <td>0.725416</td>\n","      <td>0.215301</td>\n","      <td>0.327181</td>\n","      <td>0.616478</td>\n","      <td>0.919112</td>\n","      <td>0.109498</td>\n","      <td>0.927921</td>\n","      <td>0.490111</td>\n","      <td>0.557048</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0.362379</td>\n","      <td>0.264069</td>\n","      <td>0.144729</td>\n","      <td>0.358944</td>\n","      <td>0.185912</td>\n","      <td>0.649899</td>\n","      <td>0.345327</td>\n","      <td>0.915236</td>\n","      <td>0.326943</td>\n","      <td>0.334372</td>\n","      <td>0.446199</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.432719</td>\n","      <td>0.387340</td>\n","      <td>0.726444</td>\n","      <td>0.798189</td>\n","      <td>0.592456</td>\n","      <td>0.003595</td>\n","      <td>0.638407</td>\n","      <td>0.074415</td>\n","      <td>0.796413</td>\n","      <td>0.405566</td>\n","      <td>0.658109</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.990921</td>\n","      <td>0.703521</td>\n","      <td>0.167008</td>\n","      <td>0.143477</td>\n","      <td>0.142170</td>\n","      <td>0.905509</td>\n","      <td>0.904545</td>\n","      <td>0.142390</td>\n","      <td>0.703619</td>\n","      <td>0.025039</td>\n","      <td>0.421663</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0.974203</td>\n","      <td>0.660039</td>\n","      <td>0.806069</td>\n","      <td>0.046528</td>\n","      <td>0.939133</td>\n","      <td>0.071531</td>\n","      <td>0.886782</td>\n","      <td>0.537097</td>\n","      <td>0.113797</td>\n","      <td>0.098547</td>\n","      <td>0.475928</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0.983002</td>\n","      <td>0.195110</td>\n","      <td>0.857401</td>\n","      <td>0.524203</td>\n","      <td>0.789957</td>\n","      <td>0.067605</td>\n","      <td>0.913157</td>\n","      <td>0.626693</td>\n","      <td>0.389718</td>\n","      <td>0.339700</td>\n","      <td>0.482713</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>0.847389</td>\n","      <td>0.149342</td>\n","      <td>0.913452</td>\n","      <td>0.478443</td>\n","      <td>0.896974</td>\n","      <td>0.252127</td>\n","      <td>0.453844</td>\n","      <td>0.022188</td>\n","      <td>0.693590</td>\n","      <td>0.692153</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>0.384143</td>\n","      <td>0.442372</td>\n","      <td>0.716675</td>\n","      <td>0.997631</td>\n","      <td>0.566328</td>\n","      <td>0.554921</td>\n","      <td>0.141652</td>\n","      <td>0.458721</td>\n","      <td>0.694477</td>\n","      <td>0.358664</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>0.962814</td>\n","      <td>0.478583</td>\n","      <td>0.415057</td>\n","      <td>0.787631</td>\n","      <td>0.247450</td>\n","      <td>0.115920</td>\n","      <td>0.034117</td>\n","      <td>0.222971</td>\n","      <td>0.178283</td>\n","      <td>0.459996</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>0.876929</td>\n","      <td>0.732837</td>\n","      <td>0.820035</td>\n","      <td>0.804579</td>\n","      <td>0.503376</td>\n","      <td>0.212443</td>\n","      <td>0.145762</td>\n","      <td>0.151152</td>\n","      <td>0.114839</td>\n","      <td>0.532345</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>0.919450</td>\n","      <td>0.189318</td>\n","      <td>0.045368</td>\n","      <td>0.369839</td>\n","      <td>0.904915</td>\n","      <td>0.204720</td>\n","      <td>0.999071</td>\n","      <td>0.297835</td>\n","      <td>0.568348</td>\n","      <td>0.863409</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>0.342816</td>\n","      <td>0.813229</td>\n","      <td>0.715763</td>\n","      <td>0.333665</td>\n","      <td>0.648700</td>\n","      <td>0.435012</td>\n","      <td>0.816038</td>\n","      <td>0.949648</td>\n","      <td>0.405684</td>\n","      <td>0.524692</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>0.151649</td>\n","      <td>0.838864</td>\n","      <td>0.392459</td>\n","      <td>0.250446</td>\n","      <td>0.503264</td>\n","      <td>0.196209</td>\n","      <td>0.661994</td>\n","      <td>0.741590</td>\n","      <td>0.803544</td>\n","      <td>0.967739</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>0.295324</td>\n","      <td>0.776748</td>\n","      <td>0.981420</td>\n","      <td>0.188634</td>\n","      <td>0.739144</td>\n","      <td>0.908809</td>\n","      <td>0.568849</td>\n","      <td>0.283143</td>\n","      <td>0.359461</td>\n","      <td>0.064505</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>0.643392</td>\n","      <td>0.254579</td>\n","      <td>0.055982</td>\n","      <td>0.930562</td>\n","      <td>0.735694</td>\n","      <td>0.212833</td>\n","      <td>0.849141</td>\n","      <td>0.264465</td>\n","      <td>0.080842</td>\n","      <td>0.400798</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>0.850470</td>\n","      <td>0.073565</td>\n","      <td>0.345700</td>\n","      <td>0.688329</td>\n","      <td>0.888410</td>\n","      <td>0.917839</td>\n","      <td>0.973405</td>\n","      <td>0.972584</td>\n","      <td>0.612092</td>\n","      <td>0.366243</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a304ade7-cc1a-479e-8185-ccb54caf9576')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a304ade7-cc1a-479e-8185-ccb54caf9576 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a304ade7-cc1a-479e-8185-ccb54caf9576');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-80422c9a-b01a-40d4-8858-d4715da6d1de\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-80422c9a-b01a-40d4-8858-d4715da6d1de')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-80422c9a-b01a-40d4-8858-d4715da6d1de button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["           0         1         2         3         4         5         6  \\\n","1   0.301391  0.169318  0.259714  0.545856  0.003966  0.557261  0.751737   \n","2   0.624267  0.093621  0.416238  0.282943  0.430616  0.919421  0.912517   \n","3   0.040484  0.798514  0.760480  0.573389  0.270170  0.519331  0.622460   \n","4   0.705956  0.879536  0.725416  0.215301  0.327181  0.616478  0.919112   \n","5   0.362379  0.264069  0.144729  0.358944  0.185912  0.649899  0.345327   \n","6   0.432719  0.387340  0.726444  0.798189  0.592456  0.003595  0.638407   \n","7   0.990921  0.703521  0.167008  0.143477  0.142170  0.905509  0.904545   \n","8   0.974203  0.660039  0.806069  0.046528  0.939133  0.071531  0.886782   \n","9   0.983002  0.195110  0.857401  0.524203  0.789957  0.067605  0.913157   \n","10  0.847389  0.149342  0.913452  0.478443  0.896974  0.252127  0.453844   \n","11  0.384143  0.442372  0.716675  0.997631  0.566328  0.554921  0.141652   \n","12  0.962814  0.478583  0.415057  0.787631  0.247450  0.115920  0.034117   \n","13  0.876929  0.732837  0.820035  0.804579  0.503376  0.212443  0.145762   \n","14  0.919450  0.189318  0.045368  0.369839  0.904915  0.204720  0.999071   \n","15  0.342816  0.813229  0.715763  0.333665  0.648700  0.435012  0.816038   \n","16  0.151649  0.838864  0.392459  0.250446  0.503264  0.196209  0.661994   \n","17  0.295324  0.776748  0.981420  0.188634  0.739144  0.908809  0.568849   \n","18  0.643392  0.254579  0.055982  0.930562  0.735694  0.212833  0.849141   \n","19  0.850470  0.073565  0.345700  0.688329  0.888410  0.917839  0.973405   \n","\n","           7         8         9      mean  \n","1   0.105068  0.361539  0.851371  0.470922  \n","2   0.596065  0.678055  0.932528  0.525115  \n","3   0.756706  0.371855  0.851394  0.475569  \n","4   0.109498  0.927921  0.490111  0.557048  \n","5   0.915236  0.326943  0.334372  0.446199  \n","6   0.074415  0.796413  0.405566  0.658109  \n","7   0.142390  0.703619  0.025039  0.421663  \n","8   0.537097  0.113797  0.098547  0.475928  \n","9   0.626693  0.389718  0.339700  0.482713  \n","10  0.022188  0.693590  0.692153       NaN  \n","11  0.458721  0.694477  0.358664       NaN  \n","12  0.222971  0.178283  0.459996       NaN  \n","13  0.151152  0.114839  0.532345       NaN  \n","14  0.297835  0.568348  0.863409       NaN  \n","15  0.949648  0.405684  0.524692       NaN  \n","16  0.741590  0.803544  0.967739       NaN  \n","17  0.283143  0.359461  0.064505       NaN  \n","18  0.264465  0.080842  0.400798       NaN  \n","19  0.972584  0.612092  0.366243       NaN  "]},"execution_count":65,"metadata":{},"output_type":"execute_result"}],"source":["#removing a row\n","random_df.drop(index = 0, axis = 0)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":697},"executionInfo":{"elapsed":726,"status":"ok","timestamp":1734899339033,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"Tm7lazwLDXK2","outputId":"b693f727-da0f-4a36-c7e5-9f389dcafbc6"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"random_df\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": 0,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3215942852211449,\n        \"min\": 0.040483744898413776,\n        \"max\": 0.9909209634946974,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.16962401127442928,\n          0.29532400388596647,\n          0.3428161705268862\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.28363217044072364,\n        \"min\": 0.07356490504339896,\n        \"max\": 0.8795361373541385,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.5179349494874705,\n          0.7767475991675862,\n          0.8132290738215416\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.30735571802276485,\n        \"min\": 0.045368348667194636,\n        \"max\": 0.9814200604641873,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.23688605216929315,\n          0.9814200604641873,\n          0.7157625192314879\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.281772959029413,\n        \"min\": 0.04652802209120244,\n        \"max\": 0.9976311442212932,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.19279977995718012,\n          0.18863358662737106,\n          0.33366546158917343\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 4,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.28670509441225184,\n        \"min\": 0.0039656915889010325,\n        \"max\": 0.9391327243720027,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.8251387822415406,\n          0.7391437163343622,\n          0.6487001113841162\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 6,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2960905369207282,\n        \"min\": 0.034117020494989214,\n        \"max\": 0.999071469191793,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.6242654231923352,\n          0.5688491217604041,\n          0.8160384832503471\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 7,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.31639234608696193,\n        \"min\": 0.02218826501522997,\n        \"max\": 0.9725841974099314,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.2057901933585602,\n          0.28314315450110106,\n          0.9496481278696688\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 8,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.254089291433339,\n        \"min\": 0.08084228484415334,\n        \"max\": 0.9279208784961235,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.3375400981368031,\n          0.3594606867681541,\n          0.405683961827043\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 9,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2964072196084801,\n        \"min\": 0.025039322185548607,\n        \"max\": 0.9677393474852494,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.09508095357517965,\n          0.06450495588838523,\n          0.5246919202456185\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07283908834444566,\n        \"min\": 0.42166286906934847,\n        \"max\": 0.6581091974526908,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.47592806354210515,\n          0.4709219311290408,\n          0.4461994370204607\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe"},"text/html":["\n","  <div id=\"df-dbfa0331-669e-4ed7-8d55-510c682c8877\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>mean</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.169624</td>\n","      <td>0.517935</td>\n","      <td>0.236886</td>\n","      <td>0.192800</td>\n","      <td>0.825139</td>\n","      <td>0.624265</td>\n","      <td>0.205790</td>\n","      <td>0.337540</td>\n","      <td>0.095081</td>\n","      <td>0.592966</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.301391</td>\n","      <td>0.169318</td>\n","      <td>0.259714</td>\n","      <td>0.545856</td>\n","      <td>0.003966</td>\n","      <td>0.751737</td>\n","      <td>0.105068</td>\n","      <td>0.361539</td>\n","      <td>0.851371</td>\n","      <td>0.470922</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.624267</td>\n","      <td>0.093621</td>\n","      <td>0.416238</td>\n","      <td>0.282943</td>\n","      <td>0.430616</td>\n","      <td>0.912517</td>\n","      <td>0.596065</td>\n","      <td>0.678055</td>\n","      <td>0.932528</td>\n","      <td>0.525115</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.040484</td>\n","      <td>0.798514</td>\n","      <td>0.760480</td>\n","      <td>0.573389</td>\n","      <td>0.270170</td>\n","      <td>0.622460</td>\n","      <td>0.756706</td>\n","      <td>0.371855</td>\n","      <td>0.851394</td>\n","      <td>0.475569</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.705956</td>\n","      <td>0.879536</td>\n","      <td>0.725416</td>\n","      <td>0.215301</td>\n","      <td>0.327181</td>\n","      <td>0.919112</td>\n","      <td>0.109498</td>\n","      <td>0.927921</td>\n","      <td>0.490111</td>\n","      <td>0.557048</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0.362379</td>\n","      <td>0.264069</td>\n","      <td>0.144729</td>\n","      <td>0.358944</td>\n","      <td>0.185912</td>\n","      <td>0.345327</td>\n","      <td>0.915236</td>\n","      <td>0.326943</td>\n","      <td>0.334372</td>\n","      <td>0.446199</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.432719</td>\n","      <td>0.387340</td>\n","      <td>0.726444</td>\n","      <td>0.798189</td>\n","      <td>0.592456</td>\n","      <td>0.638407</td>\n","      <td>0.074415</td>\n","      <td>0.796413</td>\n","      <td>0.405566</td>\n","      <td>0.658109</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.990921</td>\n","      <td>0.703521</td>\n","      <td>0.167008</td>\n","      <td>0.143477</td>\n","      <td>0.142170</td>\n","      <td>0.904545</td>\n","      <td>0.142390</td>\n","      <td>0.703619</td>\n","      <td>0.025039</td>\n","      <td>0.421663</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0.974203</td>\n","      <td>0.660039</td>\n","      <td>0.806069</td>\n","      <td>0.046528</td>\n","      <td>0.939133</td>\n","      <td>0.886782</td>\n","      <td>0.537097</td>\n","      <td>0.113797</td>\n","      <td>0.098547</td>\n","      <td>0.475928</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0.983002</td>\n","      <td>0.195110</td>\n","      <td>0.857401</td>\n","      <td>0.524203</td>\n","      <td>0.789957</td>\n","      <td>0.913157</td>\n","      <td>0.626693</td>\n","      <td>0.389718</td>\n","      <td>0.339700</td>\n","      <td>0.482713</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>0.847389</td>\n","      <td>0.149342</td>\n","      <td>0.913452</td>\n","      <td>0.478443</td>\n","      <td>0.896974</td>\n","      <td>0.453844</td>\n","      <td>0.022188</td>\n","      <td>0.693590</td>\n","      <td>0.692153</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>0.384143</td>\n","      <td>0.442372</td>\n","      <td>0.716675</td>\n","      <td>0.997631</td>\n","      <td>0.566328</td>\n","      <td>0.141652</td>\n","      <td>0.458721</td>\n","      <td>0.694477</td>\n","      <td>0.358664</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>0.962814</td>\n","      <td>0.478583</td>\n","      <td>0.415057</td>\n","      <td>0.787631</td>\n","      <td>0.247450</td>\n","      <td>0.034117</td>\n","      <td>0.222971</td>\n","      <td>0.178283</td>\n","      <td>0.459996</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>0.876929</td>\n","      <td>0.732837</td>\n","      <td>0.820035</td>\n","      <td>0.804579</td>\n","      <td>0.503376</td>\n","      <td>0.145762</td>\n","      <td>0.151152</td>\n","      <td>0.114839</td>\n","      <td>0.532345</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>0.919450</td>\n","      <td>0.189318</td>\n","      <td>0.045368</td>\n","      <td>0.369839</td>\n","      <td>0.904915</td>\n","      <td>0.999071</td>\n","      <td>0.297835</td>\n","      <td>0.568348</td>\n","      <td>0.863409</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>0.342816</td>\n","      <td>0.813229</td>\n","      <td>0.715763</td>\n","      <td>0.333665</td>\n","      <td>0.648700</td>\n","      <td>0.816038</td>\n","      <td>0.949648</td>\n","      <td>0.405684</td>\n","      <td>0.524692</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>0.151649</td>\n","      <td>0.838864</td>\n","      <td>0.392459</td>\n","      <td>0.250446</td>\n","      <td>0.503264</td>\n","      <td>0.661994</td>\n","      <td>0.741590</td>\n","      <td>0.803544</td>\n","      <td>0.967739</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>0.295324</td>\n","      <td>0.776748</td>\n","      <td>0.981420</td>\n","      <td>0.188634</td>\n","      <td>0.739144</td>\n","      <td>0.568849</td>\n","      <td>0.283143</td>\n","      <td>0.359461</td>\n","      <td>0.064505</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>0.643392</td>\n","      <td>0.254579</td>\n","      <td>0.055982</td>\n","      <td>0.930562</td>\n","      <td>0.735694</td>\n","      <td>0.849141</td>\n","      <td>0.264465</td>\n","      <td>0.080842</td>\n","      <td>0.400798</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>0.850470</td>\n","      <td>0.073565</td>\n","      <td>0.345700</td>\n","      <td>0.688329</td>\n","      <td>0.888410</td>\n","      <td>0.973405</td>\n","      <td>0.972584</td>\n","      <td>0.612092</td>\n","      <td>0.366243</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dbfa0331-669e-4ed7-8d55-510c682c8877')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-dbfa0331-669e-4ed7-8d55-510c682c8877 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-dbfa0331-669e-4ed7-8d55-510c682c8877');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-88b48f68-b831-4408-be41-87ce259bfe78\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-88b48f68-b831-4408-be41-87ce259bfe78')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-88b48f68-b831-4408-be41-87ce259bfe78 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["           0         1         2         3         4         6         7  \\\n","0   0.169624  0.517935  0.236886  0.192800  0.825139  0.624265  0.205790   \n","1   0.301391  0.169318  0.259714  0.545856  0.003966  0.751737  0.105068   \n","2   0.624267  0.093621  0.416238  0.282943  0.430616  0.912517  0.596065   \n","3   0.040484  0.798514  0.760480  0.573389  0.270170  0.622460  0.756706   \n","4   0.705956  0.879536  0.725416  0.215301  0.327181  0.919112  0.109498   \n","5   0.362379  0.264069  0.144729  0.358944  0.185912  0.345327  0.915236   \n","6   0.432719  0.387340  0.726444  0.798189  0.592456  0.638407  0.074415   \n","7   0.990921  0.703521  0.167008  0.143477  0.142170  0.904545  0.142390   \n","8   0.974203  0.660039  0.806069  0.046528  0.939133  0.886782  0.537097   \n","9   0.983002  0.195110  0.857401  0.524203  0.789957  0.913157  0.626693   \n","10  0.847389  0.149342  0.913452  0.478443  0.896974  0.453844  0.022188   \n","11  0.384143  0.442372  0.716675  0.997631  0.566328  0.141652  0.458721   \n","12  0.962814  0.478583  0.415057  0.787631  0.247450  0.034117  0.222971   \n","13  0.876929  0.732837  0.820035  0.804579  0.503376  0.145762  0.151152   \n","14  0.919450  0.189318  0.045368  0.369839  0.904915  0.999071  0.297835   \n","15  0.342816  0.813229  0.715763  0.333665  0.648700  0.816038  0.949648   \n","16  0.151649  0.838864  0.392459  0.250446  0.503264  0.661994  0.741590   \n","17  0.295324  0.776748  0.981420  0.188634  0.739144  0.568849  0.283143   \n","18  0.643392  0.254579  0.055982  0.930562  0.735694  0.849141  0.264465   \n","19  0.850470  0.073565  0.345700  0.688329  0.888410  0.973405  0.972584   \n","\n","           8         9      mean  \n","0   0.337540  0.095081  0.592966  \n","1   0.361539  0.851371  0.470922  \n","2   0.678055  0.932528  0.525115  \n","3   0.371855  0.851394  0.475569  \n","4   0.927921  0.490111  0.557048  \n","5   0.326943  0.334372  0.446199  \n","6   0.796413  0.405566  0.658109  \n","7   0.703619  0.025039  0.421663  \n","8   0.113797  0.098547  0.475928  \n","9   0.389718  0.339700  0.482713  \n","10  0.693590  0.692153       NaN  \n","11  0.694477  0.358664       NaN  \n","12  0.178283  0.459996       NaN  \n","13  0.114839  0.532345       NaN  \n","14  0.568348  0.863409       NaN  \n","15  0.405684  0.524692       NaN  \n","16  0.803544  0.967739       NaN  \n","17  0.359461  0.064505       NaN  \n","18  0.080842  0.400798       NaN  \n","19  0.612092  0.366243       NaN  "]},"execution_count":66,"metadata":{},"output_type":"execute_result"}],"source":["#drop column\n","random_df.drop(columns = 5, axis = 1)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":429},"executionInfo":{"elapsed":403,"status":"ok","timestamp":1734899484989,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"42GM0DnQDwgM","outputId":"9de5bffa-0793-4a44-c4ad-68df5ad8b0b3"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.624267</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.093621</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.416238</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.282943</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.430616</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0.919421</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.912517</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.596065</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0.678055</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0.932528</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.525115</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"],"text/plain":["0       0.624267\n","1       0.093621\n","2       0.416238\n","3       0.282943\n","4       0.430616\n","5       0.919421\n","6       0.912517\n","7       0.596065\n","8       0.678055\n","9       0.932528\n","mean    0.525115\n","Name: 2, dtype: float64"]},"execution_count":67,"metadata":{},"output_type":"execute_result"}],"source":["# locating row using index value\n","random_df.iloc[2]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":711},"executionInfo":{"elapsed":407,"status":"ok","timestamp":1734899595880,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"styF0z61EUWi","outputId":"a65418c6-b255-43a2-fd07-3f87d2541431"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.169624</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.301391</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.624267</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.040484</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.705956</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0.362379</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.432719</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.990921</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0.974203</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0.983002</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>0.847389</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>0.384143</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>0.962814</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>0.876929</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>0.919450</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>0.342816</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>0.151649</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>0.295324</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>0.643392</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>0.850470</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"],"text/plain":["0     0.169624\n","1     0.301391\n","2     0.624267\n","3     0.040484\n","4     0.705956\n","5     0.362379\n","6     0.432719\n","7     0.990921\n","8     0.974203\n","9     0.983002\n","10    0.847389\n","11    0.384143\n","12    0.962814\n","13    0.876929\n","14    0.919450\n","15    0.342816\n","16    0.151649\n","17    0.295324\n","18    0.643392\n","19    0.850470\n","Name: 0, dtype: float64"]},"execution_count":69,"metadata":{},"output_type":"execute_result"}],"source":["#locat column\n","random_df.iloc[:,0]"]},{"cell_type":"markdown","metadata":{"id":"I0zj0x_EFNpa"},"source":["Correlation\n","1. positive\n","2. negetive"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":414},"executionInfo":{"elapsed":735,"status":"ok","timestamp":1734899844640,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"s_f25yt0Etbf","outputId":"130e54b9-d597-4832-f1bd-3eb4d5f70fef"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"random_df\",\n  \"rows\": 11,\n  \"fields\": [\n    {\n      \"column\": 0,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.37738765889685794,\n        \"min\": -0.2903889400199989,\n        \"max\": 1.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          -0.23221630684823666,\n          1.0,\n          -0.21809096520202603\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.37782512742437324,\n        \"min\": -0.336115275200952,\n        \"max\": 1.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          -0.002141890089773852,\n          -0.2903889400199989,\n          -0.19226513083980865\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.34812399958609297,\n        \"min\": -0.23407025251150954,\n        \"max\": 1.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          -0.1871194643916278,\n          -0.006050340092746662,\n          -0.11165545001716286\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4026686519749436,\n        \"min\": -0.47623739871743775,\n        \"max\": 1.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          -0.3113380369140517,\n          0.041928920235121986,\n          0.14677527319304015\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 4,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.368116018981992,\n        \"min\": -0.2795983608206629,\n        \"max\": 1.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          -0.2795983608206629,\n          0.24943102264117223,\n          -0.21975401610430065\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 5,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.39378547306688033,\n        \"min\": -0.3422171160003017,\n        \"max\": 1.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          1.0,\n          -0.23221630684823666,\n          -0.16375650302009465\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 6,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.37563035083685203,\n        \"min\": -0.47623739871743775,\n        \"max\": 1.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          0.18810587631526351,\n          0.1499458312418734,\n          0.05695612983252571\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 7,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3681784115161619,\n        \"min\": -0.47165628757859707,\n        \"max\": 1.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          0.20082355396226853,\n          -0.24556944715699222,\n          0.12010599385176902\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 8,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.33446953715203703,\n        \"min\": -0.16703802657161027,\n        \"max\": 1.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          0.26186201421255956,\n          -0.09091507915473379,\n          0.26251473055942\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 9,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.351612143893103,\n        \"min\": -0.21975401610430065,\n        \"max\": 1.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          -0.16375650302009465,\n          -0.21809096520202603,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4278054663941802,\n        \"min\": -0.47165628757859707,\n        \"max\": 1.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          -0.3422171160003017,\n          -0.28942179160265996,\n          0.016349712709671668\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe"},"text/html":["\n","  <div id=\"df-fc8400c8-5ed8-4ecb-8276-037bafe93aad\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>mean</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.000000</td>\n","      <td>-0.290389</td>\n","      <td>-0.006050</td>\n","      <td>0.041929</td>\n","      <td>0.249431</td>\n","      <td>-0.232216</td>\n","      <td>0.149946</td>\n","      <td>-0.245569</td>\n","      <td>-0.090915</td>\n","      <td>-0.218091</td>\n","      <td>-0.289422</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>-0.290389</td>\n","      <td>1.000000</td>\n","      <td>0.372208</td>\n","      <td>-0.336115</td>\n","      <td>-0.195766</td>\n","      <td>-0.002142</td>\n","      <td>-0.142424</td>\n","      <td>-0.005824</td>\n","      <td>0.005656</td>\n","      <td>-0.192265</td>\n","      <td>-0.003721</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-0.006050</td>\n","      <td>0.372208</td>\n","      <td>1.000000</td>\n","      <td>0.008119</td>\n","      <td>0.239453</td>\n","      <td>-0.187119</td>\n","      <td>-0.234070</td>\n","      <td>-0.048778</td>\n","      <td>0.055794</td>\n","      <td>-0.111655</td>\n","      <td>0.279572</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.041929</td>\n","      <td>-0.336115</td>\n","      <td>0.008119</td>\n","      <td>1.000000</td>\n","      <td>-0.042527</td>\n","      <td>-0.311338</td>\n","      <td>-0.476237</td>\n","      <td>-0.105328</td>\n","      <td>-0.167038</td>\n","      <td>0.146775</td>\n","      <td>0.348686</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.249431</td>\n","      <td>-0.195766</td>\n","      <td>0.239453</td>\n","      <td>-0.042527</td>\n","      <td>1.000000</td>\n","      <td>-0.279598</td>\n","      <td>0.259662</td>\n","      <td>0.081813</td>\n","      <td>-0.079998</td>\n","      <td>-0.219754</td>\n","      <td>0.417626</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>-0.232216</td>\n","      <td>-0.002142</td>\n","      <td>-0.187119</td>\n","      <td>-0.311338</td>\n","      <td>-0.279598</td>\n","      <td>1.000000</td>\n","      <td>0.188106</td>\n","      <td>0.200824</td>\n","      <td>0.261862</td>\n","      <td>-0.163757</td>\n","      <td>-0.342217</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.149946</td>\n","      <td>-0.142424</td>\n","      <td>-0.234070</td>\n","      <td>-0.476237</td>\n","      <td>0.259662</td>\n","      <td>0.188106</td>\n","      <td>1.000000</td>\n","      <td>0.176648</td>\n","      <td>0.259978</td>\n","      <td>0.056956</td>\n","      <td>-0.072866</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>-0.245569</td>\n","      <td>-0.005824</td>\n","      <td>-0.048778</td>\n","      <td>-0.105328</td>\n","      <td>0.081813</td>\n","      <td>0.200824</td>\n","      <td>0.176648</td>\n","      <td>1.000000</td>\n","      <td>-0.062202</td>\n","      <td>0.120106</td>\n","      <td>-0.471656</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>-0.090915</td>\n","      <td>0.005656</td>\n","      <td>0.055794</td>\n","      <td>-0.167038</td>\n","      <td>-0.079998</td>\n","      <td>0.261862</td>\n","      <td>0.259978</td>\n","      <td>-0.062202</td>\n","      <td>1.000000</td>\n","      <td>0.262515</td>\n","      <td>0.428004</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>-0.218091</td>\n","      <td>-0.192265</td>\n","      <td>-0.111655</td>\n","      <td>0.146775</td>\n","      <td>-0.219754</td>\n","      <td>-0.163757</td>\n","      <td>0.056956</td>\n","      <td>0.120106</td>\n","      <td>0.262515</td>\n","      <td>1.000000</td>\n","      <td>0.016350</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>-0.289422</td>\n","      <td>-0.003721</td>\n","      <td>0.279572</td>\n","      <td>0.348686</td>\n","      <td>0.417626</td>\n","      <td>-0.342217</td>\n","      <td>-0.072866</td>\n","      <td>-0.471656</td>\n","      <td>0.428004</td>\n","      <td>0.016350</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fc8400c8-5ed8-4ecb-8276-037bafe93aad')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fc8400c8-5ed8-4ecb-8276-037bafe93aad button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fc8400c8-5ed8-4ecb-8276-037bafe93aad');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-04d19abc-9907-4a66-81e2-78384a4de187\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-04d19abc-9907-4a66-81e2-78384a4de187')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-04d19abc-9907-4a66-81e2-78384a4de187 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["             0         1         2         3         4         5         6  \\\n","0     1.000000 -0.290389 -0.006050  0.041929  0.249431 -0.232216  0.149946   \n","1    -0.290389  1.000000  0.372208 -0.336115 -0.195766 -0.002142 -0.142424   \n","2    -0.006050  0.372208  1.000000  0.008119  0.239453 -0.187119 -0.234070   \n","3     0.041929 -0.336115  0.008119  1.000000 -0.042527 -0.311338 -0.476237   \n","4     0.249431 -0.195766  0.239453 -0.042527  1.000000 -0.279598  0.259662   \n","5    -0.232216 -0.002142 -0.187119 -0.311338 -0.279598  1.000000  0.188106   \n","6     0.149946 -0.142424 -0.234070 -0.476237  0.259662  0.188106  1.000000   \n","7    -0.245569 -0.005824 -0.048778 -0.105328  0.081813  0.200824  0.176648   \n","8    -0.090915  0.005656  0.055794 -0.167038 -0.079998  0.261862  0.259978   \n","9    -0.218091 -0.192265 -0.111655  0.146775 -0.219754 -0.163757  0.056956   \n","mean -0.289422 -0.003721  0.279572  0.348686  0.417626 -0.342217 -0.072866   \n","\n","             7         8         9      mean  \n","0    -0.245569 -0.090915 -0.218091 -0.289422  \n","1    -0.005824  0.005656 -0.192265 -0.003721  \n","2    -0.048778  0.055794 -0.111655  0.279572  \n","3    -0.105328 -0.167038  0.146775  0.348686  \n","4     0.081813 -0.079998 -0.219754  0.417626  \n","5     0.200824  0.261862 -0.163757 -0.342217  \n","6     0.176648  0.259978  0.056956 -0.072866  \n","7     1.000000 -0.062202  0.120106 -0.471656  \n","8    -0.062202  1.000000  0.262515  0.428004  \n","9     0.120106  0.262515  1.000000  0.016350  \n","mean -0.471656  0.428004  0.016350  1.000000  "]},"execution_count":70,"metadata":{},"output_type":"execute_result"}],"source":["random_df.corr()"]},{"cell_type":"markdown","metadata":{"id":"9UWelUntGYvQ"},"source":["Matplotlib\n","\n","used for making plots\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Rui4-akLFsCz"},"outputs":[],"source":["# import matplotlib\n","\n","import matplotlib.pyplot as plt\n","import numpy as np\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DNlpCx3MGu6y"},"outputs":[],"source":["x = np.linspace(0,10,100)\n","y = np.sin(x)\n","z = np.cos(x)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1053,"status":"ok","timestamp":1734900288396,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"-l4_rr8sHVi5","outputId":"60dcaa2d-6e29-41e8-8e7f-39067a12b1d1"},"outputs":[{"name":"stdout","output_type":"stream","text":["[ 0.          0.1010101   0.2020202   0.3030303   0.4040404   0.50505051\n","  0.60606061  0.70707071  0.80808081  0.90909091  1.01010101  1.11111111\n","  1.21212121  1.31313131  1.41414141  1.51515152  1.61616162  1.71717172\n","  1.81818182  1.91919192  2.02020202  2.12121212  2.22222222  2.32323232\n","  2.42424242  2.52525253  2.62626263  2.72727273  2.82828283  2.92929293\n","  3.03030303  3.13131313  3.23232323  3.33333333  3.43434343  3.53535354\n","  3.63636364  3.73737374  3.83838384  3.93939394  4.04040404  4.14141414\n","  4.24242424  4.34343434  4.44444444  4.54545455  4.64646465  4.74747475\n","  4.84848485  4.94949495  5.05050505  5.15151515  5.25252525  5.35353535\n","  5.45454545  5.55555556  5.65656566  5.75757576  5.85858586  5.95959596\n","  6.06060606  6.16161616  6.26262626  6.36363636  6.46464646  6.56565657\n","  6.66666667  6.76767677  6.86868687  6.96969697  7.07070707  7.17171717\n","  7.27272727  7.37373737  7.47474747  7.57575758  7.67676768  7.77777778\n","  7.87878788  7.97979798  8.08080808  8.18181818  8.28282828  8.38383838\n","  8.48484848  8.58585859  8.68686869  8.78787879  8.88888889  8.98989899\n","  9.09090909  9.19191919  9.29292929  9.39393939  9.49494949  9.5959596\n","  9.6969697   9.7979798   9.8989899  10.        ]\n"]}],"source":["print(x)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1140,"status":"ok","timestamp":1734900306877,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"xXsu3u5tHYWT","outputId":"d5d44c40-c554-492a-93c6-8218d034e192"},"outputs":[{"name":"stdout","output_type":"stream","text":["[ 0.          0.10083842  0.20064886  0.2984138   0.39313661  0.48385164\n","  0.56963411  0.64960951  0.72296256  0.78894546  0.84688556  0.8961922\n","  0.93636273  0.96698762  0.98775469  0.99845223  0.99897117  0.98930624\n","  0.96955595  0.93992165  0.90070545  0.85230712  0.79522006  0.73002623\n","  0.65739025  0.57805259  0.49282204  0.40256749  0.30820902  0.21070855\n","  0.11106004  0.01027934 -0.09060615 -0.19056796 -0.28858706 -0.38366419\n"," -0.47483011 -0.56115544 -0.64176014 -0.7158225  -0.7825875  -0.84137452\n"," -0.89158426 -0.93270486 -0.96431712 -0.98609877 -0.99782778 -0.99938456\n"," -0.99075324 -0.97202182 -0.94338126 -0.90512352 -0.85763861 -0.80141062\n"," -0.73701276 -0.66510151 -0.58640998 -0.50174037 -0.41195583 -0.31797166\n"," -0.22074597 -0.12126992 -0.0205576   0.0803643   0.18046693  0.27872982\n","  0.37415123  0.46575841  0.55261747  0.63384295  0.7086068   0.77614685\n","  0.83577457  0.8868821   0.92894843  0.96154471  0.98433866  0.99709789\n","  0.99969234  0.99209556  0.97438499  0.94674118  0.90944594  0.86287948\n","  0.8075165   0.74392141  0.6727425   0.59470541  0.51060568  0.42130064\n","  0.32770071  0.23076008  0.13146699  0.03083368 -0.07011396 -0.17034683\n"," -0.26884313 -0.36459873 -0.45663749 -0.54402111]\n"]}],"source":["print(y)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1734900316310,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"c0IRJgpoHczr","outputId":"ada171fe-ab82-4cf3-c0ae-fb006078ce0d"},"outputs":[{"name":"stdout","output_type":"stream","text":["[ 1.          0.99490282  0.97966323  0.95443659  0.91948007  0.87515004\n","  0.8218984   0.76026803  0.69088721  0.61446323  0.53177518  0.44366602\n","  0.35103397  0.25482335  0.15601496  0.0556161  -0.04534973 -0.14585325\n"," -0.24486989 -0.34139023 -0.43443032 -0.52304166 -0.60632092 -0.68341913\n"," -0.75355031 -0.81599952 -0.87013012 -0.91539031 -0.95131866 -0.97754893\n"," -0.9938137  -0.99994717 -0.9958868  -0.981674   -0.95745366 -0.92347268\n"," -0.88007748 -0.82771044 -0.76690542 -0.69828229 -0.6225406  -0.54045251\n"," -0.45285485 -0.36064061 -0.26474988 -0.16616018 -0.06587659  0.03507857\n","  0.13567613  0.23489055  0.33171042  0.4251487   0.51425287  0.59811455\n","  0.67587883  0.74675295  0.8100144   0.86501827  0.91120382  0.94810022\n","  0.97533134  0.99261957  0.99978867  0.99676556  0.98358105  0.96036956\n","  0.9273677   0.88491192  0.83343502  0.77346177  0.70560358  0.63055219\n","  0.54907273  0.46199582  0.37020915  0.27464844  0.17628785  0.07613012\n"," -0.0248037  -0.12548467 -0.2248864  -0.32199555 -0.41582217 -0.50540974\n"," -0.58984498 -0.66826712 -0.7398767  -0.8039437  -0.859815   -0.90692104\n"," -0.94478159 -0.97301068 -0.99132055 -0.99952453 -0.99753899 -0.98538417\n"," -0.96318398 -0.93116473 -0.88965286 -0.83907153]\n"]}],"source":["print(z)"]},{"cell_type":"markdown","metadata":{"id":"mYkltgMDHiAn"},"source":["Ploting the data"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"executionInfo":{"elapsed":1410,"status":"ok","timestamp":1734900401875,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"qsveuiDFHfWp","outputId":"8ff68f7f-b9ba-44b5-fad4-f58eb9d46928"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# sine wave\n","plt.plot(x,y)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"executionInfo":{"elapsed":1190,"status":"ok","timestamp":1734900455459,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"aEQHJ9mPHz7y","outputId":"41f25bee-b799-4e84-9df5-428fbd8d07e7"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# cosine wave\n","plt.plot(x,z)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"executionInfo":{"elapsed":825,"status":"ok","timestamp":1734900596572,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"u1UDXIuOIA9e","outputId":"c3f0377d-6e98-466d-9391-6a7ba395f8f8"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["#adding title x axis and y axis labels\n","plt.plot(x,y)\n","plt.xlabel(\"angle\")\n","plt.ylabel(\"sine value\")\n","plt.title(\"sine wave\")\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":642},"executionInfo":{"elapsed":882,"status":"ok","timestamp":1734900755001,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"f3aft8K3Ijmd","outputId":"ee6a34a6-35d2-4014-cbe0-f6a2d18766d9"},"outputs":[{"data":{"text/html":["<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    </style>\n","    <pre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"><b>matplotlib.pyplot.show</b><br/>def show(*args, **kwargs)</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/matplotlib/pyplot.py</a>Display all open figures.\n","\n","Parameters\n","----------\n","block : bool, optional\n","    Whether to wait for all figures to be closed before returning.\n","\n","    If `True` block and run the GUI main loop until all figure windows\n","    are closed.\n","\n","    If `False` ensure that all figure windows are displayed and return\n","    immediately.  In this case, you are responsible for ensuring\n","    that the event loop is running to have responsive figures.\n","\n","    Defaults to True in non-interactive mode and to False in interactive\n","    mode (see `.pyplot.isinteractive`).\n","\n","See Also\n","--------\n","ion : Enable interactive mode, which shows / updates the figure after\n","      every plotting command, so that calling ``show()`` is not necessary.\n","ioff : Disable interactive mode.\n","savefig : Save the figure to an image file instead of showing it on screen.\n","\n","Notes\n","-----\n","**Saving figures to file and showing a window at the same time**\n","\n","If you want an image file as well as a user interface window, use\n","`.pyplot.savefig` before `.pyplot.show`. At the end of (a blocking)\n","``show()`` the figure is closed and thus unregistered from pyplot. Calling\n","`.pyplot.savefig` afterwards would save a new and thus empty figure. This\n","limitation of command order does not apply if the show is non-blocking or\n","if you keep a reference to the figure and use `.Figure.savefig`.\n","\n","**Auto-show in jupyter notebooks**\n","\n","The jupyter backends (activated via ``%matplotlib inline``,\n","``%matplotlib notebook``, or ``%matplotlib widget``), call ``show()`` at\n","the end of every cell by default. Thus, you usually don&#x27;t have to call it\n","explicitly there.</pre>\n","      <script>\n","      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) => {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 482);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) => {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      </script>\n","      </div>"],"text/plain":["<function matplotlib.pyplot.show(close=None, block=None)>"]},"execution_count":81,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# parabola\n","x = np.linspace(-10,10,20)\n","y = x**2\n","plt.plot(x,y)\n","plt.xlabel(\"x value\")\n","plt.ylabel(\"y value\")\n","plt.title(\"parabola\")\n","plt.show"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"executionInfo":{"elapsed":393,"status":"ok","timestamp":1734900818297,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"lslycpwfI4XJ","outputId":"65540ded-a974-4fc2-97cd-e132f9e3f940"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["plt.plot(x,y, \"g,\")\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"executionInfo":{"elapsed":1632,"status":"ok","timestamp":1734900854729,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"tjljh1PbJSvf","outputId":"9e1d70a1-154a-47ea-b4d1-284c12b2f106"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["plt.plot(x, y, \"rx\")\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"executionInfo":{"elapsed":978,"status":"ok","timestamp":1734901047035,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"8QtsuM2BJidv","outputId":"903d025e-21e0-476e-b0cc-e35bceec5c69"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["x = np.linspace(-5,5,50)\n","plt.plot(x, np.sin(x), \"g-\")\n","plt.plot(x, np.cos(x), \"r--\")\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"j5o-yfcFKap7"},"source":["Bar plot"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":495},"executionInfo":{"elapsed":803,"status":"ok","timestamp":1734901390547,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"QegRWgTNKIUM","outputId":"4005e8aa-0267-4ef2-c775-dcda13a5d5fd"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["fig = plt.figure()\n","ax = fig.add_axes([0,0,1,1])\n","languages = [\"En\", \"FR\",\"SP\",\"LA\", \"GE\"]\n","people = [100, 50, 150, 40, 70]\n","ax.bar(languages, people)\n","plt.xlabel(\"LANGUAGES\")\n","plt.ylabel(\"NUMBER OF PEOPLE\")\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"JewkwH-EL_YH"},"source":["pie chart\n","\n","to find distribution between the data"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":516},"executionInfo":{"elapsed":822,"status":"ok","timestamp":1734901722429,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"AvR4WZJ8LhwP","outputId":"594c251b-0524-436e-f77d-558d6461be7b"},"outputs":[{"data":{"image/png":"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pAAsdCIiIgVgoRMRESkAC52IIsbUqVNx4YUXHvE+VVVVMBgMGDp0aHhCEUUJFjoRRZWZM2fisssuQ3t7O1asWCE6DlHEYKETUdSQZRlvvfUWrr32Wlx11VV44403REciihgsdCKKGt9//z06OjowYcIEXHPNNZg1axYcDofoWEQRgYVORFHjjTfewBVXXAGtVouhQ4eiqKgIs2fPFh2LKCKw0IkoKrS1teGTTz7BNddc03XbNddcw93uRD/TiQ5ARNQT7733HlwuF0444YSu22RZRiAQwI4dO1BaWiowHZF4HKETUVR44403cPfdd2PdunVdH+vXr8cpp5yCN998U3Q8IuE4QieiiGK1WrFu3bput9lsNqxZswbvvvsuBg0a1O1rV155JR5++GH885//hE7HtzRSL0mWZVl0CCIioHNhmbfffvuQt69cuRKbN28+6Gt1dXXIycnBnDlzMHny5HDEJIpILHQiIiIF4DF0IiIiBWChExERKQALnYiISAFY6ERERArAQiciIlIAFjoREZECsNCJiIgUgIVORESkACx0IiIiBWChExERKQALnYiISAFY6ERERArAQiciIlIAFjoREZECsNCJiIgUgIVORESkACx0IiIiBWChExERKQALnYiISAFY6ERERArAQiciIlIAFjoREZECsNCJiIgUgIVORESkACx0IiIiBWChExERKQALnYiISAFY6ERERArAQiciIlIAFjoREZECsNCJiIgUgIVORESkACx0IiIiBWChExERKQALnYiISAFY6ERERArAQiciIlKA/wd8i/1gTnRTWwAAAABJRU5ErkJggg==\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["fig1 = plt.figure()\n","ax1 = fig1.add_axes([0,0,1,1])\n","languages = [\"En\", \"FR\",\"SP\",\"LA\", \"GE\"]\n","people = [100, 50, 150, 40, 70]\n","ax1.pie(people, labels = languages, autopct = \"%1.2f%%\")\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"mZJgEOGNM4_c"},"source":["Scater plot"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":479},"executionInfo":{"elapsed":1267,"status":"ok","timestamp":1734901875659,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"k7qAp8QmMsou","outputId":"d038c263-21bf-423f-9a45-b6075842a8f0"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["x = np.linspace(0,10,30)\n","y = np.sin(x)\n","z = np.cos(x)\n","fig2 = plt.figure()\n","ax2 = fig2.add_axes([0,0,1,1])\n","ax2.scatter(x,y, color = \"g\")\n","ax2.scatter(x,z, color = \"b\")\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"A0V2mlv8Nkew"},"source":["3D scatter plot"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":415},"executionInfo":{"elapsed":1425,"status":"ok","timestamp":1734902284741,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"cke1kwgcNbz0","outputId":"0d64b05c-bf06-48a7-efe7-2b7a9d1a01c7"},"outputs":[{"data":{"image/png":"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\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["fig3 = plt.figure()\n","ax = plt.axes(projection = \"3d\")\n","z = 20 * np.random.random(100)\n","x = np.sin(z)\n","y = np.cos(z)\n","ax.scatter(x,y,z, c = z, cmap =\"Blues\")\n","plt.show()\n"]},{"cell_type":"markdown","metadata":{"id":"IdPf84bLRtlX"},"source":["seaborn\n","\n","used for data visualisation"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qu4ODmgbOVh_"},"outputs":[],"source":["# import library\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","import pandas as pd\n","import numpy as np"]},{"cell_type":"markdown","metadata":{"id":"5j5lgDQzSVRa"},"source":["Note: seaborn has some built-in datasets for data science"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"f6G4H2O_SQ55"},"outputs":[],"source":["# total bill vs tip dataset\n","tips = sns.load_dataset(\"tips\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":380,"status":"ok","timestamp":1734903291202,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"KIE5lg06SxqD","outputId":"f122eb01-a7e9-44a1-861d-6cfbcc65d565"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"tips\",\n  \"rows\": 244,\n  \"fields\": [\n    {\n      \"column\": \"total_bill\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.902411954856856,\n        \"min\": 3.07,\n        \"max\": 50.81,\n        \"num_unique_values\": 229,\n        \"samples\": [\n          22.12,\n          20.23,\n          14.78\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tip\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3836381890011826,\n        \"min\": 1.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 123,\n        \"samples\": [\n          3.35,\n          1.5,\n          6.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Male\",\n          \"Female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"smoker\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yes\",\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Sat\",\n          \"Fri\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Lunch\",\n          \"Dinner\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 6,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe","variable_name":"tips"},"text/html":["\n","  <div id=\"df-b5650820-7db1-4e27-8364-591b93dfc67a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>total_bill</th>\n","      <th>tip</th>\n","      <th>sex</th>\n","      <th>smoker</th>\n","      <th>day</th>\n","      <th>time</th>\n","      <th>size</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>16.99</td>\n","      <td>1.01</td>\n","      <td>Female</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10.34</td>\n","      <td>1.66</td>\n","      <td>Male</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>21.01</td>\n","      <td>3.50</td>\n","      <td>Male</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>23.68</td>\n","      <td>3.31</td>\n","      <td>Male</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>24.59</td>\n","      <td>3.61</td>\n","      <td>Female</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b5650820-7db1-4e27-8364-591b93dfc67a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b5650820-7db1-4e27-8364-591b93dfc67a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b5650820-7db1-4e27-8364-591b93dfc67a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bbded71a-d57f-4a18-803f-a835805e5637\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bbded71a-d57f-4a18-803f-a835805e5637')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bbded71a-d57f-4a18-803f-a835805e5637 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["   total_bill   tip     sex smoker  day    time  size\n","0       16.99  1.01  Female     No  Sun  Dinner     2\n","1       10.34  1.66    Male     No  Sun  Dinner     3\n","2       21.01  3.50    Male     No  Sun  Dinner     3\n","3       23.68  3.31    Male     No  Sun  Dinner     2\n","4       24.59  3.61  Female     No  Sun  Dinner     4"]},"execution_count":106,"metadata":{},"output_type":"execute_result"}],"source":["tips.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":317},"executionInfo":{"elapsed":5221,"status":"ok","timestamp":1734903516328,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"T1rt7Vf8S1nQ","outputId":"680adcfe-0636-4721-ed5a-27e6d0bbe3bc"},"outputs":[{"data":{"text/plain":["<seaborn.axisgrid.FacetGrid at 0x79421e79ba30>"]},"execution_count":107,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["<Figure size 1101x500 with 2 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# visualise the data\n","sns.relplot(data = tips, x = \"total_bill\", y = \"tip\", col = \"time\", hue =\"smoker\", style = 'smoker', size = \"size\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"isSIYqvOTrY-"},"outputs":[],"source":["# setting a theme for plots\n","sns.set_theme()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":312},"executionInfo":{"elapsed":7169,"status":"ok","timestamp":1734903639763,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"80hKKl9zUGPU","outputId":"53984593-1b97-4c13-bc29-cfe0fdb4f934"},"outputs":[{"data":{"text/plain":["<seaborn.axisgrid.FacetGrid at 0x79420f620e20>"]},"execution_count":109,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["<Figure size 1111.5x500 with 2 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# visualise the data\n","sns.relplot(data = tips, x = \"total_bill\", y = \"tip\", col = \"time\", hue =\"smoker\", style = 'smoker', size = \"size\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nocsKxY4UJBY"},"outputs":[],"source":["# load the iris dataset\n","iris = sns.load_dataset(\"iris\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":375,"status":"ok","timestamp":1734903753506,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"R3dbLvXFUZ_Q","outputId":"20ce74a3-8623-4ea3-8358-92ae70be0651"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"iris\",\n  \"rows\": 150,\n  \"fields\": [\n    {\n      \"column\": \"sepal_length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8280661279778629,\n        \"min\": 4.3,\n        \"max\": 7.9,\n        \"num_unique_values\": 35,\n        \"samples\": [\n          6.2,\n          4.5,\n          5.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sepal_width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.435866284936698,\n        \"min\": 2.0,\n        \"max\": 4.4,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          2.3,\n          4.0,\n          3.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal_length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7652982332594667,\n        \"min\": 1.0,\n        \"max\": 6.9,\n        \"num_unique_values\": 43,\n        \"samples\": [\n          6.7,\n          3.8,\n          3.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal_width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7622376689603465,\n        \"min\": 0.1,\n        \"max\": 2.5,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          0.2,\n          1.2,\n          1.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"species\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"setosa\",\n          \"versicolor\",\n          \"virginica\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe","variable_name":"iris"},"text/html":["\n","  <div id=\"df-04272100-6c93-47bc-894a-3dc82de0f898\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sepal_length</th>\n","      <th>sepal_width</th>\n","      <th>petal_length</th>\n","      <th>petal_width</th>\n","      <th>species</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>setosa</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>setosa</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","      <td>setosa</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","      <td>setosa</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>setosa</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-04272100-6c93-47bc-894a-3dc82de0f898')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-04272100-6c93-47bc-894a-3dc82de0f898 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-04272100-6c93-47bc-894a-3dc82de0f898');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f74c88bb-8e9e-4e89-ac56-49a3ba258fb8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f74c88bb-8e9e-4e89-ac56-49a3ba258fb8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f74c88bb-8e9e-4e89-ac56-49a3ba258fb8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["   sepal_length  sepal_width  petal_length  petal_width species\n","0           5.1          3.5           1.4          0.2  setosa\n","1           4.9          3.0           1.4          0.2  setosa\n","2           4.7          3.2           1.3          0.2  setosa\n","3           4.6          3.1           1.5          0.2  setosa\n","4           5.0          3.6           1.4          0.2  setosa"]},"execution_count":112,"metadata":{},"output_type":"execute_result"}],"source":["iris.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":476},"executionInfo":{"elapsed":1597,"status":"ok","timestamp":1734903873075,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"0Xi7XSkNUmdj","outputId":"0034f4b1-c3fa-44a2-9631-db5648c580be"},"outputs":[{"data":{"text/plain":["<Axes: xlabel='sepal_length', ylabel='petal_length'>"]},"execution_count":113,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# scatter plot\n","sns.scatterplot(x = \"sepal_length\", y = \"petal_length\", hue = \"species\", data = iris)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":476},"executionInfo":{"elapsed":1537,"status":"ok","timestamp":1734903971963,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"fHviAS4IVDVI","outputId":"de889f58-3b46-48d5-91c0-36aa51aff427"},"outputs":[{"data":{"text/plain":["<Axes: xlabel='sepal_length', ylabel='petal_width'>"]},"execution_count":114,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# scatter plot\n","sns.scatterplot(x = \"sepal_length\", y = \"petal_width\", hue = \"species\", data = iris)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"iuitGuT9VbhL"},"outputs":[],"source":["# loading the titanic data set\n","titanic = sns.load_dataset(\"titanic\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"executionInfo":{"elapsed":395,"status":"ok","timestamp":1734904029605,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"U3iN3hjcVn5e","outputId":"1757181c-4d1f-432a-d704-225f852f82a7"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"titanic\",\n  \"rows\": 891,\n  \"fields\": [\n    {\n      \"column\": \"survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pclass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"female\",\n          \"male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.526497332334044,\n        \"min\": 0.42,\n        \"max\": 80.0,\n        \"num_unique_values\": 88,\n        \"samples\": [\n          0.75,\n          22.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sibsp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 8,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"parch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fare\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49.693428597180905,\n        \"min\": 0.0,\n        \"max\": 512.3292,\n        \"num_unique_values\": 248,\n        \"samples\": [\n          11.2417,\n          51.8625\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"embarked\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"S\",\n          \"C\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"class\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Third\",\n          \"First\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"who\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"man\",\n          \"woman\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"adult_male\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"deck\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"C\",\n          \"E\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"embark_town\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Southampton\",\n          \"Cherbourg\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"alive\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"yes\",\n          \"no\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"alone\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe","variable_name":"titanic"},"text/html":["\n","  <div id=\"df-e353910f-0ee4-4952-b7fe-da5f2f587780\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>pclass</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>fare</th>\n","      <th>embarked</th>\n","      <th>class</th>\n","      <th>who</th>\n","      <th>adult_male</th>\n","      <th>deck</th>\n","      <th>embark_town</th>\n","      <th>alive</th>\n","      <th>alone</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>C</td>\n","      <td>First</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>C</td>\n","      <td>Cherbourg</td>\n","      <td>yes</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>S</td>\n","      <td>First</td>\n","      <td>woman</td>\n","      <td>False</td>\n","      <td>C</td>\n","      <td>Southampton</td>\n","      <td>yes</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>S</td>\n","      <td>Third</td>\n","      <td>man</td>\n","      <td>True</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","      <td>no</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e353910f-0ee4-4952-b7fe-da5f2f587780')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e353910f-0ee4-4952-b7fe-da5f2f587780 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e353910f-0ee4-4952-b7fe-da5f2f587780');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-72a3b197-8f2a-46b6-92b2-9eb1a9f95e4b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-72a3b197-8f2a-46b6-92b2-9eb1a9f95e4b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-72a3b197-8f2a-46b6-92b2-9eb1a9f95e4b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["   survived  pclass     sex   age  sibsp  parch     fare embarked  class  \\\n","0         0       3    male  22.0      1      0   7.2500        S  Third   \n","1         1       1  female  38.0      1      0  71.2833        C  First   \n","2         1       3  female  26.0      0      0   7.9250        S  Third   \n","3         1       1  female  35.0      1      0  53.1000        S  First   \n","4         0       3    male  35.0      0      0   8.0500        S  Third   \n","\n","     who  adult_male deck  embark_town alive  alone  \n","0    man        True  NaN  Southampton    no  False  \n","1  woman       False    C    Cherbourg   yes  False  \n","2  woman       False  NaN  Southampton   yes   True  \n","3  woman       False    C  Southampton   yes  False  \n","4    man        True  NaN  Southampton    no   True  "]},"execution_count":116,"metadata":{},"output_type":"execute_result"}],"source":["titanic.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":476},"executionInfo":{"elapsed":1639,"status":"ok","timestamp":1734904162506,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"srBICvULVp3k","outputId":"1fb6386b-c683-4214-fd03-c683c171f40c"},"outputs":[{"data":{"text/plain":["<Axes: xlabel='class', ylabel='count'>"]},"execution_count":118,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAkUAAAG5CAYAAACAxkA+AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguMCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy81sbWrAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAuw0lEQVR4nO3de3RU5aGw8WcmhEshkwAFVAKSoKRog6Ttx0VCFEUhAaW1UtGC1SpSPVyVKkVQ6LGCFhS5iDUiFrEqULRWIyqKBjg5tp5Fi9YbErCIBVRghmshl+8PFlOnwYoJZCb4/NZiyez9zp53x23yuPeeSaCysrISSZKkr7lgvCcgSZKUCIwiSZIkjCJJkiTAKJIkSQKMIkmSJMAokiRJAowiSZIkwCiSJEkCjCJJkiQA6sV7AnVNZWUlFRV+CLgkSXVFMBggEAh86Tij6CuqqKhk+/Y98Z6GJEk6Ss2aNSYp6cujyMtnkiRJGEWSJEmAUSRJkgQkWBQtXbqUrKysKn+mTZsWM27x4sX06dOH7OxsLr74YlasWFFlW7t27WL8+PF06dKFnJwcRo4cybZt22prVyRJUh2TkDdaP/TQQ6SkpEQft2rVKvr35557jokTJ/Kzn/2Mbt26UVRUxPDhw3nsscfo3LlzdNzo0aP54IMPmDRpEg0aNGDGjBkMHTqU3//+99Srl5C7LUmS4igh6+DMM8+kWbNmR1w3c+ZM+vXrx+jRowHo1q0b77//PnPmzKGwsBCANWvWsGrVKubNm0dubi4AGRkZFBQU8OKLL1JQUFAr+yFJkuqOhLp89mU2bdrExo0byc/Pj1leUFBASUkJBw4cAKC4uJhQKESPHj2iYzIzM+nYsSPFxcW1OmdJklQ3JGQU9e/fn44dO3L++efzm9/8hvLycgBKS0uBQ2d9Pq99+/YcPHiQTZs2RcdlZGRU+aCmzMzM6DYkSZI+L6Eun7Vo0YIRI0Zw1llnEQgEeOWVV5gxYwZbt27ltttuIxwOAxAKhWKed/jx4fWRSCTmnqTDUlNTeeutt2o8z3r1ErIlJUlSDSRUFPXs2ZOePXtGH+fm5tKgQQN++9vf8rOf/SyOM/uXYDBA06aN4z0NSZJ0jCVUFB1Jfn4+Dz/8MO+88w6pqanAobfbt2jRIjomEokARNeHQiG2bNlSZVvhcDg6proqKiqJRPbWaBuSJKn2hEKNSEr68qs8CR9Fn5eZmQkcumfo8N8PP05OTqZNmzbRcSUlJVRWVsbcV7RhwwY6dOhQ43mUlVXUeBuSJCmxJPzNMUVFRSQlJXHGGWfQpk0b2rVrx7Jly6qM6d69O/Xr1wcgLy+PcDhMSUlJdMyGDRt4++23ycvLq9X5S5KkuiGhzhRdc801dO3alaysLABefvllFi1axJVXXhm9XDZixAjGjh1L27Zt6dq1K0VFRaxdu5aFCxdGt5OTk0Nubi7jx4/nlltuoUGDBtx7771kZWVx4YUXxmXfJElSYgtUVlZWxnsSh91xxx2sXLmSLVu2UFFRQbt27Rg4cCBDhgyJuQy2ePFiCgsL+fjjj8nIyODGG2+kV69eMdvatWsXU6ZM4aWXXqKsrIzc3FwmTJgQ8+nY1VFeXsH27XtqtA1J0n8WDAYIBgNfPlBfCxUVlVRUVD9XmjVrfFT3FCVUFNUFRpEkHV/BYIC0tG8c1Q8xfT2Ul1ewc+feaofR0UZRQl0+kyQpGAyQlBRkzuOr2bwtHO/pKM5at0zlvy7vQTAYqNHZoqNhFEmSEtLmbWE2bt4R72noa8Rzk5IkSRhFkiRJgFEkSZIEGEWSJEmAUSRJkgQYRZIkSYBRJEmSBBhFkiRJgFEkSZIEGEWSJEmAUSRJkgQYRZIkSYBRJEmSBBhFkiRJgFEkSZIEGEWSJEmAUSRJkgQYRZIkSYBRJEmSBBhFkiRJgFEkSZIEGEWSJEmAUSRJkgQYRZIkSYBRJEmSBBhFkiRJgFEkSZIEGEWSJEmAUSRJkgQYRZIkSYBRJEmSBBhFkiRJgFEkSZIEGEWSJEmAUSRJkgQYRZIkSYBRJEmSBBhFkiRJgFEkSZIEGEWSJEmAUSRJkgQYRZIkSYBRJEmSBBhFkiRJgFEkSZIEGEWSJEmAUSRJkgQYRZIkSYBRJEmSBBhFkiRJgFEkSZIEGEWSJEmAUSRJkgQYRZIkSYBRJEmSBBhFkiRJgFEkSZIEJHAU7dmzh7y8PLKysnjzzTdj1i1evJg+ffqQnZ3NxRdfzIoVK6o8f9euXYwfP54uXbqQk5PDyJEj2bZtW21NX5Ik1TEJG0X3338/5eXlVZY/99xzTJw4kfz8fAoLC+ncuTPDhw/nL3/5S8y40aNHs3r1aiZNmsS0adPYsGEDQ4cOpaysrJb2QJIk1SUJGUXr16/nd7/7HSNGjKiybubMmfTr14/Ro0fTrVs3fvnLX5Kdnc2cOXOiY9asWcOqVav41a9+RUFBAeeffz733Xcf7733Hi+++GJt7ookSaojEjKK7rjjDgYNGkRGRkbM8k2bNrFx40by8/NjlhcUFFBSUsKBAwcAKC4uJhQK0aNHj+iYzMxMOnbsSHFx8fHfAUmSVOfUi/cE/t2yZct4//33mTVrFn/7299i1pWWlgJUiaX27dtz8OBBNm3aRPv27SktLSUjI4NAIBAzLjMzM7qNmqhXLyFbUpJOCElJfo9VVbVxXCRUFO3bt4+pU6cyZswYmjRpUmV9OBwGIBQKxSw//Pjw+kgkQkpKSpXnp6am8tZbb9VojsFggKZNG9doG5Ik6asJhRod99dIqCiaO3cuzZs354c//GG8p/KFKioqiUT2xnsaknTCSkoK1soPQNUtkcg+yssrqvXcUKjRUZ1pSpgo2rx5Mw8//DBz5sxh165dAOzduzf6zz179pCamgocert9ixYtos+NRCIA0fWhUIgtW7ZUeY1wOBwdUxNlZdX7lyJJkqqnvLziuP/8TZgo+uijjzh48CDXXXddlXVXXnklZ511FtOnTwcO3VuUmZkZXV9aWkpycjJt2rQBDt07VFJSQmVlZcx9RRs2bKBDhw7HeU8kSVJdlDBR1LFjRxYsWBCz7J133mHKlClMnjyZ7Oxs2rRpQ7t27Vi2bBm9e/eOjisqKqJ79+7Ur18fgLy8PO6//35KSko4++yzgUNB9Pbbb3PttdfW3k5JkqQ6I2GiKBQK0bVr1yOuO/PMMznzzDMBGDFiBGPHjqVt27Z07dqVoqIi1q5dy8KFC6Pjc3JyyM3NZfz48dxyyy00aNCAe++9l6ysLC688MJa2R9JklS3JEwUHa3+/fuzb98+CgsLefDBB8nIyGD27Nnk5OTEjJsxYwZTpkzhtttuo6ysjNzcXCZMmEC9enVulyVJUi0IVFZWVsZ7EnVJeXkF27fvifc0JOmEVa9ekKZNGzP+viI2bt4R7+koztq1bsqdowrYsWNPtW+0btas8VG9+8xPyJIkScIokiRJAowiSZIkwCiSJEkCjCJJkiTAKJIkSQKMIkmSJMAokiRJAowiSZIkwCiSJEkCjCJJkiTAKJIkSQKMIkmSJMAokiRJAowiSZIkwCiSJEkCjCJJkiTAKJIkSQKMIkmSJMAokiRJAowiSZIkwCiSJEkCjCJJkiTAKJIkSQKMIkmSJMAokiRJAowiSZIkwCiSJEkCjCJJkiTAKJIkSQKMIkmSJMAokiRJAowiSZIkwCiSJEkCjCJJkiTAKJIkSQKMIkmSJMAokiRJAowiSZIkwCiSJEkCjCJJkiTAKJIkSQKMIkmSJMAokiRJAowiSZIkwCiSJEkCjCJJkiTAKJIkSQKMIkmSJMAokiRJAowiSZIkwCiSJEkCjCJJkiTAKJIkSQKMIkmSJMAokiRJAowiSZIkwCiSJEkCjCJJkiQgwaLotddeY/DgwXTr1o1vf/vbnH/++UyZMoVdu3bFjHvllVe4+OKLyc7Opk+fPvz+97+vsq0DBw5w11130aNHDzp37szVV19NaWlpbe2KJEmqYxIqinbu3EmnTp2YPHky8+bN4+qrr+bpp59m1KhR0TFvvPEGw4cPp3PnzhQWFpKfn8+tt97KsmXLYrZ1xx13sHjxYsaMGcOsWbM4cOAAV111VZXAkiRJAqgX7wl83oABA2Ied+3alfr16zNx4kS2bt1Kq1atmDt3Lp06deKXv/wlAN26dWPTpk3MnDmTvn37ArBlyxaWLFnC7bffzqWXXgpAdnY2vXr14oknnmDo0KG1u2OSJCnhJdSZoiNJS0sD4ODBgxw4cIDXX389Gj+HFRQUsH79ej766CMAVq1aRUVFRcy4tLQ0evToQXFxca3NXZIk1R0JdabosPLycsrKyvjggw+YM2cO5513Hunp6XzwwQccPHiQzMzMmPHt27cHoLS0lPT0dEpLS2nevDmpqalVxi1ZsqTG86tXL+FbUpLqrKQkv8eqqto4LhIyinr16sXWrVsB6NmzJ9OnTwcgHA4DEAqFYsYffnx4fSQSISUlpcp2Q6FQdEx1BYMBmjZtXKNtSJKkryYUanTcXyMho+jBBx9k3759fPDBB8ydO5ef/exnzJ8/P97TAqCiopJIZG+8pyFJJ6ykpGCt/ABU3RKJ7KO8vKJazw2FGh3VmaaEjKJvfetbAOTk5JCdnc2AAQN46aWXOO200wCqvIMsEokARC+XhUIhdu/eXWW7kUikyiW16igrq96/FEmSVD3l5RXH/edvwl+4zcrKIjk5mb///e+0bduW5OTkKp83dPjx4XuNMjMz+fTTT6tcKistLa1yP5IkSRLUgSj661//ysGDB0lPT6d+/fp07dqVF154IWZMUVER7du3Jz09HYDc3FyCwSAvvvhidEw4HGbVqlXk5eXV6vwlSVLdkFCXz4YPH863v/1tsrKyaNiwIe+++y7z5s0jKyuL3r17A3D99ddz5ZVXMmnSJPLz83n99dd59tlnuffee6PbOemkk7j00ku5++67CQaDtGrVit/85jekpKQwaNCgeO2eJElKYAkVRZ06daKoqIgHH3yQyspKWrduzcCBA7nmmmuoX78+AN/73veYNWsWM2bMYMmSJZxyyinccccd5Ofnx2xrwoQJNG7cmOnTp7Nnzx6+853vMH/+/CO+K02SJClQWVlZGe9J1CXl5RVs374n3tOQpBNWvXpBmjZtzPj7iti4eUe8p6M4a9e6KXeOKmDHjj3VvtG6WbPGR/Xus4S/p0iSJKk2VDuKnn766eiv1TiSjz76iKeffrq6m5ckSapV1Y6iX/ziF6xZs+YL169du5Zf/OIX1d28JElSrap2FH3ZrUh79+4lKSmpupuXJEmqVV/p3Wfvvvsu7777bvTxG2+8QXl5eZVxkUiEJ554goyMjJrPUJIkqRZ8pShavnw5s2fPBiAQCPDkk0/y5JNPHnFsKBTirrvuqvkMJUmSasFXiqIf/ehHnHvuuVRWVjJw4EBGjhxZ5ROiA4EAjRo1om3bttSrl1AfgyRJkvSFvlK1tGzZkpYtWwKwYMEC2rdvT/PmzY/LxCRJkmpTtU/ldOnS5VjOQ5IkKa5qdH1r5cqVLFmyhE2bNhGJRKq8Iy0QCLB8+fIaTVCSJKk2VDuKHnroIaZPn07z5s3p1KkTWVlZx3JekiRJtaraUbRgwQK6devGgw8+SHJy8rGckyRJUq2r9oc3RiIR+vTpYxBJkqQTQrWjKDs7mw0bNhzLuUiSJMVNtaNo0qRJvPTSS/zxj388lvORJEmKi2rfUzR69GjKysq4+eabmTRpEieddBLBYGxjBQIBnnnmmRpPUpIk6XirdhSlpaWRlpbGqaeeeiznI0mSFBfVjqJHH330WM5DkiQprqp9T5EkSdKJpNpniv785z8f1bj/9//+X3VfQpIkqdZUO4qGDBlCIBD40nHvvPNOdV9CkiSp1tToE63/XXl5OZs3b2bRokVUVFRw00031WhykiRJtaXaUdSlS5cvXHfJJZdwxRVX8Kc//Ynu3btX9yUkSZJqzXG50ToYDNKvXz8WL158PDYvSZJ0zB23d5+Fw2F27dp1vDYvSZJ0TFX78tnHH398xOWRSIQ33niDefPm8b3vfa/aE5MkSapN1Y6i88477wvffVZZWUnnzp2ZPHlytScmSZJUm6odRXfeeWeVKAoEAoRCIdq2bctpp51W48lJkiTVlmpH0SWXXHIs5yFJkhRX1Y6iz/vggw/YvHkzAK1bt/YskSRJqnNqFEXLly9n6tSp0SA6LD09nXHjxnH++efXaHKSJEm1pdpR9NprrzFy5EhOOeUUxowZQ/v27QFYv349ixYtYsSIETzwwAPk5eUds8lKkiQdL9WOovvvv5+srCwee+wxvvGNb0SXn3/++QwePJgrrriCOXPmGEWSJKlOqPaHN7733nt8//vfjwmiw77xjW/wgx/8gPfee69Gk5MkSaot1Y6iBg0aEA6Hv3B9OBymQYMG1d28JElSrap2FHXt2pUFCxawZs2aKuv++te/8uijj/rLYCVJUp1R7XuKfv7znzNo0CCuuOIKOnXqREZGBgAbNmxg7dq1NG/enLFjxx6ziUqSJB1P1T5T1KZNG5555hmGDBlCOBymqKiIoqIiwuEwV155JX/4wx9IT08/lnOVJEk6bqp9pqisrIwGDRowfvx4xo8fX2X97t27KSsro169Y/L5kJIkScdVtc8U3XHHHQwaNOgL119++eVMnTq1upuXJEmqVdWOopUrV9KnT58vXN+nTx+Ki4uru3lJkqRaVe0o2rZtG61atfrC9S1btmTr1q3V3bwkSVKtqnYUpaWlsWHDhi9cv379epo0aVLdzUuSJNWqakdRz549eeKJJ3j77berrPvb3/7GokWL/BUfkiSpzqj2W8NGjRrFypUrGThwIOeddx6nnXYaAOvWrWPFihU0a9aMUaNGHbOJSpIkHU/VjqJWrVrx+9//nunTp/Pyyy/z0ksvAdCkSRMuuugixowZ8x/vOZIkSUokNfoQoZYtW3LXXXdRWVnJ9u3bAWjWrBmBQOCYTE6SJKm2HJNPVgwEAjRv3vxYbEqSJCkuqn2jtSRJ0onEKJIkScIokiRJAo7RPUU6esFggGDQG9H1LxUVlVRUVMZ7GpL0tWcU1aJgMEBa2jdISvIEnf6lvLyCnTv3GkaSFGdGUS0KBgMkJQWZ8/hqNm8Lx3s6SgCtW6byX5f3IBgMGEWSFGdGURxs3hZm4+Yd8Z6GJEn6HK/jSJIkYRRJkiQBRpEkSRKQYFH0/PPPc/3115OXl0fnzp0ZMGAAS5YsobIy9gbUxYsX06dPH7Kzs7n44otZsWJFlW3t2rWL8ePH06VLF3Jychg5ciTbtm2rrV2RJEl1TEJF0SOPPEKjRo0YN24cc+fOJS8vj4kTJzJnzpzomOeee46JEyeSn59PYWEhnTt3Zvjw4fzlL3+J2dbo0aNZvXo1kyZNYtq0aWzYsIGhQ4dSVlZWy3slSZLqgoR699ncuXNp1qxZ9HH37t3ZuXMn8+fP54YbbiAYDDJz5kz69evH6NGjAejWrRvvv/8+c+bMobCwEIA1a9awatUq5s2bR25uLgAZGRkUFBTw4osvUlBQUOv7JkmSEltCnSn6fBAd1rFjR3bv3s3evXvZtGkTGzduJD8/P2ZMQUEBJSUlHDhwAIDi4mJCoRA9evSIjsnMzKRjx44UFxcf352QJEl1UkJF0ZH83//9H61ataJJkyaUlpYCh876fF779u05ePAgmzZtAqC0tJSMjAwCgdhfp5GZmRndhiRJ0ucl1OWzf/fGG29QVFTELbfcAkA4fOhToEOhUMy4w48Pr49EIqSkpFTZXmpqKm+99VaN51WvXvVa0l/voS/isSH9i/896Ehq47hI2CjasmULY8aMoWvXrlx55ZXxnk5UMBigadPG8Z6GTjChUKN4T0GSElptfJ9MyCiKRCIMHTqUtLQ0Zs2aRTB4qA5TU1OBQ2+3b9GiRcz4z68PhUJs2bKlynbD4XB0THVVVFQSieyt1nOTkoL+8NMRRSL7KC+viPc0pITg90odSU2+T4ZCjY7qTFPCRdH+/fsZNmwYu3bt4sknn4y5DJaZmQkcumfo8N8PP05OTqZNmzbRcSUlJVRWVsbcV7RhwwY6dOhQ4zmWlfnDS8dWeXmFx5Uk/Qe18X0yoS7clpWVMXr0aEpLS3nooYdo1apVzPo2bdrQrl07li1bFrO8qKiI7t27U79+fQDy8vIIh8OUlJREx2zYsIG3336bvLy8478jkiSpzkmoM0WTJ09mxYoVjBs3jt27d8d8IOMZZ5xB/fr1GTFiBGPHjqVt27Z07dqVoqIi1q5dy8KFC6Njc3JyyM3NZfz48dxyyy00aNCAe++9l6ysLC688MI47JkkSUp0CRVFq1evBmDq1KlV1r388sukp6fTv39/9u3bR2FhIQ8++CAZGRnMnj2bnJycmPEzZsxgypQp3HbbbZSVlZGbm8uECROoVy+hdlmSJCWIhCqEV1555ajGDRw4kIEDB/7HMSkpKdx5553ceeedx2JqkiTpBJdQ9xRJkiTFi1EkSZKEUSRJkgQk2D1FkuIjGAwQDAa+fKC+FioqKqmoqIz3NKRaZxRJX3PBYIC0tG/4+6YUVV5ewc6dew0jfe0YRdLXXDAYICkpyJzHV7N5Wzje01GctW6Zyn9d3oNgMGAU6WvHKJIEwOZtYTZu3hHvaUhS3Hi+XJIkCaNIkiQJMIokSZIAo0iSJAkwiiRJkgCjSJIkCTCKJEmSAKNIkiQJMIokSZIAo0iSJAkwiiRJkgCjSJIkCTCKJEmSAKNIkiQJMIokSZIAo0iSJAkwiiRJkgCjSJIkCTCKJEmSAKNIkiQJMIokSZIAo0iSJAkwiiRJkgCjSJIkCTCKJEmSAKNIkiQJMIokSZIAo0iSJAkwiiRJkgCjSJIkCTCKJEmSAKNIkiQJMIokSZIAo0iSJAkwiiRJkgCjSJIkCTCKJEmSAKNIkiQJMIokSZIAo0iSJAkwiiRJkgCjSJIkCTCKJEmSAKNIkiQJMIokSZIAo0iSJAkwiiRJkgCjSJIkCTCKJEmSAKNIkiQJMIokSZIAo0iSJAlIsCj68MMPue222xgwYABnnHEG/fv3P+K4xYsX06dPH7Kzs7n44otZsWJFlTG7du1i/PjxdOnShZycHEaOHMm2bduO9y5IkqQ6KqGiaN26dbz22muceuqptG/f/ohjnnvuOSZOnEh+fj6FhYV07tyZ4cOH85e//CVm3OjRo1m9ejWTJk1i2rRpbNiwgaFDh1JWVlYLeyJJkuqaevGewOedd9559O7dG4Bx48bx1ltvVRkzc+ZM+vXrx+jRowHo1q0b77//PnPmzKGwsBCANWvWsGrVKubNm0dubi4AGRkZFBQU8OKLL1JQUFA7OyRJkuqMhDpTFAz+5+ls2rSJjRs3kp+fH7O8oKCAkpISDhw4AEBxcTGhUIgePXpEx2RmZtKxY0eKi4uP/cQlSVKdl1BR9GVKS0uBQ2d9Pq99+/YcPHiQTZs2RcdlZGQQCARixmVmZka3IUmS9HkJdfnsy4TDYQBCoVDM8sOPD6+PRCKkpKRUeX5qauoRL8l9VfXqVa8lk5LqVIOqFsXz2PC41JF4TCrR1MZxUaeiKBEEgwGaNm0c72noBBMKNYr3FKQYHpNKNLVxTNapKEpNTQUOvd2+RYsW0eWRSCRmfSgUYsuWLVWeHw6Ho2Oqq6Kikkhkb7Wem5QU9BuNjigS2Ud5eUVcXtvjUkfiMalEU5NjMhRqdFRnmupUFGVmZgKH7hk6/PfDj5OTk2nTpk10XElJCZWVlTH3FW3YsIEOHTrUeB5lZfH5RqETV3l5hceVEorHpBJNbRyTderCbZs2bWjXrh3Lli2LWV5UVET37t2pX78+AHl5eYTDYUpKSqJjNmzYwNtvv01eXl6tzlmSJNUNCXWmaN++fbz22msAbN68md27d0cDqEuXLjRr1owRI0YwduxY2rZtS9euXSkqKmLt2rUsXLgwup2cnBxyc3MZP348t9xyCw0aNODee+8lKyuLCy+8MC77JkmSEltCRdFnn33GqFGjYpYdfrxgwQK6du1K//792bdvH4WFhTz44INkZGQwe/ZscnJyYp43Y8YMpkyZwm233UZZWRm5ublMmDCBevUSapclSVKCSKhCSE9P57333vvScQMHDmTgwIH/cUxKSgp33nknd95557GaniRJOoHVqXuKJEmSjhejSJIkCaNIkiQJMIokSZIAo0iSJAkwiiRJkgCjSJIkCTCKJEmSAKNIkiQJMIokSZIAo0iSJAkwiiRJkgCjSJIkCTCKJEmSAKNIkiQJMIokSZIAo0iSJAkwiiRJkgCjSJIkCTCKJEmSAKNIkiQJMIokSZIAo0iSJAkwiiRJkgCjSJIkCTCKJEmSAKNIkiQJMIokSZIAo0iSJAkwiiRJkgCjSJIkCTCKJEmSAKNIkiQJMIokSZIAo0iSJAkwiiRJkgCjSJIkCTCKJEmSAKNIkiQJMIokSZIAo0iSJAkwiiRJkgCjSJIkCTCKJEmSAKNIkiQJMIokSZIAo0iSJAkwiiRJkgCjSJIkCTCKJEmSAKNIkiQJMIokSZIAo0iSJAkwiiRJkgCjSJIkCTCKJEmSAKNIkiQJMIokSZIAo0iSJAk4waNo/fr1XH311XTu3JkePXpw9913c+DAgXhPS5IkJaB68Z7A8RIOh/nJT35Cu3btmDVrFlu3bmXq1Kns37+f2267Ld7TkyRJCeaEjaInnniCPXv2MHv2bNLS0gAoLy9n8uTJDBs2jFatWsV3gpIkKaGcsJfPiouL6d69ezSIAPLz86moqGD16tXxm5gkSUpIJ+yZotLSUn74wx/GLAuFQrRo0YLS0tJqbzcYDNCsWeNqPTcQOPTPW645j/LyimrPQSeOpKRD/1+SmtqIysr4zMHjUp/nMalEcyyOyWAwcFTjTtgoikQihEKhKstTU1MJh8PV3m4gECAp6ei+uF8ktUnDGj1fJ55gMP4nbT0u9Xkek0o0tXFMxv+olyRJSgAnbBSFQiF27dpVZXk4HCY1NTUOM5IkSYnshI2izMzMKvcO7dq1i08++YTMzMw4zUqSJCWqEzaK8vLy+J//+R8ikUh02bJlywgGg/To0SOOM5MkSYkoUFkZr/cXHF/hcJh+/fqRkZHBsGHDoh/eeNFFF/nhjZIkqYoTNorg0K/5+O///m/WrFlD48aNGTBgAGPGjKF+/frxnpokSUowJ3QUSZIkHa0T9p4iSZKkr8IokiRJwiiSJEkCjCJJkiTAKJIkSQKMIkmSJMAoUg3NmjWLrKysKn/69+9PVlYW8+bNq/FrvPPOO8yaNYt9+/YdgxmrrnnmmWe49NJL+e53v8t3vvMd8vPzufXWW/nss8/iPbWvbPny5WRlZfHRRx/Feyo6jo70PfHf/yxdupTXX3+drKws3nzzzf+4vXHjxtG/f/9qz+eGG25gyJAh1X7+10m9eE9AdV/Dhg357W9/W2XZ/v37OeWUU2q8/XfeeYfZs2fz4x//mEaNGtV4e6o7CgsLmT59OldddRUjR46ksrKSdevW8cc//pFt27bRvHnzeE9RquLJJ5+MeXzZZZcxZMiQmLBp27Yt69atO6rt3XDDDezdu/eYzlFHZhSpxoLBIJ07d/7KzysvL6eiooLk5ORjPymdEB599FF+8IMfMG7cuOiyc845h2uvvZaKioo4zkz6Ykf6fnjyySdX6/skHAqoL7N//34aNmxYre3rX7x8puPm3y+fDRkyhGHDhvHUU0/Rp08fsrOzeffdd4lEIkyYMIGePXuSnZ3NOeecw5gxYwBYunQpv/jFLwDo3r07WVlZnHfeeXHZH9W+SCRCy5Ytj7guGIz99rV06VIuuugisrOz6dmzJ/feey/l5eUxY7Zu3crNN9/M2WefTadOnejbt2/MWc6Kigruv/9+zjvvPL797W/Tt29fnnjiiZhtzJo1i5ycHN577z0uv/xyzjrrLPr378/KlStjxh08eJBf/epXdOnShe9+97uMHz+ePXv21OTLoRNUJBLhpptuIicnh169elFYWBiz/t8vny1dupSsrCzWrFnD1VdfTefOnbn77ruBQ7/eavDgwWRnZ9O7d2+eeuqpWt2Xus4zRTomysrKYh4nJSUdcdxbb73F5s2bGTVqFKFQiJNPPpkpU6awcuVKbrrpJlq3bs0nn3xCcXExAOeeey7XX389c+fO5aGHHiIlJcXfXfc1cuaZZ/LEE0+Qnp7OueeeS4sWLY44bv78+fz617/mJz/5CePGjWP9+vXRKBo7diwAO3bs4LLLLgNgzJgxpKen8+GHH/L3v/89up27776bBQsWcP3115OTk8Orr77K7bffTllZGYMHD46OO3jwIGPHjuXKK6/khhtuoLCwkJEjR/LKK6/QtGlTAO655x4ef/xxRowYwRlnnMFzzz3H9OnTj9eXSnXY7bffzoABA5gzZw7Lly9n2rRpZGVlkZeX9x+fd9NNN3HZZZcxbNgwGjVqxD//+U9++tOf0qhRo2gkzZw5k927d9OuXbta2JO6zyhSje3du5czzzwzZtnh/yD/XTgcZsmSJZx88snRZW+++Sb9+/fnBz/4QXRZv379AGjWrFn01PGZZ55Js2bNjvX0lcBuv/12hg8fzoQJEwBIT0+nV69eXHXVVaSnpwOwe/duZs6cybXXXsuNN94IQI8ePUhOTmbq1Klcc801NG3alEceeYTPPvuM559/Pvrc7t27R19r+/btLFy4kGuuuYYRI0YAkJuby44dO5gzZw6XX355NPYPR9E555wDQEZGBueffz7FxcUMGDCAnTt38rvf/Y6hQ4cybNgwAHr27MngwYPZunVrLXzlVJdceOGF0WOue/fuvPrqq7zwwgtfGkWDBg3iuuuuiz5+/PHH2bZtG88//3w0gs444wz69u1rFB0lo0g11rBhQxYuXBizrE2bNkcc26FDh5gggkP/0T711FO0aNGCnj170qFDh+M2V9UtHTp04Nlnn6WkpIRVq1bx5z//mUcffZSlS5fy2GOP0bFjR9asWcPevXvp27dvzBnLs88+m/3797Nu3Tq6dOlCSUkJ3bp1iwbRv1u7di0HDx6kb9++Mcvz8/N59tln2bhxI+3btwcOXbr7fFClp6fTsGHDaPC8//777N+/nwsuuCBmWxdeeCF//vOfj8nXRieO3Nzc6N8DgQDt27dny5YtX/q8c889N+bx2rVrOf3002MC6NRTT+Vb3/rWsZrqCc8oUo0Fg0Gys7OPauw3v/nNKssmTpxIamoq8+fP5+677+bkk0/muuuu44orrjjWU1UdVL9+fc4555zoWZmVK1cybNgw5syZw+zZs9mxYwdAzJnGz/vHP/4BwM6dOzn99NO/8HXC4TBQ9Rg9/Hjnzp3RZQ0bNqxyGTc5OZl//vOfAHzyyScAVd4dd6TjX0pJSYl5nJyczK5du770ef9+PH3ROzKbN28ePTb1nxlFqlWBQKDKspSUFG699VZuvfVW3nvvPRYsWMDkyZPp0KED3/ve9+IwSyWynj178q1vfYv169cDkJqaCsDs2bM56aSTqow/fGYoLS2Nbdu2feF209LSAPjss89o1apVdPmnn34as/5oHL736Yu2JR0PLVu25G9/+1uV5Z999hlNmjSJw4zqHt99poSSlZUVfbfZ4R96h9+yf+DAgbjNS/FxpIjYv38///jHP6L/l5yTk0OjRo3YsmUL2dnZVf4cvvG5e/fu/O///i8ff/zxEV8rOzub5ORkli1bFrP8+eefp3nz5l/pnowOHTrQsGFDXnrppZjlL7744lFvQ/qqsrOzWbduHR9++GF02Ycffsi7774bx1nVLZ4pUtwNGjSICy64gNNPP52kpCSefvppkpOTo2eJDt/H8dhjj9G7d28aNmxIVlZWPKesWnLRRRfRq1cvcnNzadmyJVu3bmXhwoXs2LGDn/zkJwCEQiFGjhzJr3/9a7Zs2UKXLl1ISkpi06ZNvPzyy8yaNYtGjRpx1VVX8Yc//IHBgwdz/fXX06ZNGzZt2sTGjRv5+c9/TrNmzRg8eDDz5s2jfv36dO7cmddee41nn32WiRMnfuE7Ko8kLS2NQYMGUVhYSMOGDaPvPvv8O92kY+2SSy5h7ty5DBs2jFGjRgGH3n3mZdujZxQp7r7zne/w9NNP89FHHxEMBunQoQMPPPBANIbOOOMMRowYweLFi3nooYc4+eSTeeWVV+I8a9WG4cOHs2LFCqZOncr27dtp2rQpWVlZPPLII3Tr1i067qc//SmtWrVi/vz5LFy4kHr16tG2bVvOPffc6JnGpk2b8vjjjzN9+nSmTZvGvn37aN26dcy9azfffDMpKSksWbKEBx54gNatWzN58mQGDRr0led+0003UV5ezkMPPURFRQUXXHABN910EzfffHPNvzDSETRs2JCHH36YSZMm8fOf/5xWrVpxww038PLLLx/VPUqCQGVlZWW8JyFJkhRv3lMkSZKEUSRJkgQYRZIkSYBRJEmSBBhFkiRJgFEkSZIEGEWSJEmAUSTpBPf666+TlZXF66+/Hu+pSEpwRpEkSRJGkSRJEmAUSZIkAf5CWEkngK1bt3LfffdRXFzMzp07admyJT179uTWW2894vg33niDBQsWsHbtWj799FOaN29Onz59uPHGG2nYsGF03CeffMI999zD6tWr2b59O2lpaWRnZ3PrrbeSnp4OwJtvvsmMGTN466232LdvH9/85jfp2rUrU6ZMqZV9l3TsGEWS6rStW7dy6aWXsmvXLn70ox+RmZnJ1q1beeGFF9i/f/8Rn7Ns2TL279/P5ZdfTlpaGmvXrmXhwoVs2bKFmTNnRseNGDGCDz74gMGDB9O6dWu2b9/O6tWr+cc//kF6ejqfffYZ11xzDU2bNuW6664jFArx0Ucf8dJLL9XW7ks6howiSXXaPffcw6effsqiRYvIzs6OLh81ahSVlZVHfM7YsWNjzghddtllnHrqqdxzzz18/PHHnHLKKUQiEdasWcPNN9/MNddcEx07bNiw6N/XrFlDOBxm3rx5Ma89ZsyYY7mLkmqJ9xRJqrMqKipYvnw5vXr1iomSwwKBwBGf9/kg2rt3L9u3bycnJ4fKykrefvvt6Jjk5GT+9Kc/EQ6Hj7idlJQUAF599VUOHjxY092RFGeeKZJUZ23fvp3du3dz+umnf6Xnffzxx8ycOZNXXnmlSvDs3r0bgPr16zN27FjuuusuevTowVlnncW5557L97//fVq0aAFAly5d6NOnD7Nnz+aRRx6hS5cu9O7dm4suuoj69esfm52UVGs8UyTpa6W8vJyrr76aV199lWuvvZY5c+Ywf/58pk6dChw6+3TYVVddxQsvvMCNN95IgwYNuO+++ygoKIieTQoEAsycOZMnn3ySwYMHs3XrVsaPH88ll1zCnj174rJ/kqrPKJJUZzVr1owmTZqwbt26o37O+++/z8aNGxk3bhzXXXcdvXv35uyzz6Zly5ZHHN+2bVt++tOf8vDDD/Pss89y8OBBHn744ZgxnTt3ZsyYMSxdupRp06axbt06ioqKarRvkmqfUSSpzgoGg/Tu3ZsVK1bw5ptvVll/pButg8FglXWVlZUsWLAgZty+ffv45z//GbOsbdu2NG7cmAMHDgAQDoervEbHjh0BomMk1R3eUySpTrvxxhtZvXo1Q4YM4Uc/+hHt27fnk08+YdmyZfzud7+rMj4zM5O2bdty1113sXXrVpo0acILL7xAJBKJGbdx40auuuoq+vbty2mnnUZSUhLLly/n008/pV+/fgA89dRTPP744/Tu3Zu2bduyZ88eFi1aRJMmTcjLy6uV/Zd07BhFkuq0Vq1asWjRIu677z7++Mc/snv3blq1akVeXl7Mu8wOS05O5oEHHuCOO+7gN7/5DQ0aNOCCCy7gxz/+MQMGDIiOO+mkk+jXrx8lJSU888wzJCUlkZmZyYwZM+jTpw9w6EbrN998k6KiIj799FNSUlLo1KkT06ZNo02bNrX2NZB0bAQqv+iDPCRJkr5GvKdIkiQJo0iSJAkwiiRJkgCjSJIkCTCKJEmSAKNIkiQJMIokSZIAo0iSJAkwiiRJkgCjSJIkCTCKJEmSAKNIkiQJMIokSZIA+P8RELdflRqlQwAAAABJRU5ErkJggg==\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# Count plot\n","sns.countplot(x = \"class\", data = titanic)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":397,"status":"ok","timestamp":1734904191473,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"DhF1gIuBWC9k","outputId":"f8341be3-bca2-4e78-8477-276c8f7a9ec6"},"outputs":[{"data":{"text/plain":["(891, 15)"]},"execution_count":120,"metadata":{},"output_type":"execute_result"}],"source":["titanic.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":476},"executionInfo":{"elapsed":877,"status":"ok","timestamp":1734904243870,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"6L_VxH66WQJU","outputId":"1b450747-159e-47e5-9dee-8bfdee6e1a14"},"outputs":[{"data":{"text/plain":["<Axes: xlabel='survived', ylabel='count'>"]},"execution_count":122,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["sns.countplot(x = \"survived\", data = titanic)"]},{"cell_type":"markdown","metadata":{"id":"-dbS69xYWlMR"},"source":["Bar chart"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":476},"executionInfo":{"elapsed":2022,"status":"ok","timestamp":1734904319890,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"8JQLAaW_WYvb","outputId":"dc359cbd-8cdb-4ee0-9581-fc6548715f51"},"outputs":[{"data":{"text/plain":["<Axes: xlabel='sex', ylabel='survived'>"]},"execution_count":123,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["sns.barplot(x = \"sex\", y =\"survived\", hue =\"class\", data = titanic)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":692},"executionInfo":{"elapsed":1891,"status":"ok","timestamp":1734904954932,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"TAJvH9vWX9gw","outputId":"ebdaf9f0-891b-4dd2-d30d-90853bc22caa"},"outputs":[{"name":"stderr","output_type":"stream","text":["<ipython-input-127-37772305b9bc>:2: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(titanic[\"survived\"])\n"]},{"data":{"text/plain":["<Axes: xlabel='survived', ylabel='Density'>"]},"execution_count":127,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# distribution plot\n","sns.distplot(titanic[\"survived\"])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":418},"executionInfo":{"elapsed":983,"status":"error","timestamp":1734905346793,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"CWY5d-CXZBOc","outputId":"c2ea483c-3361-4adb-f6cd-2d99ee7e8eb4"},"outputs":[{"ename":"ValueError","evalue":"could not convert string to float: 'male'","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-131-ad4fa6814421>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# correlation (positive, negative)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mcorrelation\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtitanic\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcorr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfiguresize\u001b[0m \u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mheatmap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcorrelation\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcbar\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msquare\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfmt\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\".1f\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mannot\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mannot_kws\u001b[0m \u001b[0;34m=\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0;34m\"size : 8\"\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcmap\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"Blues\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mcorr\u001b[0;34m(self, method, min_periods, numeric_only)\u001b[0m\n\u001b[1;32m  11047\u001b[0m         \u001b[0mcols\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m  11048\u001b[0m         \u001b[0midx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcols\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m> 11049\u001b[0;31m         \u001b[0mmat\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_numpy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfloat\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mna_value\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnan\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m  11050\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m  11051\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mmethod\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"pearson\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mto_numpy\u001b[0;34m(self, dtype, copy, na_value)\u001b[0m\n\u001b[1;32m   1991\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mdtype\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1992\u001b[0m             \u001b[0mdtype\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1993\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_mgr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mas_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mna_value\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mna_value\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1994\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mresult\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1995\u001b[0m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masarray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mas_array\u001b[0;34m(self, dtype, copy, na_value)\u001b[0m\n\u001b[1;32m   1692\u001b[0m                 \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mflags\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwriteable\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1693\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1694\u001b[0;31m             \u001b[0marr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_interleave\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mna_value\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mna_value\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1695\u001b[0m             \u001b[0;31m# The underlying data was copied within _interleave, so no need\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1696\u001b[0m             \u001b[0;31m# to further copy if copy=True or setting na_value\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36m_interleave\u001b[0;34m(self, dtype, na_value)\u001b[0m\n\u001b[1;32m   1751\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1752\u001b[0m                 \u001b[0marr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mblk\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1753\u001b[0;31m             \u001b[0mresult\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mrl\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1754\u001b[0m             \u001b[0mitemmask\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mrl\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1755\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: could not convert string to float: 'male'"]}],"source":["# correlation (positive, negative)\n","correlation = titanic.corr()\n","plt.figure(figuresize =(10,10))\n","sns.heatmap(correlation, cbar = True, square = True, fmt = \".1f\", annot = True, annot_kws ={\"size : 8\"}, cmap = \"Blues\")\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"S1hxXDBpaVXM"},"outputs":[],"source":["#importing pandas for missing values\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"iOcyey7rFdH_"},"outputs":[],"source":["# loading the data set to a pandas data\n","dataset = pd.read_csv(\"/content/Placement_Dataset.csv\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"elapsed":571,"status":"ok","timestamp":1735068463508,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"i8Ueax40Iywa","outputId":"861ff8a0-77dc-4e0f-c914-9c66f8f4f8e3"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"dataset\",\n  \"rows\": 215,\n  \"fields\": [\n    {\n      \"column\": \"sl_no\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62,\n        \"min\": 1,\n        \"max\": 215,\n        \"num_unique_values\": 215,\n        \"samples\": [\n          201,\n          213,\n          139\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"F\",\n          \"M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ssc_p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.827205398231452,\n        \"min\": 40.89,\n        \"max\": 89.4,\n        \"num_unique_values\": 103,\n        \"samples\": [\n          74.0,\n          73.96\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ssc_b\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Central\",\n          \"Others\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hsc_p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.89750915750298,\n        \"min\": 37.0,\n        \"max\": 97.7,\n        \"num_unique_values\": 97,\n        \"samples\": [\n          82.0,\n          73.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hsc_b\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Central\",\n          \"Others\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hsc_s\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Commerce\",\n          \"Science\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"degree_p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.358743287339439,\n        \"min\": 50.0,\n        \"max\": 91.0,\n        \"num_unique_values\": 89,\n        \"samples\": [\n          71.72,\n          76.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"degree_t\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Sci&Tech\",\n          \"Comm&Mgmt\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"workex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yes\",\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"etest_p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.275956401653835,\n        \"min\": 50.0,\n        \"max\": 98.0,\n        \"num_unique_values\": 100,\n        \"samples\": [\n          93.4,\n          69.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"specialisation\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Mkt&Fin\",\n          \"Mkt&HR\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mba_p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.8333845806838,\n        \"min\": 51.21,\n        \"max\": 77.89,\n        \"num_unique_values\": 205,\n        \"samples\": [\n          64.66,\n          52.21\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Not Placed\",\n          \"Placed\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"salary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 93457.45241958875,\n        \"min\": 200000.0,\n        \"max\": 940000.0,\n        \"num_unique_values\": 45,\n        \"samples\": [\n          255000.0,\n          336000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe","variable_name":"dataset"},"text/html":["\n","  <div id=\"df-283518d0-b86a-4402-a141-45f9740540f9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sl_no</th>\n","      <th>gender</th>\n","      <th>ssc_p</th>\n","      <th>ssc_b</th>\n","      <th>hsc_p</th>\n","      <th>hsc_b</th>\n","      <th>hsc_s</th>\n","      <th>degree_p</th>\n","      <th>degree_t</th>\n","      <th>workex</th>\n","      <th>etest_p</th>\n","      <th>specialisation</th>\n","      <th>mba_p</th>\n","      <th>status</th>\n","      <th>salary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>M</td>\n","      <td>67.00</td>\n","      <td>Others</td>\n","      <td>91.00</td>\n","      <td>Others</td>\n","      <td>Commerce</td>\n","      <td>58.00</td>\n","      <td>Sci&amp;Tech</td>\n","      <td>No</td>\n","      <td>55.0</td>\n","      <td>Mkt&amp;HR</td>\n","      <td>58.80</td>\n","      <td>Placed</td>\n","      <td>270000.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>M</td>\n","      <td>79.33</td>\n","      <td>Central</td>\n","      <td>78.33</td>\n","      <td>Others</td>\n","      <td>Science</td>\n","      <td>77.48</td>\n","      <td>Sci&amp;Tech</td>\n","      <td>Yes</td>\n","      <td>86.5</td>\n","      <td>Mkt&amp;Fin</td>\n","      <td>66.28</td>\n","      <td>Placed</td>\n","      <td>200000.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>M</td>\n","      <td>65.00</td>\n","      <td>Central</td>\n","      <td>68.00</td>\n","      <td>Central</td>\n","      <td>Arts</td>\n","      <td>64.00</td>\n","      <td>Comm&amp;Mgmt</td>\n","      <td>No</td>\n","      <td>75.0</td>\n","      <td>Mkt&amp;Fin</td>\n","      <td>57.80</td>\n","      <td>Placed</td>\n","      <td>250000.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>M</td>\n","      <td>56.00</td>\n","      <td>Central</td>\n","      <td>52.00</td>\n","      <td>Central</td>\n","      <td>Science</td>\n","      <td>52.00</td>\n","      <td>Sci&amp;Tech</td>\n","      <td>No</td>\n","      <td>66.0</td>\n","      <td>Mkt&amp;HR</td>\n","      <td>59.43</td>\n","      <td>Not Placed</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>M</td>\n","      <td>85.80</td>\n","      <td>Central</td>\n","      <td>73.60</td>\n","      <td>Central</td>\n","      <td>Commerce</td>\n","      <td>73.30</td>\n","      <td>Comm&amp;Mgmt</td>\n","      <td>No</td>\n","      <td>96.8</td>\n","      <td>Mkt&amp;Fin</td>\n","      <td>55.50</td>\n","      <td>Placed</td>\n","      <td>425000.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-283518d0-b86a-4402-a141-45f9740540f9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-283518d0-b86a-4402-a141-45f9740540f9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-283518d0-b86a-4402-a141-45f9740540f9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-24f52bba-0d9d-4daa-9026-2653c8182ab2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-24f52bba-0d9d-4daa-9026-2653c8182ab2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-24f52bba-0d9d-4daa-9026-2653c8182ab2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["   sl_no gender  ssc_p    ssc_b  hsc_p    hsc_b     hsc_s  degree_p  \\\n","0      1      M  67.00   Others  91.00   Others  Commerce     58.00   \n","1      2      M  79.33  Central  78.33   Others   Science     77.48   \n","2      3      M  65.00  Central  68.00  Central      Arts     64.00   \n","3      4      M  56.00  Central  52.00  Central   Science     52.00   \n","4      5      M  85.80  Central  73.60  Central  Commerce     73.30   \n","\n","    degree_t workex  etest_p specialisation  mba_p      status    salary  \n","0   Sci&Tech     No     55.0         Mkt&HR  58.80      Placed  270000.0  \n","1   Sci&Tech    Yes     86.5        Mkt&Fin  66.28      Placed  200000.0  \n","2  Comm&Mgmt     No     75.0        Mkt&Fin  57.80      Placed  250000.0  \n","3   Sci&Tech     No     66.0         Mkt&HR  59.43  Not Placed       NaN  \n","4  Comm&Mgmt     No     96.8        Mkt&Fin  55.50      Placed  425000.0  "]},"execution_count":5,"metadata":{},"output_type":"execute_result"}],"source":["dataset.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1735068540486,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"B31jky4sI4_x","outputId":"8a17d510-3aa2-464d-b86d-cb9559c8b698"},"outputs":[{"data":{"text/plain":["(215, 15)"]},"execution_count":6,"metadata":{},"output_type":"execute_result"}],"source":["dataset.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":554},"executionInfo":{"elapsed":253,"status":"ok","timestamp":1735068621289,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"9IcjkZPcJNvT","outputId":"d7c4dbdd-a0da-4796-fa7f-ef927fb1ee41"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>sl_no</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>gender</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ssc_p</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ssc_b</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>hsc_p</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>hsc_b</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>hsc_s</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>degree_p</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>degree_t</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>workex</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>etest_p</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>specialisation</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>mba_p</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>status</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>salary</th>\n","      <td>67</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"],"text/plain":["sl_no              0\n","gender             0\n","ssc_p              0\n","ssc_b              0\n","hsc_p              0\n","hsc_b              0\n","hsc_s              0\n","degree_p           0\n","degree_t           0\n","workex             0\n","etest_p            0\n","specialisation     0\n","mba_p              0\n","status             0\n","salary            67\n","dtype: int64"]},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":["# counting missing values\n","dataset.isnull().sum()"]},{"cell_type":"markdown","metadata":{"id":"Pq7HBPgtJzFw"},"source":["Central Tendencies\n","\n","1.Mean\n","\n","2.median\n","\n","3.mode"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":883},"executionInfo":{"elapsed":863,"status":"ok","timestamp":1735070227303,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"e4zRPcCYJdp8","outputId":"1c7dc364-e1cf-45de-bcc3-376068e96cca"},"outputs":[{"name":"stderr","output_type":"stream","text":["<ipython-input-18-68d9185a64f2>:3: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(dataset.salary)\n"]},{"data":{"text/plain":["<Axes: xlabel='salary', ylabel='Density'>"]},"execution_count":18,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["<Figure size 800x800 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["#analyse the distripution of the data in salary column\n","fig, ax = plt.subplots(figsize = (8,8))\n","sns.distplot(dataset.salary)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cRe16X4ALS5c"},"outputs":[],"source":["# replace the NAn with meadian (as there is outlier we can't use the mean because it will affect the result)\n","dataset.salary.fillna(dataset.salary.median(), inplace = True)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":554},"executionInfo":{"elapsed":373,"status":"ok","timestamp":1735070169063,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"HMx4S93iPGO0","outputId":"7f83a8e9-35a5-4a73-eab0-f51efe453234"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>sl_no</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>gender</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ssc_p</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ssc_b</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>hsc_p</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>hsc_b</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>hsc_s</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>degree_p</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>degree_t</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>workex</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>etest_p</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>specialisation</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>mba_p</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>status</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>salary</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"],"text/plain":["sl_no             0\n","gender            0\n","ssc_p             0\n","ssc_b             0\n","hsc_p             0\n","hsc_b             0\n","hsc_s             0\n","degree_p          0\n","degree_t          0\n","workex            0\n","etest_p           0\n","specialisation    0\n","mba_p             0\n","status            0\n","salary            0\n","dtype: int64"]},"execution_count":16,"metadata":{},"output_type":"execute_result"}],"source":["# cheking missing values again\n","dataset.isnull().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eburdWufPRQH"},"outputs":[],"source":["# filling missing values with mean value\n","dataset.salary.fillna(dataset.salary.mean(), inplace = True)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KRqWj8utQBj1"},"outputs":[],"source":["# filling missing values with mode value\n","dataset.salary.fillna(dataset.salary.mode(), inplace = True)"]},{"cell_type":"markdown","metadata":{"id":"rummVV-wQT_8"},"source":["Dropping method"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7ku2ercmQKAX"},"outputs":[],"source":["salary_dataset = pd.read_csv(\"/content/Placement_Dataset.csv\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":258,"status":"ok","timestamp":1735070508112,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"hBAa2HoyQlDt","outputId":"65d4d42c-4de6-4cf1-e6b1-509c5369f157"},"outputs":[{"data":{"text/plain":["(215, 15)"]},"execution_count":24,"metadata":{},"output_type":"execute_result"}],"source":["# checking the number of rows and columns\n","salary_dataset.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":554},"executionInfo":{"elapsed":272,"status":"ok","timestamp":1735070575878,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"1fXoDwTqQt_m","outputId":"62fb9238-a7e8-4878-e156-b3fc111dcd7f"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>sl_no</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>gender</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ssc_p</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ssc_b</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>hsc_p</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>hsc_b</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>hsc_s</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>degree_p</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>degree_t</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>workex</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>etest_p</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>specialisation</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>mba_p</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>status</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>salary</th>\n","      <td>67</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"],"text/plain":["sl_no              0\n","gender             0\n","ssc_p              0\n","ssc_b              0\n","hsc_p              0\n","hsc_b              0\n","hsc_s              0\n","degree_p           0\n","degree_t           0\n","workex             0\n","etest_p            0\n","specialisation     0\n","mba_p              0\n","status             0\n","salary            67\n","dtype: int64"]},"execution_count":25,"metadata":{},"output_type":"execute_result"}],"source":["# cheking the missing values\n","salary_dataset.isnull().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yok9-uqiQ-oA"},"outputs":[],"source":["#Dropping missing values\n","# (any) means that any missing valus will be removed\n","salary_dataset = salary_dataset.dropna(how = \"any\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":554},"executionInfo":{"elapsed":229,"status":"ok","timestamp":1735070726292,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"7OT6nweGRYsl","outputId":"07096b0d-43ff-46dc-c0dd-5fb0f46148a9"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>sl_no</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>gender</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ssc_p</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ssc_b</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>hsc_p</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>hsc_b</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>hsc_s</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>degree_p</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>degree_t</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>workex</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>etest_p</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>specialisation</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>mba_p</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>status</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>salary</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"],"text/plain":["sl_no             0\n","gender            0\n","ssc_p             0\n","ssc_b             0\n","hsc_p             0\n","hsc_b             0\n","hsc_s             0\n","degree_p          0\n","degree_t          0\n","workex            0\n","etest_p           0\n","specialisation    0\n","mba_p             0\n","status            0\n","salary            0\n","dtype: int64"]},"execution_count":27,"metadata":{},"output_type":"execute_result"}],"source":["#checking again the missing values\n","salary_dataset.isnull().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":263,"status":"ok","timestamp":1735070745942,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"7ECIacAnRjY8","outputId":"217e3faa-726c-4ac5-971e-632450689b1f"},"outputs":[{"data":{"text/plain":["(148, 15)"]},"execution_count":28,"metadata":{},"output_type":"execute_result"}],"source":["salary_dataset.shape"]},{"cell_type":"markdown","metadata":{"id":"xWq86zX-UgkD"},"source":["Data Standardization"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cf48RB4SRoKo"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.model_selection import train_test_split # to standardise the data set\n","from sklearn.model_selection import train_test_split # to help us staright is to test data\n","import sklearn.datasets # to take the data from\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jAtat6AyU382"},"outputs":[],"source":["# loading the dataset\n","dataset = sklearn.datasets.load_breast_cancer()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":258,"status":"ok","timestamp":1735072298022,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"UNaNYjMSXDRK","outputId":"025860df-b6e4-4044-e760-1a155348319e"},"outputs":[{"name":"stdout","output_type":"stream","text":["{'data': array([[1.799e+01, 1.038e+01, 1.228e+02, ..., 2.654e-01, 4.601e-01,\n","        1.189e-01],\n","       [2.057e+01, 1.777e+01, 1.329e+02, ..., 1.860e-01, 2.750e-01,\n","        8.902e-02],\n","       [1.969e+01, 2.125e+01, 1.300e+02, ..., 2.430e-01, 3.613e-01,\n","        8.758e-02],\n","       ...,\n","       [1.660e+01, 2.808e+01, 1.083e+02, ..., 1.418e-01, 2.218e-01,\n","        7.820e-02],\n","       [2.060e+01, 2.933e+01, 1.401e+02, ..., 2.650e-01, 4.087e-01,\n","        1.240e-01],\n","       [7.760e+00, 2.454e+01, 4.792e+01, ..., 0.000e+00, 2.871e-01,\n","        7.039e-02]]), 'target': array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,\n","       0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0,\n","       1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0,\n","       1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n","       1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n","       0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n","       1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1,\n","       1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0,\n","       0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0,\n","       1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1,\n","       1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0,\n","       0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n","       0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0,\n","       1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1,\n","       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1,\n","       1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,\n","       1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n","       1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1,\n","       1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1]), 'frame': None, 'target_names': array(['malignant', 'benign'], dtype='<U9'), 'DESCR': '.. _breast_cancer_dataset:\\n\\nBreast cancer wisconsin (diagnostic) dataset\\n--------------------------------------------\\n\\n**Data Set Characteristics:**\\n\\n:Number of Instances: 569\\n\\n:Number of Attributes: 30 numeric, predictive attributes and the class\\n\\n:Attribute Information:\\n    - radius (mean of distances from center to points on the perimeter)\\n    - texture (standard deviation of gray-scale values)\\n    - perimeter\\n    - area\\n    - smoothness (local variation in radius lengths)\\n    - compactness (perimeter^2 / area - 1.0)\\n    - concavity (severity of concave portions of the contour)\\n    - concave points (number of concave portions of the contour)\\n    - symmetry\\n    - fractal dimension (\"coastline approximation\" - 1)\\n\\n    The mean, standard error, and \"worst\" or largest (mean of the three\\n    worst/largest values) of these features were computed for each image,\\n    resulting in 30 features.  For instance, field 0 is Mean Radius, field\\n    10 is Radius SE, field 20 is Worst Radius.\\n\\n    - class:\\n            - WDBC-Malignant\\n            - WDBC-Benign\\n\\n:Summary Statistics:\\n\\n===================================== ====== ======\\n                                        Min    Max\\n===================================== ====== ======\\nradius (mean):                        6.981  28.11\\ntexture (mean):                       9.71   39.28\\nperimeter (mean):                     43.79  188.5\\narea (mean):                          143.5  2501.0\\nsmoothness (mean):                    0.053  0.163\\ncompactness (mean):                   0.019  0.345\\nconcavity (mean):                     0.0    0.427\\nconcave points (mean):                0.0    0.201\\nsymmetry (mean):                      0.106  0.304\\nfractal dimension (mean):             0.05   0.097\\nradius (standard error):              0.112  2.873\\ntexture (standard error):             0.36   4.885\\nperimeter (standard error):           0.757  21.98\\narea (standard error):                6.802  542.2\\nsmoothness (standard error):          0.002  0.031\\ncompactness (standard error):         0.002  0.135\\nconcavity (standard error):           0.0    0.396\\nconcave points (standard error):      0.0    0.053\\nsymmetry (standard error):            0.008  0.079\\nfractal dimension (standard error):   0.001  0.03\\nradius (worst):                       7.93   36.04\\ntexture (worst):                      12.02  49.54\\nperimeter (worst):                    50.41  251.2\\narea (worst):                         185.2  4254.0\\nsmoothness (worst):                   0.071  0.223\\ncompactness (worst):                  0.027  1.058\\nconcavity (worst):                    0.0    1.252\\nconcave points (worst):               0.0    0.291\\nsymmetry (worst):                     0.156  0.664\\nfractal dimension (worst):            0.055  0.208\\n===================================== ====== ======\\n\\n:Missing Attribute Values: None\\n\\n:Class Distribution: 212 - Malignant, 357 - Benign\\n\\n:Creator:  Dr. William H. Wolberg, W. Nick Street, Olvi L. Mangasarian\\n\\n:Donor: Nick Street\\n\\n:Date: November, 1995\\n\\nThis is a copy of UCI ML Breast Cancer Wisconsin (Diagnostic) datasets.\\nhttps://goo.gl/U2Uwz2\\n\\nFeatures are computed from a digitized image of a fine needle\\naspirate (FNA) of a breast mass.  They describe\\ncharacteristics of the cell nuclei present in the image.\\n\\nSeparating plane described above was obtained using\\nMultisurface Method-Tree (MSM-T) [K. P. Bennett, \"Decision Tree\\nConstruction Via Linear Programming.\" Proceedings of the 4th\\nMidwest Artificial Intelligence and Cognitive Science Society,\\npp. 97-101, 1992], a classification method which uses linear\\nprogramming to construct a decision tree.  Relevant features\\nwere selected using an exhaustive search in the space of 1-4\\nfeatures and 1-3 separating planes.\\n\\nThe actual linear program used to obtain the separating plane\\nin the 3-dimensional space is that described in:\\n[K. P. Bennett and O. L. Mangasarian: \"Robust Linear\\nProgramming Discrimination of Two Linearly Inseparable Sets\",\\nOptimization Methods and Software 1, 1992, 23-34].\\n\\nThis database is also available through the UW CS ftp server:\\n\\nftp ftp.cs.wisc.edu\\ncd math-prog/cpo-dataset/machine-learn/WDBC/\\n\\n.. dropdown:: References\\n\\n  - W.N. Street, W.H. Wolberg and O.L. Mangasarian. Nuclear feature extraction\\n    for breast tumor diagnosis. IS&T/SPIE 1993 International Symposium on\\n    Electronic Imaging: Science and Technology, volume 1905, pages 861-870,\\n    San Jose, CA, 1993.\\n  - O.L. Mangasarian, W.N. Street and W.H. Wolberg. Breast cancer diagnosis and\\n    prognosis via linear programming. Operations Research, 43(4), pages 570-577,\\n    July-August 1995.\\n  - W.H. Wolberg, W.N. Street, and O.L. Mangasarian. Machine learning techniques\\n    to diagnose breast cancer from fine-needle aspirates. Cancer Letters 77 (1994)\\n    163-171.\\n', 'feature_names': array(['mean radius', 'mean texture', 'mean perimeter', 'mean area',\n","       'mean smoothness', 'mean compactness', 'mean concavity',\n","       'mean concave points', 'mean symmetry', 'mean fractal dimension',\n","       'radius error', 'texture error', 'perimeter error', 'area error',\n","       'smoothness error', 'compactness error', 'concavity error',\n","       'concave points error', 'symmetry error',\n","       'fractal dimension error', 'worst radius', 'worst texture',\n","       'worst perimeter', 'worst area', 'worst smoothness',\n","       'worst compactness', 'worst concavity', 'worst concave points',\n","       'worst symmetry', 'worst fractal dimension'], dtype='<U23'), 'filename': 'breast_cancer.csv', 'data_module': 'sklearn.datasets.data'}\n"]}],"source":["print(dataset)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IiK1ztTIXjCr"},"outputs":[],"source":["# loading the data to pd data frame\n","df = pd.DataFrame(dataset.data, columns = dataset.feature_names)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":290},"executionInfo":{"elapsed":285,"status":"ok","timestamp":1735072579917,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"jLjS06KpYlcF","outputId":"1bb9bf0b-cec6-4a54-b840-7c66851f1a5b"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"},"text/html":["\n","  <div id=\"df-023fb250-157e-4758-8237-74b862eacdd2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mean radius</th>\n","      <th>mean texture</th>\n","      <th>mean perimeter</th>\n","      <th>mean area</th>\n","      <th>mean smoothness</th>\n","      <th>mean compactness</th>\n","      <th>mean concavity</th>\n","      <th>mean concave points</th>\n","      <th>mean symmetry</th>\n","      <th>mean fractal dimension</th>\n","      <th>...</th>\n","      <th>worst radius</th>\n","      <th>worst texture</th>\n","      <th>worst perimeter</th>\n","      <th>worst area</th>\n","      <th>worst smoothness</th>\n","      <th>worst compactness</th>\n","      <th>worst concavity</th>\n","      <th>worst concave points</th>\n","      <th>worst symmetry</th>\n","      <th>worst fractal dimension</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>17.99</td>\n","      <td>10.38</td>\n","      <td>122.80</td>\n","      <td>1001.0</td>\n","      <td>0.11840</td>\n","      <td>0.27760</td>\n","      <td>0.3001</td>\n","      <td>0.14710</td>\n","      <td>0.2419</td>\n","      <td>0.07871</td>\n","      <td>...</td>\n","      <td>25.38</td>\n","      <td>17.33</td>\n","      <td>184.60</td>\n","      <td>2019.0</td>\n","      <td>0.1622</td>\n","      <td>0.6656</td>\n","      <td>0.7119</td>\n","      <td>0.2654</td>\n","      <td>0.4601</td>\n","      <td>0.11890</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20.57</td>\n","      <td>17.77</td>\n","      <td>132.90</td>\n","      <td>1326.0</td>\n","      <td>0.08474</td>\n","      <td>0.07864</td>\n","      <td>0.0869</td>\n","      <td>0.07017</td>\n","      <td>0.1812</td>\n","      <td>0.05667</td>\n","      <td>...</td>\n","      <td>24.99</td>\n","      <td>23.41</td>\n","      <td>158.80</td>\n","      <td>1956.0</td>\n","      <td>0.1238</td>\n","      <td>0.1866</td>\n","      <td>0.2416</td>\n","      <td>0.1860</td>\n","      <td>0.2750</td>\n","      <td>0.08902</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>19.69</td>\n","      <td>21.25</td>\n","      <td>130.00</td>\n","      <td>1203.0</td>\n","      <td>0.10960</td>\n","      <td>0.15990</td>\n","      <td>0.1974</td>\n","      <td>0.12790</td>\n","      <td>0.2069</td>\n","      <td>0.05999</td>\n","      <td>...</td>\n","      <td>23.57</td>\n","      <td>25.53</td>\n","      <td>152.50</td>\n","      <td>1709.0</td>\n","      <td>0.1444</td>\n","      <td>0.4245</td>\n","      <td>0.4504</td>\n","      <td>0.2430</td>\n","      <td>0.3613</td>\n","      <td>0.08758</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>11.42</td>\n","      <td>20.38</td>\n","      <td>77.58</td>\n","      <td>386.1</td>\n","      <td>0.14250</td>\n","      <td>0.28390</td>\n","      <td>0.2414</td>\n","      <td>0.10520</td>\n","      <td>0.2597</td>\n","      <td>0.09744</td>\n","      <td>...</td>\n","      <td>14.91</td>\n","      <td>26.50</td>\n","      <td>98.87</td>\n","      <td>567.7</td>\n","      <td>0.2098</td>\n","      <td>0.8663</td>\n","      <td>0.6869</td>\n","      <td>0.2575</td>\n","      <td>0.6638</td>\n","      <td>0.17300</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20.29</td>\n","      <td>14.34</td>\n","      <td>135.10</td>\n","      <td>1297.0</td>\n","      <td>0.10030</td>\n","      <td>0.13280</td>\n","      <td>0.1980</td>\n","      <td>0.10430</td>\n","      <td>0.1809</td>\n","      <td>0.05883</td>\n","      <td>...</td>\n","      <td>22.54</td>\n","      <td>16.67</td>\n","      <td>152.20</td>\n","      <td>1575.0</td>\n","      <td>0.1374</td>\n","      <td>0.2050</td>\n","      <td>0.4000</td>\n","      <td>0.1625</td>\n","      <td>0.2364</td>\n","      <td>0.07678</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 30 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-023fb250-157e-4758-8237-74b862eacdd2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-023fb250-157e-4758-8237-74b862eacdd2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-023fb250-157e-4758-8237-74b862eacdd2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b9db622e-ac22-4b72-bb01-737017dc69c2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b9db622e-ac22-4b72-bb01-737017dc69c2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b9db622e-ac22-4b72-bb01-737017dc69c2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["   mean radius  mean texture  mean perimeter  mean area  mean smoothness  \\\n","0        17.99         10.38          122.80     1001.0          0.11840   \n","1        20.57         17.77          132.90     1326.0          0.08474   \n","2        19.69         21.25          130.00     1203.0          0.10960   \n","3        11.42         20.38           77.58      386.1          0.14250   \n","4        20.29         14.34          135.10     1297.0          0.10030   \n","\n","   mean compactness  mean concavity  mean concave points  mean symmetry  \\\n","0           0.27760          0.3001              0.14710         0.2419   \n","1           0.07864          0.0869              0.07017         0.1812   \n","2           0.15990          0.1974              0.12790         0.2069   \n","3           0.28390          0.2414              0.10520         0.2597   \n","4           0.13280          0.1980              0.10430         0.1809   \n","\n","   mean fractal dimension  ...  worst radius  worst texture  worst perimeter  \\\n","0                 0.07871  ...         25.38          17.33           184.60   \n","1                 0.05667  ...         24.99          23.41           158.80   \n","2                 0.05999  ...         23.57          25.53           152.50   \n","3                 0.09744  ...         14.91          26.50            98.87   \n","4                 0.05883  ...         22.54          16.67           152.20   \n","\n","   worst area  worst smoothness  worst compactness  worst concavity  \\\n","0      2019.0            0.1622             0.6656           0.7119   \n","1      1956.0            0.1238             0.1866           0.2416   \n","2      1709.0            0.1444             0.4245           0.4504   \n","3       567.7            0.2098             0.8663           0.6869   \n","4      1575.0            0.1374             0.2050           0.4000   \n","\n","   worst concave points  worst symmetry  worst fractal dimension  \n","0                0.2654          0.4601                  0.11890  \n","1                0.1860          0.2750                  0.08902  \n","2                0.2430          0.3613                  0.08758  \n","3                0.2575          0.6638                  0.17300  \n","4                0.1625          0.2364                  0.07678  \n","\n","[5 rows x 30 columns]"]},"execution_count":39,"metadata":{},"output_type":"execute_result"}],"source":["df.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":326,"status":"ok","timestamp":1735072680049,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"g2V7nK0_Yn6r","outputId":"06465841-260f-4739-af04-1a787a2a3c24"},"outputs":[{"data":{"text/plain":["(569, 30)"]},"execution_count":41,"metadata":{},"output_type":"execute_result"}],"source":["df.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NbnCrtJDY9uX"},"outputs":[],"source":["x = df\n","y = dataset.target"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":274,"status":"ok","timestamp":1735072934398,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"oF61sqZoZPqV","outputId":"aee90d0a-f38b-4655-b104-080d3f1f9d03"},"outputs":[{"name":"stdout","output_type":"stream","text":["     mean radius  mean texture  mean perimeter  mean area  mean smoothness  \\\n","0          17.99         10.38          122.80     1001.0          0.11840   \n","1          20.57         17.77          132.90     1326.0          0.08474   \n","2          19.69         21.25          130.00     1203.0          0.10960   \n","3          11.42         20.38           77.58      386.1          0.14250   \n","4          20.29         14.34          135.10     1297.0          0.10030   \n","..           ...           ...             ...        ...              ...   \n","564        21.56         22.39          142.00     1479.0          0.11100   \n","565        20.13         28.25          131.20     1261.0          0.09780   \n","566        16.60         28.08          108.30      858.1          0.08455   \n","567        20.60         29.33          140.10     1265.0          0.11780   \n","568         7.76         24.54           47.92      181.0          0.05263   \n","\n","     mean compactness  mean concavity  mean concave points  mean symmetry  \\\n","0             0.27760         0.30010              0.14710         0.2419   \n","1             0.07864         0.08690              0.07017         0.1812   \n","2             0.15990         0.19740              0.12790         0.2069   \n","3             0.28390         0.24140              0.10520         0.2597   \n","4             0.13280         0.19800              0.10430         0.1809   \n","..                ...             ...                  ...            ...   \n","564           0.11590         0.24390              0.13890         0.1726   \n","565           0.10340         0.14400              0.09791         0.1752   \n","566           0.10230         0.09251              0.05302         0.1590   \n","567           0.27700         0.35140              0.15200         0.2397   \n","568           0.04362         0.00000              0.00000         0.1587   \n","\n","     mean fractal dimension  ...  worst radius  worst texture  \\\n","0                   0.07871  ...        25.380          17.33   \n","1                   0.05667  ...        24.990          23.41   \n","2                   0.05999  ...        23.570          25.53   \n","3                   0.09744  ...        14.910          26.50   \n","4                   0.05883  ...        22.540          16.67   \n","..                      ...  ...           ...            ...   \n","564                 0.05623  ...        25.450          26.40   \n","565                 0.05533  ...        23.690          38.25   \n","566                 0.05648  ...        18.980          34.12   \n","567                 0.07016  ...        25.740          39.42   \n","568                 0.05884  ...         9.456          30.37   \n","\n","     worst perimeter  worst area  worst smoothness  worst compactness  \\\n","0             184.60      2019.0           0.16220            0.66560   \n","1             158.80      1956.0           0.12380            0.18660   \n","2             152.50      1709.0           0.14440            0.42450   \n","3              98.87       567.7           0.20980            0.86630   \n","4             152.20      1575.0           0.13740            0.20500   \n","..               ...         ...               ...                ...   \n","564           166.10      2027.0           0.14100            0.21130   \n","565           155.00      1731.0           0.11660            0.19220   \n","566           126.70      1124.0           0.11390            0.30940   \n","567           184.60      1821.0           0.16500            0.86810   \n","568            59.16       268.6           0.08996            0.06444   \n","\n","     worst concavity  worst concave points  worst symmetry  \\\n","0             0.7119                0.2654          0.4601   \n","1             0.2416                0.1860          0.2750   \n","2             0.4504                0.2430          0.3613   \n","3             0.6869                0.2575          0.6638   \n","4             0.4000                0.1625          0.2364   \n","..               ...                   ...             ...   \n","564           0.4107                0.2216          0.2060   \n","565           0.3215                0.1628          0.2572   \n","566           0.3403                0.1418          0.2218   \n","567           0.9387                0.2650          0.4087   \n","568           0.0000                0.0000          0.2871   \n","\n","     worst fractal dimension  \n","0                    0.11890  \n","1                    0.08902  \n","2                    0.08758  \n","3                    0.17300  \n","4                    0.07678  \n","..                       ...  \n","564                  0.07115  \n","565                  0.06637  \n","566                  0.07820  \n","567                  0.12400  \n","568                  0.07039  \n","\n","[569 rows x 30 columns]\n"]}],"source":["print(x)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":287,"status":"ok","timestamp":1735073462133,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"EYe6zwONZpqG","outputId":"2201ab3b-5437-4fd9-b5b8-55cf31a1a0cd"},"outputs":[{"name":"stdout","output_type":"stream","text":["[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n"," 1 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 0 0 1 0 0 1 1 1 1 0 1 0 0 1 1 1 1 0 1 0 0\n"," 1 0 1 0 0 1 1 1 0 0 1 0 0 0 1 1 1 0 1 1 0 0 1 1 1 0 0 1 1 1 1 0 1 1 0 1 1\n"," 1 1 1 1 1 1 0 0 0 1 0 0 1 1 1 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 0 1 1 1 1 0 1\n"," 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 1 0 1 1 0 0 1 1 0 0 1 1 1 1 0 1 1 0 0 0 1 0\n"," 1 0 1 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 1 0 1 0 1 1 0 1 0 0 0 0 1 1 0 0 1 1\n"," 1 0 1 1 1 1 1 0 0 1 1 0 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 0 1 0 0 0 0 0 0 0\n"," 0 0 0 0 0 0 0 1 1 1 1 1 1 0 1 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1\n"," 1 0 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 1 1\n"," 1 1 0 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0\n"," 0 1 0 0 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1\n"," 1 0 1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 0 1 1 1 1 1 0 1 1\n"," 0 1 0 1 1 0 1 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1\n"," 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 0 1 1 0 1 0 1 0 0\n"," 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n"," 1 1 1 1 1 1 1 0 0 0 0 0 0 1]\n"]}],"source":["print(y)"]},{"cell_type":"markdown","metadata":{"id":"NDIes21UaRGr"},"source":["Splitting the data into training data and test data"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cymCaw7YaHVG"},"outputs":[],"source":["x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 3)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":290,"status":"ok","timestamp":1735073536003,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"fEQB_TgvbgQ9","outputId":"35bd56a5-9c46-40e6-ab12-6d146d1f2e34"},"outputs":[{"name":"stdout","output_type":"stream","text":["(569, 30) (455, 30) (114, 30)\n"]}],"source":["print(x.shape, x_train.shape, x_test.shape)"]},{"cell_type":"markdown","metadata":{"id":"9kRHq_vtcXOJ"},"source":["Standardize the data"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":304,"status":"ok","timestamp":1735073590091,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"W9UQgty9cRNd","outputId":"005b542a-2021-43a0-fbea-988ac7863b03"},"outputs":[{"name":"stdout","output_type":"stream","text":["228.29740508276657\n"]}],"source":["print(dataset.data.std()) # if all the values are in one range in that case the standard daviation should be one"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dsfKEwtZceiE"},"outputs":[],"source":["scaler = StandardScaler()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"executionInfo":{"elapsed":464,"status":"ok","timestamp":1735073798820,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"zDsYN3UhdAbq","outputId":"a3c4b7c9-53a7-47b7-d1d9-c3be5415db91"},"outputs":[{"data":{"text/html":["<style>#sk-container-id-1 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: #000;\n","  --sklearn-color-text-muted: #666;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-1 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-1 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-1 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-1 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-1 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-1 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-1 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-1 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: flex;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","  align-items: start;\n","  justify-content: space-between;\n","  gap: 0.5em;\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label .caption {\n","  font-size: 0.6rem;\n","  font-weight: lighter;\n","  color: var(--sklearn-color-text-muted);\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"▸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-1 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"▾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-1 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-1 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-1 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-1 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-1 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 0.5em;\n","  text-align: center;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-1 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-1 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>StandardScaler()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>StandardScaler</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.preprocessing.StandardScaler.html\">?<span>Documentation for StandardScaler</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>StandardScaler()</pre></div> </div></div></div></div>"],"text/plain":["StandardScaler()"]},"execution_count":57,"metadata":{},"output_type":"execute_result"}],"source":["scaler.fit(x_train)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7yz5oN-vdRcb"},"outputs":[],"source":["x_train_standardized = scaler.transform(x_train)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":268,"status":"ok","timestamp":1735073995307,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"PawSG4nZdo-f","outputId":"c6e56e85-09dc-4000-9454-dae61f12e450"},"outputs":[{"name":"stdout","output_type":"stream","text":["[[ 1.40381088  1.79283426  1.37960065 ...  1.044121    0.52295995\n","   0.64990763]\n"," [ 1.16565505 -0.14461158  1.07121375 ...  0.5940779   0.44153782\n","  -0.85281516]\n"," [-0.0307278  -0.77271123 -0.09822185 ... -0.64047556 -0.31161687\n","  -0.69292805]\n"," ...\n"," [ 1.06478904  0.20084323  0.89267396 ...  0.01694621  3.06583565\n","  -1.29952679]\n"," [ 1.51308238  2.3170559   1.67987211 ...  1.14728703 -0.16599653\n","   0.82816016]\n"," [-0.73678981 -1.02636686 -0.74380549 ... -0.31826862 -0.40713129\n","  -0.38233653]]\n"]}],"source":["print(x_train_standardized)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HesbqnBWeBbj"},"outputs":[],"source":["x_test_standardized = scaler.transform(x_test)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":303,"status":"ok","timestamp":1735074154598,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"Kk2h4ov2ee-b","outputId":"acb14f9e-43c3-4287-a202-c397ac316c6c"},"outputs":[{"name":"stdout","output_type":"stream","text":["1.0\n"]}],"source":["print(x_train_standardized.std())"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":263,"status":"ok","timestamp":1735074179219,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"IouSTeUKei4y","outputId":"d7995774-e41e-4014-9aab-9f90ed993866"},"outputs":[{"name":"stdout","output_type":"stream","text":["0.8654541077212674\n"]}],"source":["print(x_test_standardized.std())"]},{"cell_type":"markdown","metadata":{"id":"KsxWWx7Sg082"},"source":["Label Encoding\n","\n","--> converting the Labels into numeric form"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"D6sCtQLFeuXH"},"outputs":[],"source":["# importing the libraries\n","import pandas as pd\n","from sklearn.preprocessing import LabelEncoder\n","import numpy as np"]},{"cell_type":"markdown","metadata":{"id":"xzS5GuAYhxxL"},"source":["Label Encoding of Breast Cancer Dataset"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Vy_8Cc2VhwSM"},"outputs":[],"source":["# loading the data from csv file to pd df\n","cancer_data = pd.read_csv(\"/content/data.csv\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":273},"executionInfo":{"elapsed":306,"status":"ok","timestamp":1735076718309,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"Rccd3OYUkGux","outputId":"bbea43ab-2416-484e-9811-fa0314941e96"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cancer_data"},"text/html":["\n","  <div id=\"df-a8898324-fe6c-47cb-9640-663508b238d9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>diagnosis</th>\n","      <th>radius_mean</th>\n","      <th>texture_mean</th>\n","      <th>perimeter_mean</th>\n","      <th>area_mean</th>\n","      <th>smoothness_mean</th>\n","      <th>compactness_mean</th>\n","      <th>concavity_mean</th>\n","      <th>concave points_mean</th>\n","      <th>...</th>\n","      <th>texture_worst</th>\n","      <th>perimeter_worst</th>\n","      <th>area_worst</th>\n","      <th>smoothness_worst</th>\n","      <th>compactness_worst</th>\n","      <th>concavity_worst</th>\n","      <th>concave points_worst</th>\n","      <th>symmetry_worst</th>\n","      <th>fractal_dimension_worst</th>\n","      <th>Unnamed: 32</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>842302</td>\n","      <td>M</td>\n","      <td>17.99</td>\n","      <td>10.38</td>\n","      <td>122.80</td>\n","      <td>1001.0</td>\n","      <td>0.11840</td>\n","      <td>0.27760</td>\n","      <td>0.3001</td>\n","      <td>0.14710</td>\n","      <td>...</td>\n","      <td>17.33</td>\n","      <td>184.60</td>\n","      <td>2019.0</td>\n","      <td>0.1622</td>\n","      <td>0.6656</td>\n","      <td>0.7119</td>\n","      <td>0.2654</td>\n","      <td>0.4601</td>\n","      <td>0.11890</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>842517</td>\n","      <td>M</td>\n","      <td>20.57</td>\n","      <td>17.77</td>\n","      <td>132.90</td>\n","      <td>1326.0</td>\n","      <td>0.08474</td>\n","      <td>0.07864</td>\n","      <td>0.0869</td>\n","      <td>0.07017</td>\n","      <td>...</td>\n","      <td>23.41</td>\n","      <td>158.80</td>\n","      <td>1956.0</td>\n","      <td>0.1238</td>\n","      <td>0.1866</td>\n","      <td>0.2416</td>\n","      <td>0.1860</td>\n","      <td>0.2750</td>\n","      <td>0.08902</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>84300903</td>\n","      <td>M</td>\n","      <td>19.69</td>\n","      <td>21.25</td>\n","      <td>130.00</td>\n","      <td>1203.0</td>\n","      <td>0.10960</td>\n","      <td>0.15990</td>\n","      <td>0.1974</td>\n","      <td>0.12790</td>\n","      <td>...</td>\n","      <td>25.53</td>\n","      <td>152.50</td>\n","      <td>1709.0</td>\n","      <td>0.1444</td>\n","      <td>0.4245</td>\n","      <td>0.4504</td>\n","      <td>0.2430</td>\n","      <td>0.3613</td>\n","      <td>0.08758</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>84348301</td>\n","      <td>M</td>\n","      <td>11.42</td>\n","      <td>20.38</td>\n","      <td>77.58</td>\n","      <td>386.1</td>\n","      <td>0.14250</td>\n","      <td>0.28390</td>\n","      <td>0.2414</td>\n","      <td>0.10520</td>\n","      <td>...</td>\n","      <td>26.50</td>\n","      <td>98.87</td>\n","      <td>567.7</td>\n","      <td>0.2098</td>\n","      <td>0.8663</td>\n","      <td>0.6869</td>\n","      <td>0.2575</td>\n","      <td>0.6638</td>\n","      <td>0.17300</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>84358402</td>\n","      <td>M</td>\n","      <td>20.29</td>\n","      <td>14.34</td>\n","      <td>135.10</td>\n","      <td>1297.0</td>\n","      <td>0.10030</td>\n","      <td>0.13280</td>\n","      <td>0.1980</td>\n","      <td>0.10430</td>\n","      <td>...</td>\n","      <td>16.67</td>\n","      <td>152.20</td>\n","      <td>1575.0</td>\n","      <td>0.1374</td>\n","      <td>0.2050</td>\n","      <td>0.4000</td>\n","      <td>0.1625</td>\n","      <td>0.2364</td>\n","      <td>0.07678</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 33 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a8898324-fe6c-47cb-9640-663508b238d9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a8898324-fe6c-47cb-9640-663508b238d9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a8898324-fe6c-47cb-9640-663508b238d9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b6c3a15b-d4bb-4072-bc3b-c0b80c7a467d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b6c3a15b-d4bb-4072-bc3b-c0b80c7a467d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b6c3a15b-d4bb-4072-bc3b-c0b80c7a467d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["         id diagnosis  radius_mean  texture_mean  perimeter_mean  area_mean  \\\n","0    842302         M        17.99         10.38          122.80     1001.0   \n","1    842517         M        20.57         17.77          132.90     1326.0   \n","2  84300903         M        19.69         21.25          130.00     1203.0   \n","3  84348301         M        11.42         20.38           77.58      386.1   \n","4  84358402         M        20.29         14.34          135.10     1297.0   \n","\n","   smoothness_mean  compactness_mean  concavity_mean  concave points_mean  \\\n","0          0.11840           0.27760          0.3001              0.14710   \n","1          0.08474           0.07864          0.0869              0.07017   \n","2          0.10960           0.15990          0.1974              0.12790   \n","3          0.14250           0.28390          0.2414              0.10520   \n","4          0.10030           0.13280          0.1980              0.10430   \n","\n","   ...  texture_worst  perimeter_worst  area_worst  smoothness_worst  \\\n","0  ...          17.33           184.60      2019.0            0.1622   \n","1  ...          23.41           158.80      1956.0            0.1238   \n","2  ...          25.53           152.50      1709.0            0.1444   \n","3  ...          26.50            98.87       567.7            0.2098   \n","4  ...          16.67           152.20      1575.0            0.1374   \n","\n","   compactness_worst  concavity_worst  concave points_worst  symmetry_worst  \\\n","0             0.6656           0.7119                0.2654          0.4601   \n","1             0.1866           0.2416                0.1860          0.2750   \n","2             0.4245           0.4504                0.2430          0.3613   \n","3             0.8663           0.6869                0.2575          0.6638   \n","4             0.2050           0.4000                0.1625          0.2364   \n","\n","   fractal_dimension_worst  Unnamed: 32  \n","0                  0.11890          NaN  \n","1                  0.08902          NaN  \n","2                  0.08758          NaN  \n","3                  0.17300          NaN  \n","4                  0.07678          NaN  \n","\n","[5 rows x 33 columns]"]},"execution_count":73,"metadata":{},"output_type":"execute_result"}],"source":["cancer_data.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"executionInfo":{"elapsed":297,"status":"ok","timestamp":1735076749024,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"vxEd6af2kS4z","outputId":"16ba9170-5949-4bb6-e589-c4e3778add8c"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>diagnosis</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>B</th>\n","      <td>357</td>\n","    </tr>\n","    <tr>\n","      <th>M</th>\n","      <td>212</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"],"text/plain":["diagnosis\n","B    357\n","M    212\n","Name: count, dtype: int64"]},"execution_count":75,"metadata":{},"output_type":"execute_result"}],"source":["# finding the count of different labels\n","cancer_data[\"diagnosis\"].value_counts()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zjBtCcbdoCos"},"outputs":[],"source":["# load the label encoder function\n","label_encode = LabelEncoder()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"lfzcybqrpTS_"},"outputs":[],"source":["labels = label_encode.fit_transform(cancer_data.diagnosis)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eE_7VF-Gph7o"},"outputs":[],"source":["# appending th elabels to the DataFrame\n","cancer_data[\"target\"] = labels"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":273},"executionInfo":{"elapsed":332,"status":"ok","timestamp":1735077119514,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"K7dOhYHepxpK","outputId":"2cbff6c5-9f7e-40ba-9a7e-c09889ae24b4"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cancer_data"},"text/html":["\n","  <div id=\"df-49ea52e3-2eb7-4e00-93ab-7e36173779bd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>diagnosis</th>\n","      <th>radius_mean</th>\n","      <th>texture_mean</th>\n","      <th>perimeter_mean</th>\n","      <th>area_mean</th>\n","      <th>smoothness_mean</th>\n","      <th>compactness_mean</th>\n","      <th>concavity_mean</th>\n","      <th>concave points_mean</th>\n","      <th>...</th>\n","      <th>perimeter_worst</th>\n","      <th>area_worst</th>\n","      <th>smoothness_worst</th>\n","      <th>compactness_worst</th>\n","      <th>concavity_worst</th>\n","      <th>concave points_worst</th>\n","      <th>symmetry_worst</th>\n","      <th>fractal_dimension_worst</th>\n","      <th>Unnamed: 32</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>842302</td>\n","      <td>M</td>\n","      <td>17.99</td>\n","      <td>10.38</td>\n","      <td>122.80</td>\n","      <td>1001.0</td>\n","      <td>0.11840</td>\n","      <td>0.27760</td>\n","      <td>0.3001</td>\n","      <td>0.14710</td>\n","      <td>...</td>\n","      <td>184.60</td>\n","      <td>2019.0</td>\n","      <td>0.1622</td>\n","      <td>0.6656</td>\n","      <td>0.7119</td>\n","      <td>0.2654</td>\n","      <td>0.4601</td>\n","      <td>0.11890</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>842517</td>\n","      <td>M</td>\n","      <td>20.57</td>\n","      <td>17.77</td>\n","      <td>132.90</td>\n","      <td>1326.0</td>\n","      <td>0.08474</td>\n","      <td>0.07864</td>\n","      <td>0.0869</td>\n","      <td>0.07017</td>\n","      <td>...</td>\n","      <td>158.80</td>\n","      <td>1956.0</td>\n","      <td>0.1238</td>\n","      <td>0.1866</td>\n","      <td>0.2416</td>\n","      <td>0.1860</td>\n","      <td>0.2750</td>\n","      <td>0.08902</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>84300903</td>\n","      <td>M</td>\n","      <td>19.69</td>\n","      <td>21.25</td>\n","      <td>130.00</td>\n","      <td>1203.0</td>\n","      <td>0.10960</td>\n","      <td>0.15990</td>\n","      <td>0.1974</td>\n","      <td>0.12790</td>\n","      <td>...</td>\n","      <td>152.50</td>\n","      <td>1709.0</td>\n","      <td>0.1444</td>\n","      <td>0.4245</td>\n","      <td>0.4504</td>\n","      <td>0.2430</td>\n","      <td>0.3613</td>\n","      <td>0.08758</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>84348301</td>\n","      <td>M</td>\n","      <td>11.42</td>\n","      <td>20.38</td>\n","      <td>77.58</td>\n","      <td>386.1</td>\n","      <td>0.14250</td>\n","      <td>0.28390</td>\n","      <td>0.2414</td>\n","      <td>0.10520</td>\n","      <td>...</td>\n","      <td>98.87</td>\n","      <td>567.7</td>\n","      <td>0.2098</td>\n","      <td>0.8663</td>\n","      <td>0.6869</td>\n","      <td>0.2575</td>\n","      <td>0.6638</td>\n","      <td>0.17300</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>84358402</td>\n","      <td>M</td>\n","      <td>20.29</td>\n","      <td>14.34</td>\n","      <td>135.10</td>\n","      <td>1297.0</td>\n","      <td>0.10030</td>\n","      <td>0.13280</td>\n","      <td>0.1980</td>\n","      <td>0.10430</td>\n","      <td>...</td>\n","      <td>152.20</td>\n","      <td>1575.0</td>\n","      <td>0.1374</td>\n","      <td>0.2050</td>\n","      <td>0.4000</td>\n","      <td>0.1625</td>\n","      <td>0.2364</td>\n","      <td>0.07678</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 34 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-49ea52e3-2eb7-4e00-93ab-7e36173779bd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-49ea52e3-2eb7-4e00-93ab-7e36173779bd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-49ea52e3-2eb7-4e00-93ab-7e36173779bd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f5c5dde0-624e-49ec-bb27-d8c742f37673\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f5c5dde0-624e-49ec-bb27-d8c742f37673')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f5c5dde0-624e-49ec-bb27-d8c742f37673 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["         id diagnosis  radius_mean  texture_mean  perimeter_mean  area_mean  \\\n","0    842302         M        17.99         10.38          122.80     1001.0   \n","1    842517         M        20.57         17.77          132.90     1326.0   \n","2  84300903         M        19.69         21.25          130.00     1203.0   \n","3  84348301         M        11.42         20.38           77.58      386.1   \n","4  84358402         M        20.29         14.34          135.10     1297.0   \n","\n","   smoothness_mean  compactness_mean  concavity_mean  concave points_mean  \\\n","0          0.11840           0.27760          0.3001              0.14710   \n","1          0.08474           0.07864          0.0869              0.07017   \n","2          0.10960           0.15990          0.1974              0.12790   \n","3          0.14250           0.28390          0.2414              0.10520   \n","4          0.10030           0.13280          0.1980              0.10430   \n","\n","   ...  perimeter_worst  area_worst  smoothness_worst  compactness_worst  \\\n","0  ...           184.60      2019.0            0.1622             0.6656   \n","1  ...           158.80      1956.0            0.1238             0.1866   \n","2  ...           152.50      1709.0            0.1444             0.4245   \n","3  ...            98.87       567.7            0.2098             0.8663   \n","4  ...           152.20      1575.0            0.1374             0.2050   \n","\n","   concavity_worst  concave points_worst  symmetry_worst  \\\n","0           0.7119                0.2654          0.4601   \n","1           0.2416                0.1860          0.2750   \n","2           0.4504                0.2430          0.3613   \n","3           0.6869                0.2575          0.6638   \n","4           0.4000                0.1625          0.2364   \n","\n","   fractal_dimension_worst  Unnamed: 32  target  \n","0                  0.11890          NaN       1  \n","1                  0.08902          NaN       1  \n","2                  0.08758          NaN       1  \n","3                  0.17300          NaN       1  \n","4                  0.07678          NaN       1  \n","\n","[5 rows x 34 columns]"]},"execution_count":79,"metadata":{},"output_type":"execute_result"}],"source":["cancer_data.head()"]},{"cell_type":"markdown","metadata":{"id":"_l7mUjmiqCGp"},"source":["--> 0 -> Benign\n","\n","--> 1 -> Malignant"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"executionInfo":{"elapsed":304,"status":"ok","timestamp":1735077253412,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"YRF02FlSp8NA","outputId":"226426ee-b3a7-4db2-9c6d-bb4e326053e4"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>target</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>357</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>212</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"],"text/plain":["target\n","0    357\n","1    212\n","Name: count, dtype: int64"]},"execution_count":80,"metadata":{},"output_type":"execute_result"}],"source":["cancer_data[\"target\"].value_counts()"]},{"cell_type":"markdown","metadata":{"id":"usl-8Msiq_mb"},"source":["Label Encoding of iris data"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Jr8IkA8gqc4H"},"outputs":[],"source":["Iris_data = pd.read_csv(\"/content/iris_data.csv\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":313},"executionInfo":{"elapsed":303,"status":"ok","timestamp":1735077446075,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"17pOirQzrIx8","outputId":"e23541db-3f77-4397-a5c6-d22878510a15"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"summary":"{\n  \"name\": \"Iris_data\",\n  \"rows\": 150,\n  \"fields\": [\n    {\n      \"column\": \"Id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 43,\n        \"min\": 1,\n        \"max\": 150,\n        \"num_unique_values\": 150,\n        \"samples\": [\n          74,\n          19,\n          119\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SepalLengthCm\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8280661279778629,\n        \"min\": 4.3,\n        \"max\": 7.9,\n        \"num_unique_values\": 35,\n        \"samples\": [\n          6.2,\n          4.5,\n          5.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SepalWidthCm\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4335943113621737,\n        \"min\": 2.0,\n        \"max\": 4.4,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          2.3,\n          4.0,\n          3.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PetalLengthCm\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7644204199522617,\n        \"min\": 1.0,\n        \"max\": 6.9,\n        \"num_unique_values\": 43,\n        \"samples\": [\n          6.7,\n          3.8,\n          3.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PetalWidthCm\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7631607417008414,\n        \"min\": 0.1,\n        \"max\": 2.5,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          0.2,\n          1.2,\n          1.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Species\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Iris-setosa\",\n          \"Iris-versicolor\",\n          \"Iris-virginica\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}","type":"dataframe","variable_name":"Iris_data"},"text/html":["\n","  <div id=\"df-a0e0d654-2d2c-40f3-8a94-583010b3cf2e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>SepalLengthCm</th>\n","      <th>SepalWidthCm</th>\n","      <th>PetalLengthCm</th>\n","      <th>PetalWidthCm</th>\n","      <th>Species</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a0e0d654-2d2c-40f3-8a94-583010b3cf2e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a0e0d654-2d2c-40f3-8a94-583010b3cf2e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a0e0d654-2d2c-40f3-8a94-583010b3cf2e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6b4c5584-0cb9-4fa6-b0bb-8274d6caf77e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6b4c5584-0cb9-4fa6-b0bb-8274d6caf77e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6b4c5584-0cb9-4fa6-b0bb-8274d6caf77e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["   Id  SepalLengthCm  SepalWidthCm  PetalLengthCm  PetalWidthCm      Species\n","0   1            5.1           3.5            1.4           0.2  Iris-setosa\n","1   2            4.9           3.0            1.4           0.2  Iris-setosa\n","2   3            4.7           3.2            1.3           0.2  Iris-setosa\n","3   4            4.6           3.1            1.5           0.2  Iris-setosa\n","4   5            5.0           3.6            1.4           0.2  Iris-setosa"]},"execution_count":82,"metadata":{},"output_type":"execute_result"}],"source":["Iris_data.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":210},"executionInfo":{"elapsed":257,"status":"ok","timestamp":1735077555646,"user":{"displayName":"Mennatullah Ibrahim","userId":"12503366848613211978"},"user_tz":-60},"id":"VllCVAunrL7Y","outputId":"b273dec1-9926-4928-a121-e821c34f9de7"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Species</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Iris-setosa</th>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>Iris-versicolor</th>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>Iris-virginica</th>\n","      <td>50</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"],"text/plain":["Species\n","Iris-setosa        50\n","Iris-versicolor    50\n","Iris-virginica     50\n","Name: count, dtype: int64"]},"execution_count":83,"metadata":{},"output_type":"execute_result"}],"source":["# in order to transform th elabel data to numeric value, we need to count the dta of the column we want fisrt\n","Iris_data[\"Species\"].value_counts()"]},{"cell_type":"markdown","source":["Li"],"metadata":{"id":"FAAjl8US4P9p"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"pi6-_2orrmsC"},"outputs":[],"source":[]}],"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPVuEz4GG/37LpFq7EE2jXC"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}